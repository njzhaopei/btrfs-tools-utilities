!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACL_EA_VERSION	btrfs-convert.c	667;"	d	file:
ACTIVE_SIZE	snapshot-scan.h	8;"	d
ACTIVE_SIZE	subvolume.h	3;"	d
AM_CFLAGS	Makefile	/^AM_CFLAGS = -Wall -D_FILE_OFFSET_BITS=64 -DBTRFS_FLAT_INCLUDES -fno-strict-aliasing -fPIC$/;"	m
AR	Makefile	/^AR = ar$/;"	m
ARGV0_BUF_SIZE	commands.h	17;"	d
ARRAY_SIZE	kerncompat.h	47;"	d
AnnoteFinder	show-blocks	/^class AnnoteFinder:$/;"	c
BITOP_MASK	kerncompat.h	128;"	d
BITOP_WORD	bitops.h	67;"	d
BITOP_WORD	kerncompat.h	129;"	d
BITS_PER_BITMAP	free-space-cache.c	29;"	d	file:
BITS_PER_BYTE	bitops.h	6;"	d
BITS_PER_LONG	kerncompat.h	41;"	d
BITS_TO_LONGS	bitops.h	7;"	d
BITS_TO_U32	bitops.h	9;"	d
BITS_TO_U64	bitops.h	8;"	d
BLKDISCARD	utils.c	52;"	d	file:
BLOCK_GROUP_DATA	extent_io.h	45;"	d
BLOCK_GROUP_DIRTY	extent_io.h	49;"	d
BLOCK_GROUP_METADATA	extent_io.h	46;"	d
BLOCK_GROUP_SYSTEM	extent_io.h	47;"	d
BLOCK_MASK	btrfs-image.c	43;"	d	file:
BLOCK_SIZE	btrfs-image.c	42;"	d	file:
BTRFS_ARG_BLKDEV	utils.h	38;"	d
BTRFS_ARG_MNTPOINT	utils.h	36;"	d
BTRFS_ARG_UNKNOWN	utils.h	35;"	d
BTRFS_ARG_UUID	utils.h	37;"	d
BTRFS_AVAIL_ALLOC_BIT_SINGLE	ctree.h	849;"	d
BTRFS_BACKREF_REV_MASK	ctree.h	313;"	d
BTRFS_BACKREF_REV_MAX	ctree.h	311;"	d
BTRFS_BACKREF_REV_SHIFT	ctree.h	312;"	d
BTRFS_BALANCE_ARGS_CONVERT	volumes.h	137;"	d
BTRFS_BALANCE_ARGS_DEVID	volumes.h	128;"	d
BTRFS_BALANCE_ARGS_DRANGE	volumes.h	129;"	d
BTRFS_BALANCE_ARGS_PROFILES	volumes.h	126;"	d
BTRFS_BALANCE_ARGS_SOFT	volumes.h	138;"	d
BTRFS_BALANCE_ARGS_USAGE	volumes.h	127;"	d
BTRFS_BALANCE_ARGS_VRANGE	volumes.h	130;"	d
BTRFS_BALANCE_CTL_CANCEL	ioctl.h	177;"	d
BTRFS_BALANCE_CTL_PAUSE	ioctl.h	176;"	d
BTRFS_BALANCE_CTL_RESUME	ioctl.h	178;"	d
BTRFS_BALANCE_DATA	volumes.h	112;"	d
BTRFS_BALANCE_FORCE	volumes.h	120;"	d
BTRFS_BALANCE_ITEM_KEY	ctree.h	1111;"	d
BTRFS_BALANCE_METADATA	volumes.h	114;"	d
BTRFS_BALANCE_OBJECTID	ctree.h	78;"	d
BTRFS_BALANCE_RESUME	volumes.h	121;"	d
BTRFS_BALANCE_STATE_CANCEL_REQ	ioctl.h	208;"	d
BTRFS_BALANCE_STATE_PAUSE_REQ	ioctl.h	207;"	d
BTRFS_BALANCE_STATE_RUNNING	ioctl.h	206;"	d
BTRFS_BALANCE_SYSTEM	volumes.h	113;"	d
BTRFS_BALANCE_TYPE_MASK	volumes.h	116;"	d
BTRFS_BLOCK_FLAG_FULL_BACKREF	ctree.h	576;"	d
BTRFS_BLOCK_GROUP_DATA	ctree.h	826;"	d
BTRFS_BLOCK_GROUP_DUP	ctree.h	831;"	d
BTRFS_BLOCK_GROUP_ITEM_KEY	ctree.h	1105;"	d
BTRFS_BLOCK_GROUP_METADATA	ctree.h	828;"	d
BTRFS_BLOCK_GROUP_PROFILE_MASK	ctree.h	841;"	d
BTRFS_BLOCK_GROUP_RAID0	ctree.h	829;"	d
BTRFS_BLOCK_GROUP_RAID1	ctree.h	830;"	d
BTRFS_BLOCK_GROUP_RAID10	ctree.h	832;"	d
BTRFS_BLOCK_GROUP_RAID5	ctree.h	833;"	d
BTRFS_BLOCK_GROUP_RAID6	ctree.h	834;"	d
BTRFS_BLOCK_GROUP_RESERVED	ctree.h	835;"	d
BTRFS_BLOCK_GROUP_SYSTEM	ctree.h	827;"	d
BTRFS_BLOCK_GROUP_TYPE_MASK	ctree.h	837;"	d
BTRFS_BLOCK_RESERVED_1M_FOR_SUPER	ctree.h	823;"	d
BTRFS_BUILD_VERSION	version.h	3;"	d
BTRFS_CHUNK_ITEM_KEY	ctree.h	1109;"	d
BTRFS_CHUNK_TREE_OBJECTID	ctree.h	57;"	d
BTRFS_CHUNK_TREE_REBUILD_ABORTED	cmds-chunk.c	44;"	d	file:
BTRFS_COMPAT_EXTENT_TREE_V0	ctree.h	45;"	d
BTRFS_COMPRESS_LAST	ctree.h	/^	BTRFS_COMPRESS_LAST  = 3,$/;"	e	enum:__anon9
BTRFS_COMPRESS_LZO	ctree.h	/^	BTRFS_COMPRESS_LZO   = 2,$/;"	e	enum:__anon9
BTRFS_COMPRESS_NONE	ctree.h	/^	BTRFS_COMPRESS_NONE  = 0,$/;"	e	enum:__anon9
BTRFS_COMPRESS_TYPES	ctree.h	/^	BTRFS_COMPRESS_TYPES = 2,$/;"	e	enum:__anon9
BTRFS_COMPRESS_ZLIB	ctree.h	/^	BTRFS_COMPRESS_ZLIB  = 1,$/;"	e	enum:__anon9
BTRFS_CRC32_SIZE	ctree.h	153;"	d
BTRFS_CSUM_ITEM_KEY	ctree.h	1051;"	d
BTRFS_CSUM_SIZE	ctree.h	145;"	d
BTRFS_CSUM_TREE_OBJECTID	ctree.h	71;"	d
BTRFS_CSUM_TYPE_CRC32	ctree.h	148;"	d
BTRFS_DATA_RELOC_TREE_OBJECTID	ctree.h	89;"	d
BTRFS_DEFRAG_RANGE_COMPRESS	ioctl.h	286;"	d
BTRFS_DEFRAG_RANGE_START_IO	ioctl.h	287;"	d
BTRFS_DEVICE_PATH_NAME_MAX	ioctl.h	39;"	d
BTRFS_DEV_EXTENT_KEY	ctree.h	1107;"	d
BTRFS_DEV_ITEMS_OBJECTID	ctree.h	123;"	d
BTRFS_DEV_ITEM_KEY	ctree.h	1108;"	d
BTRFS_DEV_REPLACE_KEY	ctree.h	1131;"	d
BTRFS_DEV_STATS_KEY	ctree.h	1125;"	d
BTRFS_DEV_STATS_RESET	ioctl.h	420;"	d
BTRFS_DEV_STAT_CORRUPTION_ERRS	ioctl.h	/^	BTRFS_DEV_STAT_CORRUPTION_ERRS, \/* checksum error, bytenr error or$/;"	e	enum:btrfs_dev_stat_values
BTRFS_DEV_STAT_FLUSH_ERRS	ioctl.h	/^	BTRFS_DEV_STAT_FLUSH_ERRS, \/* EIO or EREMOTEIO from lower layers *\/$/;"	e	enum:btrfs_dev_stat_values
BTRFS_DEV_STAT_GENERATION_ERRS	ioctl.h	/^	BTRFS_DEV_STAT_GENERATION_ERRS, \/* an indication that blocks have not$/;"	e	enum:btrfs_dev_stat_values
BTRFS_DEV_STAT_READ_ERRS	ioctl.h	/^	BTRFS_DEV_STAT_READ_ERRS, \/* EIO or EREMOTEIO from lower layers *\/$/;"	e	enum:btrfs_dev_stat_values
BTRFS_DEV_STAT_VALUES_MAX	ioctl.h	/^	BTRFS_DEV_STAT_VALUES_MAX$/;"	e	enum:btrfs_dev_stat_values
BTRFS_DEV_STAT_WRITE_ERRS	ioctl.h	/^	BTRFS_DEV_STAT_WRITE_ERRS, \/* EIO or EREMOTEIO from lower layers *\/$/;"	e	enum:btrfs_dev_stat_values
BTRFS_DEV_TREE_OBJECTID	ctree.h	63;"	d
BTRFS_DIR_INDEX_KEY	ctree.h	1041;"	d
BTRFS_DIR_ITEM_KEY	ctree.h	1040;"	d
BTRFS_DIR_LOG_INDEX_KEY	ctree.h	1035;"	d
BTRFS_DIR_LOG_ITEM_KEY	ctree.h	1034;"	d
BTRFS_EMPTY_DIR_SIZE	ctree.h	154;"	d
BTRFS_ENCRYPTION_LAST	ctree.h	/^	BTRFS_ENCRYPTION_LAST = 1,$/;"	e	enum:__anon10
BTRFS_ENCRYPTION_NONE	ctree.h	/^	BTRFS_ENCRYPTION_NONE = 0,$/;"	e	enum:__anon10
BTRFS_ERROR_DEV_EXCL_RUN_IN_PROGRESS	ioctl.h	/^	BTRFS_ERROR_DEV_EXCL_RUN_IN_PROGRESS$/;"	e	enum:btrfs_err_code
BTRFS_ERROR_DEV_MISSING_NOT_FOUND	ioctl.h	/^	BTRFS_ERROR_DEV_MISSING_NOT_FOUND,$/;"	e	enum:btrfs_err_code
BTRFS_ERROR_DEV_ONLY_WRITABLE	ioctl.h	/^	BTRFS_ERROR_DEV_ONLY_WRITABLE,$/;"	e	enum:btrfs_err_code
BTRFS_ERROR_DEV_RAID10_MIN_NOT_MET	ioctl.h	/^	BTRFS_ERROR_DEV_RAID10_MIN_NOT_MET,$/;"	e	enum:btrfs_err_code
BTRFS_ERROR_DEV_RAID1_MIN_NOT_MET	ioctl.h	/^	BTRFS_ERROR_DEV_RAID1_MIN_NOT_MET,$/;"	e	enum:btrfs_err_code
BTRFS_ERROR_DEV_RAID5_MIN_NOT_MET	ioctl.h	/^	BTRFS_ERROR_DEV_RAID5_MIN_NOT_MET,$/;"	e	enum:btrfs_err_code
BTRFS_ERROR_DEV_RAID6_MIN_NOT_MET	ioctl.h	/^	BTRFS_ERROR_DEV_RAID6_MIN_NOT_MET,$/;"	e	enum:btrfs_err_code
BTRFS_ERROR_DEV_TGT_REPLACE	ioctl.h	/^	BTRFS_ERROR_DEV_TGT_REPLACE,$/;"	e	enum:btrfs_err_code
BTRFS_EXTENT_CSUM_KEY	ctree.h	1056;"	d
BTRFS_EXTENT_CSUM_OBJECTID	ctree.h	96;"	d
BTRFS_EXTENT_DATA_KEY	ctree.h	1046;"	d
BTRFS_EXTENT_DATA_REF_KEY	ctree.h	1091;"	d
BTRFS_EXTENT_FLAG_DATA	ctree.h	570;"	d
BTRFS_EXTENT_FLAG_TREE_BLOCK	ctree.h	571;"	d
BTRFS_EXTENT_ITEM_KEY	ctree.h	1081;"	d
BTRFS_EXTENT_REF_V0_KEY	ctree.h	1094;"	d
BTRFS_EXTENT_TREE_OBJECTID	ctree.h	51;"	d
BTRFS_FEATURE_COMPAT_RO_SUPP	ctree.h	476;"	d
BTRFS_FEATURE_COMPAT_SUPP	ctree.h	475;"	d
BTRFS_FEATURE_INCOMPAT_BIG_METADATA	ctree.h	469;"	d
BTRFS_FEATURE_INCOMPAT_COMPRESS_LZO	ctree.h	455;"	d
BTRFS_FEATURE_INCOMPAT_COMPRESS_LZOv2	ctree.h	463;"	d
BTRFS_FEATURE_INCOMPAT_DEFAULT_SUBVOL	ctree.h	453;"	d
BTRFS_FEATURE_INCOMPAT_EXTENDED_IREF	ctree.h	470;"	d
BTRFS_FEATURE_INCOMPAT_MIXED_BACKREF	ctree.h	452;"	d
BTRFS_FEATURE_INCOMPAT_MIXED_GROUPS	ctree.h	454;"	d
BTRFS_FEATURE_INCOMPAT_RAID56	ctree.h	471;"	d
BTRFS_FEATURE_INCOMPAT_SKINNY_METADATA	ctree.h	472;"	d
BTRFS_FEATURE_INCOMPAT_SUPP	ctree.h	477;"	d
BTRFS_FEATURE_LIST_ALL	mkfs.c	1135;"	d	file:
BTRFS_FILE_EXTENT_BAD	btrfs-corrupt-block.c	/^	BTRFS_FILE_EXTENT_BAD,$/;"	e	enum:btrfs_file_extent_field	file:
BTRFS_FILE_EXTENT_DISK_BYTENR	btrfs-corrupt-block.c	/^	BTRFS_FILE_EXTENT_DISK_BYTENR,$/;"	e	enum:btrfs_file_extent_field	file:
BTRFS_FILE_EXTENT_INLINE	ctree.h	760;"	d
BTRFS_FILE_EXTENT_PREALLOC	ctree.h	762;"	d
BTRFS_FILE_EXTENT_REG	ctree.h	761;"	d
BTRFS_FIRST_CHUNK_TREE_OBJECTID	ctree.h	115;"	d
BTRFS_FIRST_FREE_OBJECTID	ctree.h	113;"	d
BTRFS_FREE_INO_OBJECTID	ctree.h	105;"	d
BTRFS_FREE_SPACE_BITMAP	ctree.h	284;"	d
BTRFS_FREE_SPACE_EXTENT	ctree.h	283;"	d
BTRFS_FREE_SPACE_OBJECTID	ctree.h	99;"	d
BTRFS_FSID_SIZE	ioctl.h	85;"	d
BTRFS_FS_TREE_OBJECTID	ctree.h	66;"	d
BTRFS_FT_BLKDEV	ctree.h	160;"	d
BTRFS_FT_CHRDEV	ctree.h	159;"	d
BTRFS_FT_DIR	ctree.h	158;"	d
BTRFS_FT_FIFO	ctree.h	161;"	d
BTRFS_FT_MAX	ctree.h	165;"	d
BTRFS_FT_REG_FILE	ctree.h	157;"	d
BTRFS_FT_SOCK	ctree.h	162;"	d
BTRFS_FT_SYMLINK	ctree.h	163;"	d
BTRFS_FT_UNKNOWN	ctree.h	156;"	d
BTRFS_FT_XATTR	ctree.h	164;"	d
BTRFS_HEADER_FLAG_RELOC	ctree.h	307;"	d
BTRFS_HEADER_FLAG_WRITTEN	ctree.h	306;"	d
BTRFS_INODE_EXTREF_KEY	ctree.h	1030;"	d
BTRFS_INODE_FIELD_BAD	btrfs-corrupt-block.c	/^	BTRFS_INODE_FIELD_BAD,$/;"	e	enum:btrfs_inode_field	file:
BTRFS_INODE_FIELD_ISIZE	btrfs-corrupt-block.c	/^	BTRFS_INODE_FIELD_ISIZE,$/;"	e	enum:btrfs_inode_field	file:
BTRFS_INODE_ITEM_KEY	ctree.h	1028;"	d
BTRFS_INODE_NODATACOW	ctree.h	1155;"	d
BTRFS_INODE_NODATASUM	ctree.h	1154;"	d
BTRFS_INODE_READONLY	ctree.h	1156;"	d
BTRFS_INODE_REF_KEY	ctree.h	1029;"	d
BTRFS_INO_LOOKUP_PATH_MAX	ioctl.h	278;"	d
BTRFS_IOCTL_DEV_REPLACE_CMD_CANCEL	ioctl.h	143;"	d
BTRFS_IOCTL_DEV_REPLACE_CMD_START	ioctl.h	141;"	d
BTRFS_IOCTL_DEV_REPLACE_CMD_STATUS	ioctl.h	142;"	d
BTRFS_IOCTL_DEV_REPLACE_CONT_READING_FROM_SRCDEV_MODE_ALWAYS	ioctl.h	117;"	d
BTRFS_IOCTL_DEV_REPLACE_CONT_READING_FROM_SRCDEV_MODE_AVOID	ioctl.h	118;"	d
BTRFS_IOCTL_DEV_REPLACE_RESULT_ALREADY_STARTED	ioctl.h	146;"	d
BTRFS_IOCTL_DEV_REPLACE_RESULT_NOT_STARTED	ioctl.h	145;"	d
BTRFS_IOCTL_DEV_REPLACE_RESULT_NO_ERROR	ioctl.h	144;"	d
BTRFS_IOCTL_DEV_REPLACE_STATE_CANCELED	ioctl.h	130;"	d
BTRFS_IOCTL_DEV_REPLACE_STATE_FINISHED	ioctl.h	129;"	d
BTRFS_IOCTL_DEV_REPLACE_STATE_NEVER_STARTED	ioctl.h	127;"	d
BTRFS_IOCTL_DEV_REPLACE_STATE_STARTED	ioctl.h	128;"	d
BTRFS_IOCTL_DEV_REPLACE_STATE_SUSPENDED	ioctl.h	131;"	d
BTRFS_IOCTL_MAGIC	ioctl.h	29;"	d
BTRFS_IOC_ADD_DEV	ioctl.h	524;"	d
BTRFS_IOC_BALANCE	ioctl.h	528;"	d
BTRFS_IOC_BALANCE_CTL	ioctl.h	562;"	d
BTRFS_IOC_BALANCE_PROGRESS	ioctl.h	563;"	d
BTRFS_IOC_BALANCE_V2	ioctl.h	560;"	d
BTRFS_IOC_CLONE	ioctl.h	523;"	d
BTRFS_IOC_CLONE_RANGE	ioctl.h	530;"	d
BTRFS_IOC_DEFAULT_SUBVOL	ioctl.h	542;"	d
BTRFS_IOC_DEFRAG	ioctl.h	502;"	d
BTRFS_IOC_DEFRAG_RANGE	ioctl.h	536;"	d
BTRFS_IOC_DEVICES_READY	ioctl.h	569;"	d
BTRFS_IOC_DEV_INFO	ioctl.h	556;"	d
BTRFS_IOC_DEV_REPLACE	ioctl.h	594;"	d
BTRFS_IOC_FS_INFO	ioctl.h	558;"	d
BTRFS_IOC_GET_DEV_STATS	ioctl.h	592;"	d
BTRFS_IOC_GET_FSLABEL	ioctl.h	588;"	d
BTRFS_IOC_INO_LOOKUP	ioctl.h	540;"	d
BTRFS_IOC_INO_PATHS	ioctl.h	565;"	d
BTRFS_IOC_LOGICAL_INO	ioctl.h	567;"	d
BTRFS_IOC_QGROUP_ASSIGN	ioctl.h	577;"	d
BTRFS_IOC_QGROUP_CREATE	ioctl.h	579;"	d
BTRFS_IOC_QGROUP_LIMIT	ioctl.h	581;"	d
BTRFS_IOC_QUOTA_CTL	ioctl.h	575;"	d
BTRFS_IOC_QUOTA_RESCAN	ioctl.h	583;"	d
BTRFS_IOC_QUOTA_RESCAN_STATUS	ioctl.h	585;"	d
BTRFS_IOC_QUOTA_RESCAN_WAIT	ioctl.h	587;"	d
BTRFS_IOC_RESIZE	ioctl.h	504;"	d
BTRFS_IOC_RM_DEV	ioctl.h	526;"	d
BTRFS_IOC_SCAN_DEV	ioctl.h	506;"	d
BTRFS_IOC_SCRUB	ioctl.h	551;"	d
BTRFS_IOC_SCRUB_CANCEL	ioctl.h	553;"	d
BTRFS_IOC_SCRUB_PROGRESS	ioctl.h	554;"	d
BTRFS_IOC_SEND	ioctl.h	573;"	d
BTRFS_IOC_SET_FSLABEL	ioctl.h	590;"	d
BTRFS_IOC_SET_RECEIVED_SUBVOL	ioctl.h	571;"	d
BTRFS_IOC_SNAP_CREATE	ioctl.h	500;"	d
BTRFS_IOC_SNAP_CREATE_V2	ioctl.h	545;"	d
BTRFS_IOC_SNAP_DESTROY	ioctl.h	534;"	d
BTRFS_IOC_SPACE_INFO	ioctl.h	543;"	d
BTRFS_IOC_SUBVOL_CREATE	ioctl.h	532;"	d
BTRFS_IOC_SUBVOL_CREATE_V2	ioctl.h	547;"	d
BTRFS_IOC_SUBVOL_GETFLAGS	ioctl.h	549;"	d
BTRFS_IOC_SUBVOL_SETFLAGS	ioctl.h	550;"	d
BTRFS_IOC_SYNC	ioctl.h	521;"	d
BTRFS_IOC_TRANS_END	ioctl.h	520;"	d
BTRFS_IOC_TRANS_START	ioctl.h	519;"	d
BTRFS_IOC_TREE_SEARCH	ioctl.h	538;"	d
BTRFS_LABEL_SIZE	ctree.h	355;"	d
BTRFS_LAST_FREE_OBJECTID	ctree.h	114;"	d
BTRFS_LEAF_DATA_SIZE	ctree.h	341;"	d
BTRFS_LINK_MAX	ctree.h	142;"	d
BTRFS_LIST_ALL	btrfs-list.h	/^	BTRFS_LIST_ALL,$/;"	e	enum:btrfs_list_column_enum
BTRFS_LIST_COMP_GEN	btrfs-list.h	/^	BTRFS_LIST_COMP_GEN,$/;"	e	enum:btrfs_list_comp_enum
BTRFS_LIST_COMP_MAX	btrfs-list.h	/^	BTRFS_LIST_COMP_MAX,$/;"	e	enum:btrfs_list_comp_enum
BTRFS_LIST_COMP_OGEN	btrfs-list.h	/^	BTRFS_LIST_COMP_OGEN,$/;"	e	enum:btrfs_list_comp_enum
BTRFS_LIST_COMP_PATH	btrfs-list.h	/^	BTRFS_LIST_COMP_PATH,$/;"	e	enum:btrfs_list_comp_enum
BTRFS_LIST_COMP_ROOTID	btrfs-list.h	/^	BTRFS_LIST_COMP_ROOTID,$/;"	e	enum:btrfs_list_comp_enum
BTRFS_LIST_FILTER_BY_PARENT	btrfs-list.h	/^	BTRFS_LIST_FILTER_BY_PARENT,$/;"	e	enum:btrfs_list_filter_enum
BTRFS_LIST_FILTER_CGEN	btrfs-list.h	/^	BTRFS_LIST_FILTER_CGEN,$/;"	e	enum:btrfs_list_filter_enum
BTRFS_LIST_FILTER_CGEN_EQUAL	btrfs-list.h	/^	BTRFS_LIST_FILTER_CGEN_EQUAL	=	BTRFS_LIST_FILTER_CGEN,$/;"	e	enum:btrfs_list_filter_enum
BTRFS_LIST_FILTER_CGEN_LESS	btrfs-list.h	/^	BTRFS_LIST_FILTER_CGEN_LESS,$/;"	e	enum:btrfs_list_filter_enum
BTRFS_LIST_FILTER_CGEN_MORE	btrfs-list.h	/^	BTRFS_LIST_FILTER_CGEN_MORE,$/;"	e	enum:btrfs_list_filter_enum
BTRFS_LIST_FILTER_DELETED	btrfs-list.h	/^	BTRFS_LIST_FILTER_DELETED,$/;"	e	enum:btrfs_list_filter_enum
BTRFS_LIST_FILTER_FLAGS	btrfs-list.h	/^	BTRFS_LIST_FILTER_FLAGS,$/;"	e	enum:btrfs_list_filter_enum
BTRFS_LIST_FILTER_FULL_PATH	btrfs-list.h	/^	BTRFS_LIST_FILTER_FULL_PATH,$/;"	e	enum:btrfs_list_filter_enum
BTRFS_LIST_FILTER_GEN	btrfs-list.h	/^	BTRFS_LIST_FILTER_GEN,$/;"	e	enum:btrfs_list_filter_enum
BTRFS_LIST_FILTER_GEN_EQUAL	btrfs-list.h	/^	BTRFS_LIST_FILTER_GEN_EQUAL	=	BTRFS_LIST_FILTER_GEN,$/;"	e	enum:btrfs_list_filter_enum
BTRFS_LIST_FILTER_GEN_LESS	btrfs-list.h	/^	BTRFS_LIST_FILTER_GEN_LESS,$/;"	e	enum:btrfs_list_filter_enum
BTRFS_LIST_FILTER_GEN_MORE	btrfs-list.h	/^	BTRFS_LIST_FILTER_GEN_MORE,$/;"	e	enum:btrfs_list_filter_enum
BTRFS_LIST_FILTER_MAX	btrfs-list.h	/^	BTRFS_LIST_FILTER_MAX,$/;"	e	enum:btrfs_list_filter_enum
BTRFS_LIST_FILTER_ROOTID	btrfs-list.h	/^	BTRFS_LIST_FILTER_ROOTID,$/;"	e	enum:btrfs_list_filter_enum
BTRFS_LIST_FILTER_SNAPSHOT_ONLY	btrfs-list.h	/^	BTRFS_LIST_FILTER_SNAPSHOT_ONLY,$/;"	e	enum:btrfs_list_filter_enum
BTRFS_LIST_FILTER_TOPID_EQUAL	btrfs-list.h	/^	BTRFS_LIST_FILTER_TOPID_EQUAL,$/;"	e	enum:btrfs_list_filter_enum
BTRFS_LIST_GENERATION	btrfs-list.h	/^	BTRFS_LIST_GENERATION,$/;"	e	enum:btrfs_list_column_enum
BTRFS_LIST_LAYOUT_DEFAULT	btrfs-list.h	25;"	d
BTRFS_LIST_LAYOUT_RAW	btrfs-list.h	27;"	d
BTRFS_LIST_LAYOUT_TABLE	btrfs-list.h	26;"	d
BTRFS_LIST_NCOMPS_INCREASE	btrfs-list.c	40;"	d	file:
BTRFS_LIST_NFILTERS_INCREASE	btrfs-list.c	39;"	d	file:
BTRFS_LIST_OBJECTID	btrfs-list.h	/^	BTRFS_LIST_OBJECTID,$/;"	e	enum:btrfs_list_column_enum
BTRFS_LIST_OGENERATION	btrfs-list.h	/^	BTRFS_LIST_OGENERATION,$/;"	e	enum:btrfs_list_column_enum
BTRFS_LIST_OTIME	btrfs-list.h	/^	BTRFS_LIST_OTIME,$/;"	e	enum:btrfs_list_column_enum
BTRFS_LIST_PARENT	btrfs-list.h	/^	BTRFS_LIST_PARENT,$/;"	e	enum:btrfs_list_column_enum
BTRFS_LIST_PATH	btrfs-list.h	/^	BTRFS_LIST_PATH,$/;"	e	enum:btrfs_list_column_enum
BTRFS_LIST_PUUID	btrfs-list.h	/^	BTRFS_LIST_PUUID,$/;"	e	enum:btrfs_list_column_enum
BTRFS_LIST_TOP_LEVEL	btrfs-list.h	/^	BTRFS_LIST_TOP_LEVEL,$/;"	e	enum:btrfs_list_column_enum
BTRFS_LIST_UUID	btrfs-list.h	/^	BTRFS_LIST_UUID,$/;"	e	enum:btrfs_list_column_enum
BTRFS_MAGIC	ctree.h	41;"	d
BTRFS_MAX_EXTENT_ITEM_SIZE	ctree.h	567;"	d
BTRFS_MAX_INLINE_DATA_SIZE	ctree.h	342;"	d
BTRFS_MAX_LEVEL	ctree.h	43;"	d
BTRFS_MAX_METADATA_BLOCKSIZE	ctree.h	129;"	d
BTRFS_MAX_XATTR_SIZE	ctree.h	345;"	d
BTRFS_METADATA_BLOCK_BAD	btrfs-corrupt-block.c	/^	BTRFS_METADATA_BLOCK_BAD,$/;"	e	enum:btrfs_metadata_block_field	file:
BTRFS_METADATA_BLOCK_GENERATION	btrfs-corrupt-block.c	/^	BTRFS_METADATA_BLOCK_GENERATION,$/;"	e	enum:btrfs_metadata_block_field	file:
BTRFS_METADATA_ITEM_KEY	ctree.h	1087;"	d
BTRFS_MIXED_BACKREF_REV	ctree.h	317;"	d
BTRFS_MKFS_SYSTEM_GROUP_SIZE	utils.h	26;"	d
BTRFS_MULTIPLE_OBJECTIDS	ctree.h	108;"	d
BTRFS_NAME_LEN	ctree.h	135;"	d
BTRFS_NODEPTRS_PER_BLOCK	ctree.h	337;"	d
BTRFS_NUM_BACKUP_ROOTS	ctree.h	362;"	d
BTRFS_NUM_MIRRORS	chunk-recover.c	45;"	d	file:
BTRFS_NUM_MIRRORS	cmds-chunk.c	46;"	d	file:
BTRFS_OLD_BACKREF_REV	ctree.h	316;"	d
BTRFS_ORDERED_RAID	chunk-recover.c	1541;"	d	file:
BTRFS_ORDERED_RAID	cmds-chunk.c	1561;"	d	file:
BTRFS_ORPHAN_ITEM_KEY	ctree.h	1032;"	d
BTRFS_ORPHAN_OBJECTID	ctree.h	81;"	d
BTRFS_PATH_NAME_MAX	ioctl.h	33;"	d
BTRFS_QGROUP_ALL	qgroup.h	/^	BTRFS_QGROUP_ALL,$/;"	e	enum:btrfs_qgroup_column_enum
BTRFS_QGROUP_CHILD	qgroup.h	/^	BTRFS_QGROUP_CHILD,$/;"	e	enum:btrfs_qgroup_column_enum
BTRFS_QGROUP_COMP_EXCL	qgroup.h	/^	BTRFS_QGROUP_COMP_EXCL,$/;"	e	enum:btrfs_qgroup_comp_enum
BTRFS_QGROUP_COMP_MAX	qgroup.h	/^	BTRFS_QGROUP_COMP_MAX$/;"	e	enum:btrfs_qgroup_comp_enum
BTRFS_QGROUP_COMP_MAX_EXCL	qgroup.h	/^	BTRFS_QGROUP_COMP_MAX_EXCL,$/;"	e	enum:btrfs_qgroup_comp_enum
BTRFS_QGROUP_COMP_MAX_RFER	qgroup.h	/^	BTRFS_QGROUP_COMP_MAX_RFER,$/;"	e	enum:btrfs_qgroup_comp_enum
BTRFS_QGROUP_COMP_QGROUPID	qgroup.h	/^	BTRFS_QGROUP_COMP_QGROUPID,$/;"	e	enum:btrfs_qgroup_comp_enum
BTRFS_QGROUP_COMP_RFER	qgroup.h	/^	BTRFS_QGROUP_COMP_RFER,$/;"	e	enum:btrfs_qgroup_comp_enum
BTRFS_QGROUP_EXCL	qgroup.h	/^	BTRFS_QGROUP_EXCL,$/;"	e	enum:btrfs_qgroup_column_enum
BTRFS_QGROUP_FILTER_ALL_PARENT	qgroup.h	/^	BTRFS_QGROUP_FILTER_ALL_PARENT,$/;"	e	enum:btrfs_qgroup_filter_enum
BTRFS_QGROUP_FILTER_MAX	qgroup.h	/^	BTRFS_QGROUP_FILTER_MAX,$/;"	e	enum:btrfs_qgroup_filter_enum
BTRFS_QGROUP_FILTER_PARENT	qgroup.h	/^	BTRFS_QGROUP_FILTER_PARENT,$/;"	e	enum:btrfs_qgroup_filter_enum
BTRFS_QGROUP_INFO_KEY	ctree.h	1117;"	d
BTRFS_QGROUP_INHERIT_SET_LIMITS	ioctl.h	45;"	d
BTRFS_QGROUP_LIMIT_EXCL_CMPR	ctree.h	884;"	d
BTRFS_QGROUP_LIMIT_KEY	ctree.h	1118;"	d
BTRFS_QGROUP_LIMIT_MAX_EXCL	ctree.h	880;"	d
BTRFS_QGROUP_LIMIT_MAX_RFER	ctree.h	879;"	d
BTRFS_QGROUP_LIMIT_RFER_CMPR	ctree.h	883;"	d
BTRFS_QGROUP_LIMIT_RSV_EXCL	ctree.h	882;"	d
BTRFS_QGROUP_LIMIT_RSV_RFER	ctree.h	881;"	d
BTRFS_QGROUP_MAX_EXCL	qgroup.h	/^	BTRFS_QGROUP_MAX_EXCL,$/;"	e	enum:btrfs_qgroup_column_enum
BTRFS_QGROUP_MAX_RFER	qgroup.h	/^	BTRFS_QGROUP_MAX_RFER,$/;"	e	enum:btrfs_qgroup_column_enum
BTRFS_QGROUP_NCOMPS_INCREASE	qgroup.c	25;"	d	file:
BTRFS_QGROUP_NFILTERS_INCREASE	qgroup.c	24;"	d	file:
BTRFS_QGROUP_PARENT	qgroup.h	/^	BTRFS_QGROUP_PARENT,$/;"	e	enum:btrfs_qgroup_column_enum
BTRFS_QGROUP_QGROUPID	qgroup.h	/^	BTRFS_QGROUP_QGROUPID,$/;"	e	enum:btrfs_qgroup_column_enum
BTRFS_QGROUP_RELATION_KEY	ctree.h	1119;"	d
BTRFS_QGROUP_RFER	qgroup.h	/^	BTRFS_QGROUP_RFER,$/;"	e	enum:btrfs_qgroup_column_enum
BTRFS_QGROUP_STATUS_FLAG_INCONSISTENT	ctree.h	855;"	d
BTRFS_QGROUP_STATUS_KEY	ctree.h	1116;"	d
BTRFS_QGROUP_STATUS_OFF	ctree.h	851;"	d
BTRFS_QGROUP_STATUS_ON	ctree.h	852;"	d
BTRFS_QGROUP_STATUS_SCANNING	ctree.h	853;"	d
BTRFS_QUOTA_CTL_DISABLE	ioctl.h	435;"	d
BTRFS_QUOTA_CTL_ENABLE	ioctl.h	434;"	d
BTRFS_QUOTA_TREE_OBJECTID	ctree.h	72;"	d
BTRFS_RAID5_P_STRIPE	volumes.h	140;"	d
BTRFS_RAID6_Q_STRIPE	volumes.h	141;"	d
BTRFS_ROOT_BACKREF_KEY	ctree.h	1068;"	d
BTRFS_ROOT_ITEM_KEY	ctree.h	1062;"	d
BTRFS_ROOT_REF_KEY	ctree.h	1075;"	d
BTRFS_ROOT_SUBVOL_RDONLY	ctree.h	167;"	d
BTRFS_ROOT_TREE_DIR_OBJECTID	ctree.h	69;"	d
BTRFS_ROOT_TREE_OBJECTID	ctree.h	48;"	d
BTRFS_SCAN_DEV	utils.h	29;"	d
BTRFS_SCAN_LBLKID	utils.h	31;"	d
BTRFS_SCAN_MOUNTED	utils.h	30;"	d
BTRFS_SCAN_PROC	utils.h	28;"	d
BTRFS_SCRUB_READONLY	ioctl.h	106;"	d
BTRFS_SEARCH_ARGS_BUFSIZE	ioctl.h	267;"	d
BTRFS_SEND_A_ATIME	send.h	/^	BTRFS_SEND_A_ATIME,$/;"	e	enum:__anon15
BTRFS_SEND_A_CLONE_CTRANSID	send.h	/^	BTRFS_SEND_A_CLONE_CTRANSID,$/;"	e	enum:__anon15
BTRFS_SEND_A_CLONE_LEN	send.h	/^	BTRFS_SEND_A_CLONE_LEN,$/;"	e	enum:__anon15
BTRFS_SEND_A_CLONE_OFFSET	send.h	/^	BTRFS_SEND_A_CLONE_OFFSET,$/;"	e	enum:__anon15
BTRFS_SEND_A_CLONE_PATH	send.h	/^	BTRFS_SEND_A_CLONE_PATH,$/;"	e	enum:__anon15
BTRFS_SEND_A_CLONE_UUID	send.h	/^	BTRFS_SEND_A_CLONE_UUID,$/;"	e	enum:__anon15
BTRFS_SEND_A_CTIME	send.h	/^	BTRFS_SEND_A_CTIME,$/;"	e	enum:__anon15
BTRFS_SEND_A_CTRANSID	send.h	/^	BTRFS_SEND_A_CTRANSID,$/;"	e	enum:__anon15
BTRFS_SEND_A_DATA	send.h	/^	BTRFS_SEND_A_DATA,$/;"	e	enum:__anon15
BTRFS_SEND_A_FILE_OFFSET	send.h	/^	BTRFS_SEND_A_FILE_OFFSET,$/;"	e	enum:__anon15
BTRFS_SEND_A_GID	send.h	/^	BTRFS_SEND_A_GID,$/;"	e	enum:__anon15
BTRFS_SEND_A_INO	send.h	/^	BTRFS_SEND_A_INO,$/;"	e	enum:__anon15
BTRFS_SEND_A_MAX	send.h	134;"	d
BTRFS_SEND_A_MODE	send.h	/^	BTRFS_SEND_A_MODE,$/;"	e	enum:__anon15
BTRFS_SEND_A_MTIME	send.h	/^	BTRFS_SEND_A_MTIME,$/;"	e	enum:__anon15
BTRFS_SEND_A_OTIME	send.h	/^	BTRFS_SEND_A_OTIME,$/;"	e	enum:__anon15
BTRFS_SEND_A_PATH	send.h	/^	BTRFS_SEND_A_PATH,$/;"	e	enum:__anon15
BTRFS_SEND_A_PATH_LINK	send.h	/^	BTRFS_SEND_A_PATH_LINK,$/;"	e	enum:__anon15
BTRFS_SEND_A_PATH_TO	send.h	/^	BTRFS_SEND_A_PATH_TO,$/;"	e	enum:__anon15
BTRFS_SEND_A_RDEV	send.h	/^	BTRFS_SEND_A_RDEV,$/;"	e	enum:__anon15
BTRFS_SEND_A_SIZE	send.h	/^	BTRFS_SEND_A_SIZE,$/;"	e	enum:__anon15
BTRFS_SEND_A_UID	send.h	/^	BTRFS_SEND_A_UID,$/;"	e	enum:__anon15
BTRFS_SEND_A_UNSPEC	send.h	/^	BTRFS_SEND_A_UNSPEC,$/;"	e	enum:__anon15
BTRFS_SEND_A_UUID	send.h	/^	BTRFS_SEND_A_UUID,$/;"	e	enum:__anon15
BTRFS_SEND_A_XATTR_DATA	send.h	/^	BTRFS_SEND_A_XATTR_DATA,$/;"	e	enum:__anon15
BTRFS_SEND_A_XATTR_NAME	send.h	/^	BTRFS_SEND_A_XATTR_NAME,$/;"	e	enum:__anon15
BTRFS_SEND_BUF_SIZE	send.h	29;"	d
BTRFS_SEND_C_CHMOD	send.h	/^	BTRFS_SEND_C_CHMOD,$/;"	e	enum:btrfs_send_cmd
BTRFS_SEND_C_CHOWN	send.h	/^	BTRFS_SEND_C_CHOWN,$/;"	e	enum:btrfs_send_cmd
BTRFS_SEND_C_CLONE	send.h	/^	BTRFS_SEND_C_CLONE,$/;"	e	enum:btrfs_send_cmd
BTRFS_SEND_C_END	send.h	/^	BTRFS_SEND_C_END,$/;"	e	enum:btrfs_send_cmd
BTRFS_SEND_C_LINK	send.h	/^	BTRFS_SEND_C_LINK,$/;"	e	enum:btrfs_send_cmd
BTRFS_SEND_C_MAX	send.h	96;"	d
BTRFS_SEND_C_MKDIR	send.h	/^	BTRFS_SEND_C_MKDIR,$/;"	e	enum:btrfs_send_cmd
BTRFS_SEND_C_MKFIFO	send.h	/^	BTRFS_SEND_C_MKFIFO,$/;"	e	enum:btrfs_send_cmd
BTRFS_SEND_C_MKFILE	send.h	/^	BTRFS_SEND_C_MKFILE,$/;"	e	enum:btrfs_send_cmd
BTRFS_SEND_C_MKNOD	send.h	/^	BTRFS_SEND_C_MKNOD,$/;"	e	enum:btrfs_send_cmd
BTRFS_SEND_C_MKSOCK	send.h	/^	BTRFS_SEND_C_MKSOCK,$/;"	e	enum:btrfs_send_cmd
BTRFS_SEND_C_REMOVE_XATTR	send.h	/^	BTRFS_SEND_C_REMOVE_XATTR,$/;"	e	enum:btrfs_send_cmd
BTRFS_SEND_C_RENAME	send.h	/^	BTRFS_SEND_C_RENAME,$/;"	e	enum:btrfs_send_cmd
BTRFS_SEND_C_RMDIR	send.h	/^	BTRFS_SEND_C_RMDIR,$/;"	e	enum:btrfs_send_cmd
BTRFS_SEND_C_SET_XATTR	send.h	/^	BTRFS_SEND_C_SET_XATTR,$/;"	e	enum:btrfs_send_cmd
BTRFS_SEND_C_SNAPSHOT	send.h	/^	BTRFS_SEND_C_SNAPSHOT,$/;"	e	enum:btrfs_send_cmd
BTRFS_SEND_C_SUBVOL	send.h	/^	BTRFS_SEND_C_SUBVOL,$/;"	e	enum:btrfs_send_cmd
BTRFS_SEND_C_SYMLINK	send.h	/^	BTRFS_SEND_C_SYMLINK,$/;"	e	enum:btrfs_send_cmd
BTRFS_SEND_C_TRUNCATE	send.h	/^	BTRFS_SEND_C_TRUNCATE,$/;"	e	enum:btrfs_send_cmd
BTRFS_SEND_C_UNLINK	send.h	/^	BTRFS_SEND_C_UNLINK,$/;"	e	enum:btrfs_send_cmd
BTRFS_SEND_C_UNSPEC	send.h	/^	BTRFS_SEND_C_UNSPEC,$/;"	e	enum:btrfs_send_cmd
BTRFS_SEND_C_UPDATE_EXTENT	send.h	/^	BTRFS_SEND_C_UPDATE_EXTENT,$/;"	e	enum:btrfs_send_cmd
BTRFS_SEND_C_UTIMES	send.h	/^	BTRFS_SEND_C_UTIMES,$/;"	e	enum:btrfs_send_cmd
BTRFS_SEND_C_WRITE	send.h	/^	BTRFS_SEND_C_WRITE,$/;"	e	enum:btrfs_send_cmd
BTRFS_SEND_FLAG_NO_FILE_DATA	ioctl.h	376;"	d
BTRFS_SEND_FLAG_OMIT_END_CMD	ioctl.h	389;"	d
BTRFS_SEND_FLAG_OMIT_STREAM_HEADER	ioctl.h	382;"	d
BTRFS_SEND_READ_SIZE	send.h	30;"	d
BTRFS_SEND_STREAM_MAGIC	send.h	26;"	d
BTRFS_SEND_STREAM_VERSION	send.h	27;"	d
BTRFS_SETGET_FUNCS	ctree.h	1183;"	d
BTRFS_SETGET_HEADER_FUNCS	ctree.h	1170;"	d
BTRFS_SETGET_STACK_FUNCS	ctree.h	1199;"	d
BTRFS_SHARED_BLOCK_REF_KEY	ctree.h	1096;"	d
BTRFS_SHARED_DATA_REF_KEY	ctree.h	1098;"	d
BTRFS_STRING_ITEM_KEY	ctree.h	1150;"	d
BTRFS_STRIPE_LEN	chunk-recover.c	44;"	d	file:
BTRFS_STRIPE_LEN	cmds-chunk.c	45;"	d	file:
BTRFS_SUBVOL_CREATE_ASYNC	ioctl.h	41;"	d
BTRFS_SUBVOL_NAME_MAX	ioctl.h	69;"	d
BTRFS_SUBVOL_QGROUP_INHERIT	ioctl.h	43;"	d
BTRFS_SUBVOL_RDONLY	ioctl.h	42;"	d
BTRFS_SUPER_FLAG_METADUMP	ctree.h	309;"	d
BTRFS_SUPER_FLAG_SEEDING	ctree.h	308;"	d
BTRFS_SUPER_INFO_OFFSET	disk-io.h	22;"	d
BTRFS_SUPER_INFO_SIZE	disk-io.h	23;"	d
BTRFS_SUPER_MIRROR_MAX	disk-io.h	25;"	d
BTRFS_SUPER_MIRROR_SHIFT	disk-io.h	26;"	d
BTRFS_SYSTEM_CHUNK_ARRAY_SIZE	ctree.h	354;"	d
BTRFS_TLV_BINARY	send.h	/^	BTRFS_TLV_BINARY,$/;"	e	enum:btrfs_tlv_type
BTRFS_TLV_STRING	send.h	/^	BTRFS_TLV_STRING,$/;"	e	enum:btrfs_tlv_type
BTRFS_TLV_TIMESPEC	send.h	/^	BTRFS_TLV_TIMESPEC,$/;"	e	enum:btrfs_tlv_type
BTRFS_TLV_U16	send.h	/^	BTRFS_TLV_U16,$/;"	e	enum:btrfs_tlv_type
BTRFS_TLV_U32	send.h	/^	BTRFS_TLV_U32,$/;"	e	enum:btrfs_tlv_type
BTRFS_TLV_U64	send.h	/^	BTRFS_TLV_U64,$/;"	e	enum:btrfs_tlv_type
BTRFS_TLV_U8	send.h	/^	BTRFS_TLV_U8,$/;"	e	enum:btrfs_tlv_type
BTRFS_TLV_UUID	send.h	/^	BTRFS_TLV_UUID,$/;"	e	enum:btrfs_tlv_type
BTRFS_TREE_BLOCK_REF_KEY	ctree.h	1089;"	d
BTRFS_TREE_LOG_FIXUP_OBJECTID	ctree.h	85;"	d
BTRFS_TREE_LOG_OBJECTID	ctree.h	84;"	d
BTRFS_TREE_RELOC_OBJECTID	ctree.h	88;"	d
BTRFS_UPDATE_KERNEL	utils.h	33;"	d
BTRFS_UUID_KEY_RECEIVED_SUBVOL	ctree.h	1143;"	d
BTRFS_UUID_KEY_SUBVOL	ctree.h	1142;"	d
BTRFS_UUID_SIZE	ctree.h	199;"	d
BTRFS_UUID_SIZE	ioctl.h	86;"	d
BTRFS_UUID_TREE_OBJECTID	ctree.h	75;"	d
BTRFS_VOL_NAME_MAX	ioctl.h	30;"	d
BTRFS_XATTR_ITEM_KEY	ctree.h	1031;"	d
BUG	kerncompat.h	53;"	d
BUG_ON	kerncompat.h	236;"	d
BUILDDIRS	Makefile	/^BUILDDIRS = $(patsubst %,build-%,$(SUBDIRS))$/;"	m
BUILD_VERBOSE	Makefile	/^  BUILD_VERBOSE = $(V)$/;"	m
BUILD_VERBOSE	Makefile	/^  BUILD_VERBOSE = 0$/;"	m
CACHE_SECTORSIZE	free-space-cache.c	28;"	d	file:
CC	Makefile	/^CC = gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -g -O1 -fno-strict-aliasing `pkg-config --cflags gtk+-2.0`$/;"	m
CLEANDIRS	Makefile	/^CLEANDIRS = $(patsubst %,clean-%,$(SUBDIRS))$/;"	m
COLOR_CHUNK	btrfs-fragments.c	/^	COLOR_CHUNK,$/;"	e	enum:tree_colors	file:
COLOR_CSUM	btrfs-fragments.c	/^	COLOR_CSUM,$/;"	e	enum:tree_colors	file:
COLOR_DATA	btrfs-fragments.c	/^	COLOR_DATA,$/;"	e	enum:tree_colors	file:
COLOR_DEV	btrfs-fragments.c	/^	COLOR_DEV,$/;"	e	enum:tree_colors	file:
COLOR_EXTENT	btrfs-fragments.c	/^	COLOR_EXTENT,$/;"	e	enum:tree_colors	file:
COLOR_FS	btrfs-fragments.c	/^	COLOR_FS,$/;"	e	enum:tree_colors	file:
COLOR_MAX	btrfs-fragments.c	/^	COLOR_MAX$/;"	e	enum:tree_colors	file:
COLOR_RELOC	btrfs-fragments.c	/^	COLOR_RELOC,$/;"	e	enum:tree_colors	file:
COLOR_ROOT	btrfs-fragments.c	/^	COLOR_ROOT = 0,$/;"	e	enum:tree_colors	file:
COLOR_UNKNOWN	btrfs-fragments.c	/^	COLOR_UNKNOWN,$/;"	e	enum:tree_colors	file:
COMPRESS_NONE	btrfs-image.c	45;"	d	file:
COMPRESS_ZLIB	btrfs-image.c	46;"	d	file:
DEFAULT_MKFS_FEATURES	mkfs.c	49;"	d	file:
DEFAULT_MKFS_LEAF_SIZE	mkfs.c	51;"	d	file:
ERR	cmds-scrub.c	128;"	d	file:
ERR_PTR	kerncompat.h	/^static inline void *ERR_PTR(long error)$/;"	f
EXT2_ACL_VERSION	btrfs-convert.c	634;"	d	file:
EXT2_IMAGE_SUBVOL_OBJECTID	btrfs-convert.c	47;"	d	file:
EXT2_XATTR_BFIRST	btrfs-convert.c	588;"	d	file:
EXT2_XATTR_BHDR	btrfs-convert.c	587;"	d	file:
EXT2_XATTR_IFIRST	btrfs-convert.c	593;"	d	file:
EXT2_XATTR_IHDR	btrfs-convert.c	590;"	d	file:
EXTENT_BAD_TRANSID	extent_io.h	42;"	d
EXTENT_BUFFER_FILLED	extent_io.h	40;"	d
EXTENT_CSUM	extent_io.h	41;"	d
EXTENT_DEFRAG	extent_io.h	38;"	d
EXTENT_DEFRAG_DONE	extent_io.h	39;"	d
EXTENT_DELALLOC	extent_io.h	37;"	d
EXTENT_DIRTY	extent_io.h	32;"	d
EXTENT_IOBITS	extent_io.h	43;"	d
EXTENT_LOCKED	extent_io.h	35;"	d
EXTENT_NEW	extent_io.h	36;"	d
EXTENT_UPTODATE	extent_io.h	34;"	d
EXTENT_WRITEBACK	extent_io.h	33;"	d
FIELD_BUF_LEN	btrfs-corrupt-block.c	36;"	d	file:
FILESYSTEM	filesystem.h	2;"	d
FREE_EXTENT_CACHE_BASED_TREE	extent-cache.h	65;"	d
FREE_RB_BASED_TREE	rbtree.h	176;"	d
GFP_KERNEL	kerncompat.h	44;"	d
GFP_NOFS	kerncompat.h	45;"	d
GZIPCMD	man/Makefile	/^GZIPCMD=gzip$/;"	m
HEADER_MAGIC	btrfs-image.c	40;"	d	file:
INFILES	man/Makefile	/^INFILES = ${MANPAGES:.in=.gz}$/;"	m
INIT_LIST_HEAD	list.h	/^static inline void INIT_LIST_HEAD(struct list_head *list)$/;"	f
INIT_RADIX_TREE	radix-tree.h	64;"	d
INO_OFFSET	btrfs-convert.c	45;"	d	file:
INSTALL	Makefile	/^INSTALL = install$/;"	m
INSTALL	man/Makefile	/^INSTALL= install$/;"	m
INSTALLDIRS	Makefile	/^INSTALLDIRS = $(patsubst %,install-%,$(SUBDIRS))$/;"	m
IOPRIO_CLASS_IDLE	cmds-scrub.c	70;"	d	file:
IOPRIO_CLASS_SHIFT	cmds-scrub.c	67;"	d	file:
IOPRIO_PRIO_VALUE	cmds-scrub.c	68;"	d	file:
IOPRIO_WHO_PROCESS	cmds-scrub.c	66;"	d	file:
IS_ERR	kerncompat.h	/^static inline long IS_ERR(const void *ptr)$/;"	f
IS_ERR_VALUE	kerncompat.h	174;"	d
ITEMS_PER_CLUSTER	btrfs-image.c	66;"	d	file:
I_ERR_BAD_FILE_EXTENT	cmds-check.c	169;"	d	file:
I_ERR_DIR_ISIZE_WRONG	cmds-check.c	172;"	d	file:
I_ERR_DUP_DIR_INDEX	cmds-check.c	166;"	d	file:
I_ERR_DUP_INODE_ITEM	cmds-check.c	165;"	d	file:
I_ERR_FILE_EXTENT_DISCOUNT	cmds-check.c	171;"	d	file:
I_ERR_FILE_EXTENT_OVERLAP	cmds-check.c	170;"	d	file:
I_ERR_FILE_NBYTES_WRONG	cmds-check.c	173;"	d	file:
I_ERR_LINK_COUNT_WRONG	cmds-check.c	176;"	d	file:
I_ERR_NO_INODE_ITEM	cmds-check.c	163;"	d	file:
I_ERR_NO_ORPHAN_ITEM	cmds-check.c	164;"	d	file:
I_ERR_ODD_CSUM_ITEM	cmds-check.c	174;"	d	file:
I_ERR_ODD_DIR_ITEM	cmds-check.c	167;"	d	file:
I_ERR_ODD_FILE_EXTENT	cmds-check.c	168;"	d	file:
I_ERR_SOME_CSUM_MISSING	cmds-check.c	175;"	d	file:
KERN_CRIT	kerncompat.h	225;"	d
KERN_ERR	kerncompat.h	226;"	d
LIBS	Makefile	/^LIBS = $(lib_LIBS) $(libs_static) `pkg-config --libs gtk+-2.0`$/;"	m
LIST_CNT	snapshot-scan.c	/^        LIST_CNT  $/;"	e	enum:ListCols	file:
LIST_CNT	subvolume.c	/^        LIST_CNT  $/;"	e	enum:ListCols	file:
LIST_DATE	snapshot-scan.c	/^        LIST_DATE,  $/;"	e	enum:ListCols	file:
LIST_DESC	snapshot-scan.c	/^        LIST_DESC,  $/;"	e	enum:ListCols	file:
LIST_GEN	subvolume.c	/^        LIST_GEN,  $/;"	e	enum:ListCols	file:
LIST_HEAD	list.h	41;"	d
LIST_HEAD_INIT	list.h	39;"	d
LIST_ID	snapshot-scan.c	/^        LIST_ID,  $/;"	e	enum:ListCols	file:
LIST_ID	subvolume.c	/^        LIST_ID,  $/;"	e	enum:ListCols	file:
LIST_LEVEL	snapshot-scan.c	/^        LIST_LEVEL,$/;"	e	enum:ListCols	file:
LIST_LEVEL	subvolume.c	/^        LIST_LEVEL,$/;"	e	enum:ListCols	file:
LIST_PATH	snapshot-scan.c	/^		  LIST_PATH,$/;"	e	enum:ListCols	file:
LIST_PATH	subvolume.c	/^		  LIST_PATH,$/;"	e	enum:ListCols	file:
LIST_POISON1	list.h	22;"	d
LIST_POISON2	list.h	23;"	d
LIST_TYPE	subvolume.c	/^        LIST_TYPE,  $/;"	e	enum:ListCols	file:
LN	Makefile	/^LN = ln$/;"	m
LZO_LEN	cmds-restore.c	57;"	d	file:
ListCols	snapshot-scan.c	/^    enum ListCols{  $/;"	g	file:
ListCols	subvolume.c	/^    enum ListCols{  $/;"	g	file:
MAKEOPTS	Makefile	/^MAKEOPTS = --no-print-directory Q=$(Q)$/;"	m
MANPAGES	man/Makefile	/^MANPAGES = mkfs.btrfs.8.gz btrfsck.8.gz btrfs-image.8.gz btrfs.8.gz \\$/;"	m
MASK	raid6.c	/^static inline __attribute_const__ unative_t MASK(unative_t v)$/;"	f	file:
MAX_CACHE_BYTES_PER_GIG	free-space-cache.c	30;"	d	file:
MAX_CSUM_ITEMS	file-item.c	29;"	d	file:
MAX_ERRNO	kerncompat.h	173;"	d
MAX_LIST_LENGTH_BITS	list_sort.c	10;"	d	file:
MAX_PENDING_SIZE	btrfs-image.c	41;"	d	file:
MINORBITS	btrfs-convert.c	901;"	d	file:
MKDEV	btrfs-convert.c	902;"	d	file:
NBYTES	raid6.c	32;"	d	file:
NBYTES	raid6.c	37;"	d	file:
NSHIFT	raid6.c	34;"	d	file:
NSHIFT	raid6.c	39;"	d	file:
NSIZE	raid6.c	33;"	d	file:
NSIZE	raid6.c	38;"	d	file:
NULL_CMD_STRUCT	commands.h	53;"	d
OPEN_CTREE_BACKUP_ROOT	disk-io.h	/^	OPEN_CTREE_BACKUP_ROOT		= 4,$/;"	e	enum:btrfs_open_ctree_flags
OPEN_CTREE_NO_BLOCK_GROUPS	disk-io.h	/^	OPEN_CTREE_NO_BLOCK_GROUPS	= 32,$/;"	e	enum:btrfs_open_ctree_flags
OPEN_CTREE_PARTIAL	disk-io.h	/^	OPEN_CTREE_PARTIAL		= 2,$/;"	e	enum:btrfs_open_ctree_flags
OPEN_CTREE_RECOVER_SUPER	disk-io.h	/^	OPEN_CTREE_RECOVER_SUPER	= 8,$/;"	e	enum:btrfs_open_ctree_flags
OPEN_CTREE_RESTORE	disk-io.h	/^	OPEN_CTREE_RESTORE		= 16,$/;"	e	enum:btrfs_open_ctree_flags
OPEN_CTREE_WRITES	disk-io.h	/^	OPEN_CTREE_WRITES		= 1,$/;"	e	enum:btrfs_open_ctree_flags
PAGE_CACHE_SIZE	cmds-restore.c	58;"	d	file:
PENDING_BACKREF_UPDATE	extent-tree.c	35;"	d	file:
PENDING_EXTENT_DELETE	extent-tree.c	34;"	d	file:
PENDING_EXTENT_INSERT	extent-tree.c	33;"	d	file:
PRINT_SCRUB_ERROR	cmds-scrub.c	133;"	d	file:
PTR_ERR	kerncompat.h	/^static inline long PTR_ERR(const void *ptr)$/;"	f
Q	Makefile	/^  Q = @$/;"	m
Q	Makefile	/^  Q =$/;"	m
RADIX_TREE	radix-tree.h	61;"	d
RADIX_TREE_INDEX_BITS	radix-tree.c	64;"	d	file:
RADIX_TREE_INIT	radix-tree.h	55;"	d
RADIX_TREE_MAP_MASK	radix-tree.c	48;"	d	file:
RADIX_TREE_MAP_SHIFT	radix-tree.c	42;"	d	file:
RADIX_TREE_MAP_SHIFT	radix-tree.c	44;"	d	file:
RADIX_TREE_MAP_SIZE	radix-tree.c	47;"	d	file:
RADIX_TREE_MAX_PATH	radix-tree.c	65;"	d	file:
RADIX_TREE_MAX_TAGS	radix-tree.h	46;"	d
RADIX_TREE_TAG_LONGS	radix-tree.c	50;"	d	file:
RB_BLACK	rbtree.h	105;"	d
RB_CLEAR_NODE	rbtree.h	137;"	d
RB_EMPTY_NODE	rbtree.h	136;"	d
RB_EMPTY_ROOT	rbtree.h	135;"	d
RB_RED	rbtree.h	104;"	d
RB_ROOT	rbtree.h	132;"	d
READ	kerncompat.h	33;"	d
READA	kerncompat.h	35;"	d
REF_ERR_DUP_DIR_INDEX	cmds-check.c	126;"	d	file:
REF_ERR_DUP_DIR_ITEM	cmds-check.c	125;"	d	file:
REF_ERR_DUP_INODE_REF	cmds-check.c	127;"	d	file:
REF_ERR_DUP_ROOT_BACKREF	cmds-check.c	134;"	d	file:
REF_ERR_DUP_ROOT_REF	cmds-check.c	133;"	d	file:
REF_ERR_FILETYPE_UNMATCH	cmds-check.c	129;"	d	file:
REF_ERR_INDEX_UNMATCH	cmds-check.c	128;"	d	file:
REF_ERR_NAME_TOO_LONG	cmds-check.c	130;"	d	file:
REF_ERR_NO_DIR_INDEX	cmds-check.c	123;"	d	file:
REF_ERR_NO_DIR_ITEM	cmds-check.c	122;"	d	file:
REF_ERR_NO_INODE_REF	cmds-check.c	124;"	d	file:
REF_ERR_NO_ROOT_BACKREF	cmds-check.c	132;"	d	file:
REF_ERR_NO_ROOT_REF	cmds-check.c	131;"	d	file:
REX_PRE	crc32c.c	36;"	d	file:
REX_PRE	crc32c.c	39;"	d	file:
SCALE_F	crc32c.c	37;"	d	file:
SCALE_F	crc32c.c	40;"	d	file:
SCRUB_DATA_FILE	cmds-scrub.c	51;"	d	file:
SCRUB_FILE_VERSION	cmds-scrub.c	54;"	d	file:
SCRUB_FILE_VERSION_PREFIX	cmds-scrub.c	53;"	d	file:
SCRUB_PROGRESS_SOCKET_PATH	cmds-scrub.c	52;"	d	file:
SEEN_FSID_HASH_SIZE	cmds-filesystem.c	45;"	d	file:
SEND_STREAM_H_	send-stream.h	19;"	d
SEND_UTILS_H_	send-utils.h	19;"	d
SHLBYTE	raid6.c	/^static inline __attribute_const__ unative_t SHLBYTE(unative_t v)$/;"	f	file:
SNAPSHOT_SCAN_H	snapshot-scan.h	2;"	d
STATIC_CFLAGS	Makefile	/^STATIC_CFLAGS = $(CFLAGS) -ffunction-sections -fdata-sections$/;"	m
STATIC_LDFLAGS	Makefile	/^STATIC_LDFLAGS = -static -Wl,--gc-sections$/;"	m
STATIC_LIBS	Makefile	/^STATIC_LIBS = $(lib_LIBS) -lpthread$/;"	m
STRIPE_LEN	btrfs-convert.c	46;"	d	file:
SUBDIRS	Makefile	/^SUBDIRS = man$/;"	m
SUBVOLUME_H	subvolume.h	2;"	d
S_SHIFT	cmds-check.c	230;"	d	file:
S_SHIFT	cmds-check.c	242;"	d	file:
TESTS	Makefile	/^TESTS = fsck-tests.sh$/;"	m
TLV_CHECK_LEN	send-stream.c	190;"	d	file:
TLV_GET	send-stream.c	187;"	d	file:
TLV_GET_INT	send-stream.c	201;"	d	file:
TLV_GET_STRING	send-stream.c	234;"	d	file:
TLV_GET_TIMESPEC	send-stream.c	254;"	d	file:
TLV_GET_U16	send-stream.c	211;"	d	file:
TLV_GET_U32	send-stream.c	212;"	d	file:
TLV_GET_U64	send-stream.c	213;"	d	file:
TLV_GET_U8	send-stream.c	210;"	d	file:
TLV_GET_UUID	send-stream.c	272;"	d	file:
ULONG_MAX	btrfs-fragments.c	34;"	d	file:
ULONG_MAX	kerncompat.h	50;"	d
USAGE_LISTING	help.c	28;"	d	file:
USAGE_LONG	help.c	26;"	d	file:
USAGE_OPTIONS	help.c	27;"	d	file:
USAGE_SHORT	help.c	25;"	d	file:
WARN_ON	kerncompat.h	237;"	d
WRITE	kerncompat.h	34;"	d
_BSD_SOURCE	cmds-receive.c	22;"	d	file:
_BTRFS_QGROUP_H	qgroup.h	20;"	d
_GNU_SOURCE	btrfs-calc-size.c	20;"	d	file:
_GNU_SOURCE	btrfs-convert.c	20;"	d	file:
_GNU_SOURCE	btrfs-corrupt-block.c	20;"	d	file:
_GNU_SOURCE	btrfs-find-root.c	20;"	d	file:
_GNU_SOURCE	btrfs-fragments.c	17;"	d	file:
_GNU_SOURCE	btrfs-image.c	20;"	d	file:
_GNU_SOURCE	btrfs-list.c	19;"	d	file:
_GNU_SOURCE	btrfs-map-logical.c	20;"	d	file:
_GNU_SOURCE	btrfs-select-super.c	20;"	d	file:
_GNU_SOURCE	btrfs-show-super.c	20;"	d	file:
_GNU_SOURCE	btrfs-zero-log.c	20;"	d	file:
_GNU_SOURCE	btrfs.c	17;"	d	file:
_GNU_SOURCE	btrfstune.c	20;"	d	file:
_GNU_SOURCE	chunk-recover.c	19;"	d	file:
_GNU_SOURCE	cmds-check.c	20;"	d	file:
_GNU_SOURCE	cmds-chunk.c	19;"	d	file:
_GNU_SOURCE	cmds-receive.c	19;"	d	file:
_GNU_SOURCE	cmds-restore.c	20;"	d	file:
_GNU_SOURCE	cmds-send.c	19;"	d	file:
_GNU_SOURCE	disk-io.c	21;"	d	file:
_GNU_SOURCE	mkfs.c	20;"	d	file:
_GNU_SOURCE	send-test.c	24;"	d	file:
_GNU_SOURCE	super-recover.c	20;"	d	file:
_GNU_SOURCE	utils.c	23;"	d	file:
_LINUX_LIST_H	list.h	20;"	d
_LINUX_LIST_SORT_H	list_sort.h	5;"	d
_LINUX_RADIX_TREE_H	radix-tree.h	38;"	d
_LINUX_RBTREE_H	rbtree.h	95;"	d
_PERF_LINUX_BITOPS_H_	bitops.h	2;"	d
_POSIX_C_SOURCE	cmds-receive.c	20;"	d	file:
_SCRUB_FS_STAT	cmds-scrub.c	171;"	d	file:
_SCRUB_FS_STAT_MIN	cmds-scrub.c	175;"	d	file:
_SCRUB_FS_STAT_ZMAX	cmds-scrub.c	189;"	d	file:
_SCRUB_FS_STAT_ZMIN	cmds-scrub.c	182;"	d	file:
_SCRUB_INVALID	cmds-scrub.c	452;"	d	file:
_SCRUB_KVREAD	cmds-scrub.c	421;"	d	file:
_SCRUB_KVWRITE	cmds-scrub.c	701;"	d	file:
_SCRUB_KVWRITE_STATS	cmds-scrub.c	705;"	d	file:
_SCRUB_SUM	cmds-scrub.c	668;"	d	file:
_XOPEN_SOURCE	btrfs-calc-size.c	19;"	d	file:
_XOPEN_SOURCE	btrfs-convert.c	19;"	d	file:
_XOPEN_SOURCE	btrfs-corrupt-block.c	19;"	d	file:
_XOPEN_SOURCE	btrfs-find-root.c	19;"	d	file:
_XOPEN_SOURCE	btrfs-image.c	19;"	d	file:
_XOPEN_SOURCE	btrfs-map-logical.c	19;"	d	file:
_XOPEN_SOURCE	btrfs-select-super.c	19;"	d	file:
_XOPEN_SOURCE	btrfs-show-super.c	19;"	d	file:
_XOPEN_SOURCE	btrfs-zero-log.c	19;"	d	file:
_XOPEN_SOURCE	btrfstune.c	19;"	d	file:
_XOPEN_SOURCE	chunk-recover.c	18;"	d	file:
_XOPEN_SOURCE	cmds-check.c	19;"	d	file:
_XOPEN_SOURCE	cmds-chunk.c	18;"	d	file:
_XOPEN_SOURCE	cmds-filesystem.c	17;"	d	file:
_XOPEN_SOURCE	cmds-receive.c	21;"	d	file:
_XOPEN_SOURCE	cmds-restore.c	19;"	d	file:
_XOPEN_SOURCE	disk-io.c	19;"	d	file:
_XOPEN_SOURCE	extent_io.c	19;"	d	file:
_XOPEN_SOURCE	mkfs.c	19;"	d	file:
_XOPEN_SOURCE	super-recover.c	19;"	d	file:
_XOPEN_SOURCE	utils.c	20;"	d	file:
_XOPEN_SOURCE	volumes.c	18;"	d	file:
__BTRFS_FREE_SPACE_CACHE	free-space-cache.h	20;"	d
__BTRFS_LEAF_DATA_SIZE	ctree.h	340;"	d
__BTRFS_MATH_H	math.h	22;"	d
__BTRFS_REPAIR__	repair.h	20;"	d
__BTRFS_SEND_A_MAX	send.h	/^	__BTRFS_SEND_A_MAX,$/;"	e	enum:__anon15
__BTRFS_SEND_C_MAX	send.h	/^	__BTRFS_SEND_C_MAX,$/;"	e	enum:btrfs_send_cmd
__BTRFS_VOLUMES_	volumes.h	20;"	d
__BTRFS__	ctree.h	20;"	d
__BUILD_VERSION	version.h	2;"	d
__CHUNK_CHECK_H__	btrfsck.h	21;"	d
__CRC32C__	crc32c.h	20;"	d
__DISKIO__	disk-io.h	20;"	d
__EXTENTMAP__	extent_io.h	20;"	d
__EXTENT_CACHE_H__	extent-cache.h	20;"	d
__GFP_BITS_MASK	kerncompat.h	43;"	d
__GFP_BITS_SHIFT	kerncompat.h	42;"	d
__HASH__	hash.h	20;"	d
__IOCTL_	ioctl.h	20;"	d
__KERNCOMPAT	kerncompat.h	20;"	d
__KERNEL__	kerncompat.h	68;"	d
__KERNEL__	kerncompat.h	78;"	d
__PRINT_TREE_	print-tree.h	20;"	d
__TLV_DO_WHILE_GOTO_FAIL	send-stream.c	181;"	d	file:
__TLV_GOTO_FAIL	send-stream.c	177;"	d	file:
__TRANSACTION__	transaction.h	20;"	d
__USE_XOPEN2K	disk-io.c	20;"	d	file:
__USE_XOPEN2K	extent_io.c	20;"	d	file:
__USE_XOPEN2K	volumes.c	19;"	d	file:
__USE_XOPEN2K8	utils.c	21;"	d	file:
__UTILS__	utils.h	20;"	d
__XOPEN2K8	utils.c	22;"	d	file:
__add_cache_extent	extent-cache.c	/^static int __add_cache_extent(struct cache_tree *tree,$/;"	f	file:
__alloc_extent_buffer	extent_io.c	/^static struct extent_buffer *__alloc_extent_buffer(struct extent_io_tree *tree,$/;"	f	file:
__attribute_const__	kerncompat.h	132;"	d
__be16	kerncompat.h	/^typedef u16 __bitwise __be16;$/;"	t
__be32	kerncompat.h	/^typedef u32 __bitwise __be32;$/;"	t
__be64	kerncompat.h	/^typedef u64 __bitwise __be64;$/;"	t
__bitwise	kerncompat.h	244;"	d
__bitwise	kerncompat.h	246;"	d
__bitwise__	kerncompat.h	56;"	d
__bitwise__	kerncompat.h	59;"	d
__block_iterate_proc	btrfs-convert.c	/^static int __block_iterate_proc(ext2_filsys fs, blk_t *blocknr,$/;"	f	file:
__btrfs_cow_block	ctree.c	/^int __btrfs_cow_block(struct btrfs_trans_handle *trans,$/;"	f
__btrfs_map_block	volumes.c	/^int __btrfs_map_block(struct btrfs_mapping_tree *map_tree, int rw,$/;"	f
__btrfs_mod_ref	extent-tree.c	/^static int __btrfs_mod_ref(struct btrfs_trans_handle *trans,$/;"	f	file:
__btrfs_remove_free_space_cache	free-space-cache.c	/^void __btrfs_remove_free_space_cache(struct btrfs_free_space_ctl *ctl)$/;"	f
__call__	show-blocks	/^  def __call__(self, event):$/;"	m	class:AnnoteFinder	file:
__clear_bit	kerncompat.h	/^static inline void __clear_bit(int nr, volatile unsigned long *addr)$/;"	f
__commit_transaction	disk-io.c	/^static int __commit_transaction(struct btrfs_trans_handle *trans,$/;"	f	file:
__crc32c_le	crc32c.c	/^u32 __crc32c_le(u32 crc, unsigned char const *data, size_t length)$/;"	f
__csum_tree_block_size	disk-io.c	/^static int __csum_tree_block_size(struct extent_buffer *buf, u16 csum_size,$/;"	f	file:
__ffs	bitops.h	/^static __always_inline unsigned long __ffs(unsigned long word)$/;"	f
__filter_and_sort_qgroups	qgroup.c	/^static void __filter_and_sort_qgroups(struct qgroup_lookup *all_qgroups,$/;"	f	file:
__filter_and_sort_subvol	btrfs-list.c	/^static void __filter_and_sort_subvol(struct root_lookup *all_subvols,$/;"	f	file:
__find_device	volumes.c	/^static struct btrfs_device *__find_device(struct list_head *head, u64 devid,$/;"	f	file:
__find_space_info	extent-tree.c	/^static struct btrfs_space_info *__find_space_info(struct btrfs_fs_info *info,$/;"	f	file:
__force	kerncompat.h	55;"	d
__force	kerncompat.h	58;"	d
__free_all_qgroups	qgroup.c	/^void __free_all_qgroups(struct qgroup_lookup *root_tree)$/;"	f
__free_all_subvolumn	btrfs-list.c	/^static inline void __free_all_subvolumn(struct root_lookup *root_tree)$/;"	f	file:
__free_btrfs_qgroup	qgroup.c	/^void __free_btrfs_qgroup(struct btrfs_qgroup *bq)$/;"	f
__free_extent	extent-tree.c	/^static int __free_extent(struct btrfs_trans_handle *trans,$/;"	f	file:
__free_fs_root	disk-io.c	/^static void __free_fs_root(struct rb_node *node)$/;"	f	file:
__free_root_info	btrfs-list.c	/^static void __free_root_info(struct rb_node *node)$/;"	f	file:
__get_cpu_var	kerncompat.h	40;"	d
__init__	show-blocks	/^  def __init__(self, axis=None):$/;"	m	class:AnnoteFinder
__ino_resolve	btrfs-list.c	/^static char *__ino_resolve(int fd, u64 dirid)$/;"	f	file:
__ino_to_path_fd	cmds-inspect.c	/^static int __ino_to_path_fd(u64 inum, int fd, int verbose, const char *prepend)$/;"	f	file:
__le16	kerncompat.h	/^typedef u16 __bitwise __le16;$/;"	t
__le32	kerncompat.h	/^typedef u32 __bitwise __le32;$/;"	t
__le64	kerncompat.h	/^typedef u64 __bitwise __le64;$/;"	t
__le8	kerncompat.h	262;"	d
__list_add	list.h	/^static inline void __list_add(struct list_head *xnew,$/;"	f
__list_del	list.h	/^static inline void __list_del(struct list_head * prev, struct list_head * next)$/;"	f
__list_for_each	list.h	345;"	d
__list_splice	list.h	/^static inline void __list_splice(const struct list_head *list,$/;"	f
__list_subvol_fill_paths	btrfs-list.c	/^static int __list_subvol_fill_paths(int fd, struct root_lookup *root_lookup)$/;"	f	file:
__list_subvol_search	btrfs-list.c	/^static int __list_subvol_search(int fd, struct root_lookup *root_lookup)$/;"	f	file:
__load_free_space_cache	free-space-cache.c	/^static int __load_free_space_cache(struct btrfs_root *root,$/;"	f	file:
__lookup	radix-tree.c	/^__lookup(struct radix_tree_root *root, void **results, unsigned long index,$/;"	f	file:
__lookup_slot	radix-tree.c	/^static inline void **__lookup_slot(struct radix_tree_root *root,$/;"	f	file:
__lookup_tag	radix-tree.c	/^__lookup_tag(struct radix_tree_root *root, void **results, unsigned long index,$/;"	f	file:
__maxindex	radix-tree.c	/^static unsigned long __maxindex(unsigned int height)$/;"	f	file:
__open_ctree_fd	disk-io.c	/^static struct btrfs_fs_info *__open_ctree_fd(int fp, const char *path,$/;"	f	file:
__qgroups_search	qgroup.c	/^static int __qgroups_search(int fd, struct qgroup_lookup *qgroup_lookup)$/;"	f	file:
__rb_erase_color	rbtree.c	/^static void __rb_erase_color(struct rb_node *node, struct rb_node *parent,$/;"	f	file:
__rb_rotate_left	rbtree.c	/^static void __rb_rotate_left(struct rb_node *node, struct rb_root *root)$/;"	f	file:
__rb_rotate_right	rbtree.c	/^static void __rb_rotate_right(struct rb_node *node, struct rb_root *root)$/;"	f	file:
__read_mostly	kerncompat.h	46;"	d
__read_mostly	radix-tree.c	/^static unsigned long height_to_maxindex[RADIX_TREE_MAX_PATH] __read_mostly;$/;"	v	file:
__rebuild_chunk_items	chunk-recover.c	/^static int __rebuild_chunk_items(struct btrfs_trans_handle *trans,$/;"	f	file:
__rebuild_chunk_items	cmds-chunk.c	/^static int __rebuild_chunk_items(struct btrfs_trans_handle *trans,$/;"	f	file:
__rebuild_chunk_root	chunk-recover.c	/^static int __rebuild_chunk_root(struct btrfs_trans_handle *trans,$/;"	f	file:
__rebuild_chunk_root	cmds-chunk.c	/^static int __rebuild_chunk_root(struct btrfs_trans_handle *trans,$/;"	f	file:
__rebuild_device_items	chunk-recover.c	/^static int __rebuild_device_items(struct btrfs_trans_handle *trans,$/;"	f	file:
__rebuild_device_items	cmds-chunk.c	/^static int __rebuild_device_items(struct btrfs_trans_handle *trans,$/;"	f	file:
__recow_root	mkfs.c	/^static void __recow_root(struct btrfs_trans_handle *trans,$/;"	f	file:
__restore_metadump	btrfs-image.c	/^static int __restore_metadump(const char *input, FILE *out, int old_restore,$/;"	f	file:
__round_mask	kerncompat.h	217;"	d
__set_bit	kerncompat.h	/^static inline void __set_bit(int nr, volatile unsigned long *addr)$/;"	f
__setup_root	disk-io.c	/^int __setup_root(u32 nodesize, u32 leafsize, u32 sectorsize,$/;"	f
__strncpy__null	utils.c	/^char *__strncpy__null(char *dest, const char *src, size_t n)$/;"	f
__u32	kerncompat.h	/^typedef unsigned int __u32;$/;"	t
__una_u16	kerncompat.h	/^struct __una_u16 { __le16 x; } __attribute__((__packed__));$/;"	s
__una_u32	kerncompat.h	/^struct __una_u32 { __le32 x; } __attribute__((__packed__));$/;"	s
__una_u64	kerncompat.h	/^struct __una_u64 { __le64 x; } __attribute__((__packed__));$/;"	s
__update_columns_max_len	qgroup.c	/^static void __update_columns_max_len(struct btrfs_qgroup *bq,$/;"	f	file:
_fail	tests/fsck-tests.sh	/^_fail()$/;"	f
_print_scrub_ss	cmds-scrub.c	/^static void _print_scrub_ss(struct scrub_stats *ss)$/;"	f	file:
a	show-blocks	/^a = subplot(1, 1, 1)$/;"	v
a_entries	btrfs-convert.c	/^	acl_ea_entry	a_entries[0];$/;"	m	struct:__anon5	file:
a_version	btrfs-convert.c	/^	__le32		a_version;$/;"	m	struct:__anon3	file:
a_version	btrfs-convert.c	/^	__le32		a_version;$/;"	m	struct:__anon5	file:
accel_group	main.c	/^GtkAccelGroup *accel_group;\/\/快捷键集$/;"	v
acl_ea_entry	btrfs-convert.c	/^} acl_ea_entry;$/;"	t	typeref:struct:__anon4	file:
acl_ea_header	btrfs-convert.c	/^} acl_ea_header;$/;"	t	typeref:struct:__anon5	file:
acl_ea_size	btrfs-convert.c	/^static inline size_t acl_ea_size(int count)$/;"	f	file:
action	bcp	/^                  action="store_true")$/;"	v
active_node	cmds-check.c	/^	int active_node;$/;"	m	struct:walk_control	file:
add_cache_extent	extent-cache.c	/^int add_cache_extent(struct cache_tree *tree, u64 start, u64 size)$/;"	f
add_cache_extent2	extent-cache.c	/^int add_cache_extent2(struct cache_tree *tree,$/;"	f
add_clone_source	cmds-send.c	/^static void add_clone_source(struct btrfs_send *s, u64 root_id)$/;"	f	file:
add_cluster	btrfs-image.c	/^static int add_cluster(struct meta_cluster *cluster,$/;"	f	file:
add_data_backref	cmds-check.c	/^static int add_data_backref(struct cache_tree *extent_cache, u64 bytenr,$/;"	f	file:
add_directory_items	mkfs.c	/^static int add_directory_items(struct btrfs_trans_handle *trans,$/;"	f	file:
add_extent	btrfs-image.c	/^static int add_extent(u64 start, u64 size, struct metadump_struct *md,$/;"	f	file:
add_extent_rec	cmds-check.c	/^static int add_extent_rec(struct cache_tree *extent_cache,$/;"	f	file:
add_file_items	mkfs.c	/^static int add_file_items(struct btrfs_trans_handle *trans,$/;"	f	file:
add_inode_backref	cmds-check.c	/^static int add_inode_backref(struct cache_tree *inode_cache,$/;"	f	file:
add_inode_items	mkfs.c	/^static int add_inode_items(struct btrfs_trans_handle *trans,$/;"	f	file:
add_pending	cmds-check.c	/^static int add_pending(struct cache_tree *pending,$/;"	f	file:
add_qgroup	qgroup.c	/^static int add_qgroup(struct qgroup_lookup *qgroup_lookup, u64 qgroupid,$/;"	f	file:
add_root	btrfs-list.c	/^static int add_root(struct root_lookup *root_lookup,$/;"	f	file:
add_root_backref	cmds-check.c	/^static int add_root_backref(struct cache_tree *root_cache,$/;"	f	file:
add_root_to_dirty_list	ctree.c	/^void add_root_to_dirty_list(struct btrfs_root *root)$/;"	f
add_root_to_pending	cmds-check.c	/^static int add_root_to_pending(struct extent_buffer *buf,$/;"	f	file:
add_seek	btrfs-calc-size.c	/^static int add_seek(struct rb_root *root, u64 dist)$/;"	f	file:
add_seen_fsid	cmds-filesystem.c	/^static int add_seen_fsid(u8 *fsid)$/;"	f	file:
add_shared_node	cmds-check.c	/^static int add_shared_node(struct cache_tree *shared, u64 bytenr, u32 refs)$/;"	f	file:
add_superblock_record	super-recover.c	/^static int add_superblock_record(struct btrfs_super_block *sb, char *fname,$/;"	f	file:
add_symbolic_link	mkfs.c	/^static int add_symbolic_link(struct btrfs_trans_handle *trans,$/;"	f	file:
add_to_fs_stat	cmds-scrub.c	/^static void add_to_fs_stat(struct btrfs_scrub_progress *p,$/;"	f	file:
add_tree_backref	cmds-check.c	/^static int add_tree_backref(struct cache_tree *extent_cache, u64 bytenr,$/;"	f	file:
add_xattr_item	mkfs.c	/^static int add_xattr_item(struct btrfs_trans_handle *trans,$/;"	f	file:
align_frame	subvolume.h	/^GtkWidget *align_frame;\/\/排列组建$/;"	v
all_backpointers_checked	cmds-check.c	/^static int all_backpointers_checked(struct extent_record *rec, int print_errs)$/;"	f	file:
all_comp_funcs	btrfs-list.c	/^static btrfs_list_comp_func all_comp_funcs[] = {$/;"	v	file:
all_comp_funcs	btrfs-list.c	/^static btrfs_list_comp_func all_comp_funcs[];$/;"	v	file:
all_comp_funcs	qgroup.c	/^static btrfs_qgroup_comp_func all_comp_funcs[] = {$/;"	v	file:
all_comp_funcs	qgroup.c	/^static btrfs_qgroup_comp_func all_comp_funcs[];$/;"	v	file:
all_filter_funcs	btrfs-list.c	/^static btrfs_list_filter_func all_filter_funcs[] = {$/;"	v	file:
all_filter_funcs	btrfs-list.c	/^static btrfs_list_filter_func all_filter_funcs[];$/;"	v	file:
all_filter_funcs	qgroup.c	/^static btrfs_qgroup_filter_func all_filter_funcs[] = {$/;"	v	file:
all_filter_funcs	qgroup.c	/^static btrfs_qgroup_filter_func all_filter_funcs[];$/;"	v	file:
all_parent_node	qgroup.c	/^	struct rb_node all_parent_node;$/;"	m	struct:btrfs_qgroup	typeref:struct:btrfs_qgroup::rb_node	file:
all_sort_items	btrfs-list.c	/^static char *all_sort_items[] = {$/;"	v	file:
all_sort_items	qgroup.c	/^static char *all_sort_items[] = {$/;"	v	file:
alloc_cache_extent	extent-cache.c	/^alloc_cache_extent(u64 objectid, u64 start, u64 size)$/;"	f	file:
alloc_data_backref	cmds-check.c	/^static struct data_backref *alloc_data_backref(struct extent_record *rec,$/;"	f	file:
alloc_dummy_eb	btrfs-image.c	/^static struct extent_buffer *alloc_dummy_eb(u64 bytenr, u32 size)$/;"	f	file:
alloc_exclude_nr	transaction.h	/^	u64 alloc_exclude_nr;$/;"	m	struct:btrfs_trans_handle
alloc_exclude_start	transaction.h	/^	u64 alloc_exclude_start;$/;"	m	struct:btrfs_trans_handle
alloc_extent	ctree.h	/^       int (*alloc_extent)(struct btrfs_root *root, u64 num_bytes,$/;"	m	struct:btrfs_extent_ops
alloc_extent_buffer	extent_io.c	/^struct extent_buffer *alloc_extent_buffer(struct extent_io_tree *tree,$/;"	f
alloc_extent_state	extent_io.c	/^static struct extent_state *alloc_extent_state(void)$/;"	f	file:
alloc_reserved_tree_block	extent-tree.c	/^static int alloc_reserved_tree_block(struct btrfs_trans_handle *trans,$/;"	f	file:
alloc_start	ctree.h	/^	u64 alloc_start;$/;"	m	struct:btrfs_fs_info
alloc_tree_backref	cmds-check.c	/^static struct tree_backref *alloc_tree_backref(struct extent_record *rec,$/;"	f	file:
alloc_tree_block	extent-tree.c	/^static int alloc_tree_block(struct btrfs_trans_handle *trans,$/;"	f	file:
any_tag_set	radix-tree.c	/^static inline int any_tag_set(struct radix_tree_node *node, unsigned int tag)$/;"	f	file:
args	subvolume_bak.c	/^ char *args[2]={$/;"	v
args1	subvolume_bak.c	/^ char *args1[2] = {	$/;"	v
args2	subvolume_bak.c	/^ char *args2[2] = {$/;"	v
args3	subvolume_bak.c	/^ char *args3[2]={$/;"	v
args4	subvolume_bak.c	/^char *args4[2] = {$/;"	v
args5	subvolume_bak.c	/^ char *args5[3] = {$/;"	v
argv0_buf	btrfs.c	/^static char argv0_buf[ARGV0_BUF_SIZE] = "btrfs";$/;"	v	file:
argv0_buf	help.c	/^static char argv0_buf[ARGV0_BUF_SIZE];$/;"	v	file:
ask_to_continue	cmds-restore.c	/^static int ask_to_continue(const char *file)$/;"	f	file:
ask_user	cmds-chunk.c	/^static int ask_user(char *question)$/;"	f	file:
ask_user	utils.c	/^int ask_user(char *question)$/;"	f
assign	ioctl.h	/^	__u64 assign;$/;"	m	struct:btrfs_ioctl_qgroup_assign_args
async_work	btrfs-image.c	/^struct async_work {$/;"	s	file:
atime	ctree.h	/^	struct btrfs_timespec atime;$/;"	m	struct:btrfs_inode_item	typeref:struct:btrfs_inode_item::btrfs_timespec
avail_data_alloc_bits	ctree.h	/^	u64 avail_data_alloc_bits;$/;"	m	struct:btrfs_fs_info
avail_metadata_alloc_bits	ctree.h	/^	u64 avail_metadata_alloc_bits;$/;"	m	struct:btrfs_fs_info
avail_system_alloc_bits	ctree.h	/^	u64 avail_system_alloc_bits;$/;"	m	struct:btrfs_fs_info
backrefs	cmds-check.c	/^	struct list_head backrefs;$/;"	m	struct:extent_record	typeref:struct:extent_record::list_head	file:
backrefs	cmds-check.c	/^	struct list_head backrefs;$/;"	m	struct:inode_record	typeref:struct:inode_record::list_head	file:
backrefs	cmds-check.c	/^	struct list_head backrefs;$/;"	m	struct:root_record	typeref:struct:root_record::list_head	file:
backward_seeks	btrfs-calc-size.c	/^	u64 backward_seeks;$/;"	m	struct:root_stats	file:
bad_chunks	chunk-recover.c	/^	struct list_head bad_chunks;$/;"	m	struct:recover_control	typeref:struct:recover_control::list_head	file:
bad_chunks	cmds-chunk.c	/^	struct list_head bad_chunks;$/;"	m	struct:recover_control	typeref:struct:recover_control::list_head	file:
bad_supers	super-recover.c	/^	struct list_head bad_supers;$/;"	m	struct:btrfs_recover_superblock	typeref:struct:btrfs_recover_superblock::list_head	file:
balance_cmd_group	cmds-balance.c	/^const struct cmd_group balance_cmd_group = {$/;"	v	typeref:struct:cmd_group
balance_cmd_group_info	cmds-balance.c	/^static const char balance_cmd_group_info[] =$/;"	v	file:
balance_cmd_group_usage	cmds-balance.c	/^static const char * const balance_cmd_group_usage[] = {$/;"	v	file:
balance_level	ctree.c	/^static int balance_level(struct btrfs_trans_handle *trans,$/;"	f	file:
balance_node_right	ctree.c	/^static int balance_node_right(struct btrfs_trans_handle *trans,$/;"	f	file:
bandwidth	ctree.h	/^	u8 bandwidth;$/;"	m	struct:btrfs_dev_item
basep_snap_box	snapshot-scan.h	/^GtkWidget *basep_snap_box;$/;"	v
bg	chunk-recover.c	/^	struct block_group_tree bg;$/;"	m	struct:recover_control	typeref:struct:recover_control::block_group_tree	file:
bg	cmds-chunk.c	/^	struct block_group_tree bg;$/;"	m	struct:recover_control	typeref:struct:recover_control::block_group_tree	file:
bg_rec	btrfsck.h	/^	struct block_group_record *bg_rec;$/;"	m	struct:chunk_record	typeref:struct:chunk_record::block_group_record
bin_search	ctree.c	/^static int bin_search(struct extent_buffer *eb, struct btrfs_key *key,$/;"	f	file:
bindir	Makefile	/^bindir = $(prefix)\/bin$/;"	m
bindir	man/Makefile	/^bindir = $(prefix)\/bin$/;"	m
bitmap	free-space-cache.h	/^	unsigned long *bitmap;$/;"	m	struct:btrfs_free_space
blk_file_in_dev_list	utils.c	/^static int blk_file_in_dev_list(struct btrfs_fs_devices* fs_devices,$/;"	f	file:
blk_iterate_data	btrfs-convert.c	/^struct blk_iterate_data {$/;"	s	file:
block_group	ctree.h	/^	__le64 block_group;$/;"	m	struct:btrfs_inode_item
block_group	transaction.h	/^	struct btrfs_block_group_cache *block_group;$/;"	m	struct:btrfs_trans_handle	typeref:struct:btrfs_trans_handle::btrfs_block_group_cache
block_group_bits	extent-tree.c	/^static int block_group_bits(struct btrfs_block_group_cache *cache, u64 bits)$/;"	f	file:
block_group_cache	ctree.h	/^	struct extent_io_tree block_group_cache;$/;"	m	struct:btrfs_fs_info	typeref:struct:btrfs_fs_info::extent_io_tree
block_group_free_all_extent	chunk-recover.c	/^static int block_group_free_all_extent(struct btrfs_trans_handle *trans,$/;"	f	file:
block_group_free_all_extent	cmds-chunk.c	/^static int block_group_free_all_extent(struct btrfs_trans_handle *trans,$/;"	f	file:
block_group_record	btrfsck.h	/^struct block_group_record {$/;"	s
block_group_remove_all_extent_items	chunk-recover.c	/^static int block_group_remove_all_extent_items(struct btrfs_trans_handle *trans,$/;"	f	file:
block_group_remove_all_extent_items	cmds-chunk.c	/^static int block_group_remove_all_extent_items(struct btrfs_trans_handle *trans,$/;"	f	file:
block_group_state_bits	extent-tree.c	/^static int block_group_state_bits(u64 flags)$/;"	f	file:
block_group_tree	btrfsck.h	/^struct block_group_tree {$/;"	s
block_group_tree_init	btrfsck.h	/^static inline void block_group_tree_init(struct block_group_tree *tree)$/;"	f
block_groups	btrfsck.h	/^	struct list_head block_groups;$/;"	m	struct:block_group_tree	typeref:struct:block_group_tree::list_head
block_info	cmds-check.c	/^struct block_info {$/;"	s	file:
block_iterate_proc	btrfs-convert.c	/^static int block_iterate_proc(ext2_filsys ext2_fs,$/;"	f	file:
blockptr	ctree.h	/^	__le64 blockptr;$/;"	m	struct:btrfs_key_ptr
blocks_reserved	transaction.h	/^	unsigned long blocks_reserved;$/;"	m	struct:btrfs_trans_handle
blocks_used	transaction.h	/^	unsigned long blocks_used;$/;"	m	struct:btrfs_trans_handle
boundary	btrfs-convert.c	/^	u64 boundary;$/;"	m	struct:blk_iterate_data	file:
box	main.c	/^GtkWidget *box,*itemlist_box,*contents_box;\/\/主容器，左边的列表容器，右边的显示区域容器$/;"	v
broken	cmds-check.c	/^	int broken;$/;"	m	struct:extent_entry	file:
broken	cmds-check.c	/^	unsigned int broken:1;$/;"	m	struct:extent_backref	file:
btree_space_waste	cmds-check.c	/^static u64 btree_space_waste = 0;$/;"	v	file:
btrfs_add_block_group	extent-tree.c	/^btrfs_add_block_group(struct btrfs_fs_info *fs_info, u64 bytes_used, u64 type,$/;"	f
btrfs_add_corrupt_extent_record	repair.c	/^int btrfs_add_corrupt_extent_record(struct btrfs_fs_info *info,$/;"	f
btrfs_add_device	volumes.c	/^int btrfs_add_device(struct btrfs_trans_handle *trans,$/;"	f
btrfs_add_free_space	free-space-cache.c	/^static int btrfs_add_free_space(struct btrfs_free_space_ctl *ctl, u64 offset,$/;"	f	file:
btrfs_add_root_ref	root-tree.c	/^int btrfs_add_root_ref(struct btrfs_trans_handle *trans,$/;"	f
btrfs_add_system_chunk	volumes.c	/^int btrfs_add_system_chunk(struct btrfs_trans_handle *trans,$/;"	f
btrfs_add_to_fsid	utils.c	/^int btrfs_add_to_fsid(struct btrfs_trans_handle *trans,$/;"	f
btrfs_alloc_chunk	volumes.c	/^int btrfs_alloc_chunk(struct btrfs_trans_handle *trans,$/;"	f
btrfs_alloc_data_chunk	volumes.c	/^int btrfs_alloc_data_chunk(struct btrfs_trans_handle *trans,$/;"	f
btrfs_alloc_dev_extent	volumes.c	/^static int btrfs_alloc_dev_extent(struct btrfs_trans_handle *trans,$/;"	f	file:
btrfs_alloc_free_block	extent-tree.c	/^struct extent_buffer *btrfs_alloc_free_block(struct btrfs_trans_handle *trans,$/;"	f
btrfs_alloc_path	ctree.c	/^struct btrfs_path *btrfs_alloc_path(void)$/;"	f
btrfs_balance_args	ioctl.h	/^struct btrfs_balance_args {$/;"	s
btrfs_balance_progress	ioctl.h	/^struct btrfs_balance_progress {$/;"	s
btrfs_bio_stripe	volumes.h	/^struct btrfs_bio_stripe {$/;"	s
btrfs_block_can_be_shared	ctree.c	/^static int btrfs_block_can_be_shared(struct btrfs_root *root,$/;"	f	file:
btrfs_block_group_cache	ctree.h	/^struct btrfs_block_group_cache {$/;"	s
btrfs_block_group_item	ctree.h	/^struct btrfs_block_group_item {$/;"	s
btrfs_buffer_header	ctree.h	/^static inline struct btrfs_header *btrfs_buffer_header(struct extent_buffer *eb)$/;"	f
btrfs_buffer_leaf	ctree.h	/^static inline struct btrfs_leaf *btrfs_buffer_leaf(struct extent_buffer *eb)$/;"	f
btrfs_buffer_node	ctree.h	/^static inline struct btrfs_node *btrfs_buffer_node(struct extent_buffer *eb)$/;"	f
btrfs_buffer_uptodate	disk-io.c	/^int btrfs_buffer_uptodate(struct extent_buffer *buf, u64 parent_transid)$/;"	f
btrfs_calc_stripe_index	chunk-recover.c	/^static int btrfs_calc_stripe_index(struct chunk_record *chunk, u64 logical)$/;"	f	file:
btrfs_calc_stripe_index	cmds-chunk.c	/^static int btrfs_calc_stripe_index(struct chunk_record *chunk, u64 logical)$/;"	f	file:
btrfs_check_fs_compatibility	disk-io.c	/^int btrfs_check_fs_compatibility(struct btrfs_super_block *sb, int writable)$/;"	f
btrfs_check_leaf	ctree.c	/^int btrfs_check_leaf(struct btrfs_root *root,$/;"	f
btrfs_check_node	ctree.c	/^int btrfs_check_node(struct btrfs_root *root,$/;"	f
btrfs_chunk	ctree.h	/^struct btrfs_chunk {$/;"	s
btrfs_chunk_item_size	ctree.h	/^static inline unsigned long btrfs_chunk_item_size(int num_stripes)$/;"	f
btrfs_chunk_readonly	volumes.c	/^int btrfs_chunk_readonly(struct btrfs_root *root, u64 chunk_offset)$/;"	f
btrfs_chunk_record_size	btrfsck.h	/^static inline unsigned long btrfs_chunk_record_size(int num_stripes)$/;"	f
btrfs_cleanup_all_caches	disk-io.c	/^void btrfs_cleanup_all_caches(struct btrfs_fs_info *fs_info)$/;"	f
btrfs_clear_header_flag	ctree.h	/^static inline int btrfs_clear_header_flag(struct extent_buffer *eb, u64 flag)$/;"	f
btrfs_close_devices	volumes.c	/^int btrfs_close_devices(struct btrfs_fs_devices *fs_devices)$/;"	f
btrfs_cmd_group	btrfs.c	/^static const struct cmd_group btrfs_cmd_group = {$/;"	v	typeref:struct:cmd_group	file:
btrfs_cmd_group	btrfs.c	/^static const struct cmd_group btrfs_cmd_group;$/;"	v	typeref:struct:cmd_group	file:
btrfs_cmd_group_info	btrfs.c	/^static const char btrfs_cmd_group_info[] =$/;"	v	file:
btrfs_cmd_group_usage	btrfs.c	/^static const char * const btrfs_cmd_group_usage[] = {$/;"	v	file:
btrfs_cmd_header	send.h	/^struct btrfs_cmd_header {$/;"	s
btrfs_commit_transaction	disk-io.c	/^int btrfs_commit_transaction(struct btrfs_trans_handle *trans,$/;"	f
btrfs_comp_keys	ctree.c	/^static int btrfs_comp_keys(struct btrfs_disk_key *disk, struct btrfs_key *k2)$/;"	f	file:
btrfs_compression_type	ctree.h	/^} btrfs_compression_type;$/;"	t	typeref:enum:__anon9
btrfs_convert_libs	Makefile	/^btrfs_convert_libs = -lext2fs -lcom_err$/;"	m
btrfs_copy_root	ctree.c	/^int btrfs_copy_root(struct btrfs_trans_handle *trans,$/;"	f
btrfs_corrupt_block	repair.h	/^struct btrfs_corrupt_block {$/;"	s
btrfs_corrupt_extent_leaf	btrfs-corrupt-block.c	/^static void btrfs_corrupt_extent_leaf(struct btrfs_trans_handle *trans,$/;"	f	file:
btrfs_corrupt_extent_tree	btrfs-corrupt-block.c	/^static void btrfs_corrupt_extent_tree(struct btrfs_trans_handle *trans,$/;"	f	file:
btrfs_cow_block	ctree.c	/^int btrfs_cow_block(struct btrfs_trans_handle *trans,$/;"	f
btrfs_cpu_key_to_disk	ctree.h	/^static inline void btrfs_cpu_key_to_disk(struct btrfs_disk_key *disk,$/;"	f
btrfs_crc32c	crc32c.h	32;"	d
btrfs_csum_data	disk-io.c	/^u32 btrfs_csum_data(struct btrfs_root *root, char *data, u32 seed, size_t len)$/;"	f
btrfs_csum_file_block	file-item.c	/^int btrfs_csum_file_block(struct btrfs_trans_handle *trans,$/;"	f
btrfs_csum_final	disk-io.c	/^void btrfs_csum_final(u32 crc, char *result)$/;"	f
btrfs_csum_item	ctree.h	/^struct btrfs_csum_item {$/;"	s
btrfs_csum_sizes	ctree.h	/^static int btrfs_csum_sizes[] = { 4, 0 };$/;"	v
btrfs_data_container	ioctl.h	/^struct btrfs_data_container {$/;"	s
btrfs_dec_ref	extent-tree.c	/^int btrfs_dec_ref(struct btrfs_trans_handle *trans, struct btrfs_root *root,$/;"	f
btrfs_del_csums	file-item.c	/^int btrfs_del_csums(struct btrfs_trans_handle *trans,$/;"	f
btrfs_del_item	ctree.h	/^static inline int btrfs_del_item(struct btrfs_trans_handle *trans,$/;"	f
btrfs_del_items	ctree.c	/^int btrfs_del_items(struct btrfs_trans_handle *trans, struct btrfs_root *root,$/;"	f
btrfs_del_leaf	ctree.c	/^static noinline int btrfs_del_leaf(struct btrfs_trans_handle *trans,$/;"	f	file:
btrfs_del_ptr	ctree.c	/^int btrfs_del_ptr(struct btrfs_trans_handle *trans, struct btrfs_root *root,$/;"	f
btrfs_dev_extent	ctree.h	/^struct btrfs_dev_extent {$/;"	s
btrfs_dev_extent_chunk_tree_uuid	ctree.h	/^static inline u8 *btrfs_dev_extent_chunk_tree_uuid(struct btrfs_dev_extent *dev)$/;"	f
btrfs_dev_item	ctree.h	/^struct btrfs_dev_item {$/;"	s
btrfs_dev_stat_values	ioctl.h	/^enum btrfs_dev_stat_values {$/;"	g
btrfs_device	volumes.h	/^struct btrfs_device {$/;"	s
btrfs_device_already_in_root	utils.c	/^int btrfs_device_already_in_root(struct btrfs_root *root, int fd,$/;"	f
btrfs_device_avail_bytes	volumes.c	/^static int btrfs_device_avail_bytes(struct btrfs_trans_handle *trans,$/;"	f	file:
btrfs_device_fsid	ctree.h	/^static inline char *btrfs_device_fsid(struct btrfs_dev_item *d)$/;"	f
btrfs_device_size	utils.c	/^u64 btrfs_device_size(int fd, struct stat *st)$/;"	f
btrfs_device_uuid	ctree.h	/^static inline char *btrfs_device_uuid(struct btrfs_dev_item *d)$/;"	f
btrfs_dir_item	ctree.h	/^struct btrfs_dir_item {$/;"	s
btrfs_dir_item_key	ctree.h	/^static inline void btrfs_dir_item_key(struct extent_buffer *eb,$/;"	f
btrfs_dir_item_key_to_cpu	ctree.h	/^static inline void btrfs_dir_item_key_to_cpu(struct extent_buffer *eb,$/;"	f
btrfs_dir_log_item	ctree.h	/^struct btrfs_dir_log_item {$/;"	s
btrfs_disk_key	ctree.h	/^struct btrfs_disk_key {$/;"	s
btrfs_disk_key_to_cpu	ctree.h	/^static inline void btrfs_disk_key_to_cpu(struct btrfs_key *cpu,$/;"	f
btrfs_dump_free_space	free-space-cache.c	/^void btrfs_dump_free_space(struct btrfs_block_group_cache *block_group,$/;"	f
btrfs_encryption_type	ctree.h	/^} btrfs_encryption_type;$/;"	t	typeref:enum:__anon10
btrfs_err_code	ioctl.h	/^enum btrfs_err_code {$/;"	g
btrfs_err_str	ioctl.h	/^static inline char *btrfs_err_str(enum btrfs_err_code err_code)$/;"	f
btrfs_extend_item	ctree.c	/^int btrfs_extend_item(struct btrfs_trans_handle *trans,$/;"	f
btrfs_extent_data_ref	ctree.h	/^struct btrfs_extent_data_ref {$/;"	s
btrfs_extent_inline_ref	ctree.h	/^struct btrfs_extent_inline_ref {$/;"	s
btrfs_extent_inline_ref_size	ctree.h	/^static inline u32 btrfs_extent_inline_ref_size(int type)$/;"	f
btrfs_extent_item	ctree.h	/^struct btrfs_extent_item {$/;"	s
btrfs_extent_item_v0	ctree.h	/^struct btrfs_extent_item_v0 {$/;"	s
btrfs_extent_ops	ctree.h	/^struct btrfs_extent_ops {$/;"	s
btrfs_extent_post_op	extent-tree.c	/^int btrfs_extent_post_op(struct btrfs_trans_handle *trans,$/;"	f
btrfs_extent_ref_v0	ctree.h	/^struct btrfs_extent_ref_v0 {$/;"	s
btrfs_file_extent_calc_inline_size	ctree.h	/^static inline u32 btrfs_file_extent_calc_inline_size(u32 datasize)$/;"	f
btrfs_file_extent_field	btrfs-corrupt-block.c	/^enum btrfs_file_extent_field {$/;"	g	file:
btrfs_file_extent_inline_item_len	ctree.h	/^static inline u32 btrfs_file_extent_inline_item_len(struct extent_buffer *eb,$/;"	f
btrfs_file_extent_inline_len	ctree.h	/^static inline u32 btrfs_file_extent_inline_len(struct extent_buffer *eb,$/;"	f
btrfs_file_extent_inline_start	ctree.h	/^static inline unsigned long btrfs_file_extent_inline_start(struct$/;"	f
btrfs_file_extent_item	ctree.h	/^struct btrfs_file_extent_item {$/;"	s
btrfs_find_block_group	extent-tree.c	/^btrfs_find_block_group(struct btrfs_root *root, struct btrfs_block_group_cache$/;"	f	file:
btrfs_find_create_tree_block	disk-io.c	/^struct extent_buffer *btrfs_find_create_tree_block(struct btrfs_root *root,$/;"	f
btrfs_find_device	volumes.c	/^struct btrfs_device *btrfs_find_device(struct btrfs_root *root, u64 devid,$/;"	f
btrfs_find_device_by_devid	volumes.c	/^btrfs_find_device_by_devid(struct btrfs_fs_devices *fs_devices,$/;"	f
btrfs_find_free_objectid	inode-map.c	/^int btrfs_find_free_objectid(struct btrfs_trans_handle *trans,$/;"	f
btrfs_find_free_space	free-space-cache.c	/^btrfs_find_free_space(struct btrfs_free_space_ctl *ctl, u64 offset, u64 bytes)$/;"	f
btrfs_find_last_root	root-tree.c	/^int btrfs_find_last_root(struct btrfs_root *root, u64 objectid,$/;"	f
btrfs_find_tree_block	disk-io.c	/^struct extent_buffer *btrfs_find_tree_block(struct btrfs_root *root,$/;"	f
btrfs_finish_extent_commit	extent-tree.c	/^int btrfs_finish_extent_commit(struct btrfs_trans_handle *trans,$/;"	f
btrfs_fix_block_accounting	extent-tree.c	/^int btrfs_fix_block_accounting(struct btrfs_trans_handle *trans,$/;"	f
btrfs_fragment_libs	Makefile	/^btrfs_fragment_libs = -lgd -lpng -ljpeg -lfreetype$/;"	m
btrfs_free_block_groups	extent-tree.c	/^int btrfs_free_block_groups(struct btrfs_fs_info *info)$/;"	f
btrfs_free_extent	extent-tree.c	/^int btrfs_free_extent(struct btrfs_trans_handle *trans,$/;"	f
btrfs_free_extent_state	extent_io.c	/^static void btrfs_free_extent_state(struct extent_state *state)$/;"	f	file:
btrfs_free_fs_info	disk-io.c	/^void btrfs_free_fs_info(struct btrfs_fs_info *fs_info)$/;"	f
btrfs_free_fs_root	disk-io.c	/^int btrfs_free_fs_root(struct btrfs_root *root)$/;"	f
btrfs_free_path	ctree.c	/^void btrfs_free_path(struct btrfs_path *p)$/;"	f
btrfs_free_space	free-space-cache.h	/^struct btrfs_free_space {$/;"	s
btrfs_free_space_ctl	free-space-cache.h	/^struct btrfs_free_space_ctl {$/;"	s
btrfs_free_space_entry	ctree.h	/^struct btrfs_free_space_entry {$/;"	s
btrfs_free_space_header	ctree.h	/^struct btrfs_free_space_header {$/;"	s
btrfs_free_space_key	ctree.h	/^static inline void btrfs_free_space_key(struct extent_buffer *eb,$/;"	f
btrfs_free_transaction	transaction.h	/^static inline void btrfs_free_transaction(struct btrfs_root *root,$/;"	f
btrfs_fs_devices	volumes.h	/^struct btrfs_fs_devices {$/;"	s
btrfs_fs_feature	mkfs.c	/^static const struct btrfs_fs_feature {$/;"	s	file:
btrfs_fs_incompat	ctree.h	/^static inline int btrfs_fs_incompat(struct btrfs_fs_info *fs_info, u64 flag)$/;"	f
btrfs_fs_info	ctree.h	/^struct btrfs_fs_info {$/;"	s
btrfs_fs_roots_compare_objectids	disk-io.c	/^static int btrfs_fs_roots_compare_objectids(struct rb_node *node,$/;"	f	file:
btrfs_fs_roots_compare_roots	disk-io.c	/^static int btrfs_fs_roots_compare_roots(struct rb_node *node1,$/;"	f	file:
btrfs_fsck_reinit_root	cmds-check.c	/^static int btrfs_fsck_reinit_root(struct btrfs_trans_handle *trans,$/;"	f	file:
btrfs_get_device_extents	chunk-recover.c	/^static int btrfs_get_device_extents(u64 chunk_object,$/;"	f	file:
btrfs_get_device_extents	cmds-chunk.c	/^static int btrfs_get_device_extents(u64 chunk_object,$/;"	f	file:
btrfs_get_path_rootid	qgroup.c	/^u64 btrfs_get_path_rootid(int fd)$/;"	f
btrfs_get_root_id_by_sub_path	send-utils.c	/^static int btrfs_get_root_id_by_sub_path(int mnt_fd, const char *sub_path,$/;"	f	file:
btrfs_get_subvol	btrfs-list.c	/^int btrfs_get_subvol(int fd, struct root_info *the_ri)$/;"	f
btrfs_header	ctree.h	/^struct btrfs_header {$/;"	s
btrfs_header_backref_rev	ctree.h	/^static inline int btrfs_header_backref_rev(struct extent_buffer *eb)$/;"	f
btrfs_header_chunk_tree_uuid	ctree.h	/^static inline u8 *btrfs_header_chunk_tree_uuid(struct extent_buffer *eb)$/;"	f
btrfs_header_csum	ctree.h	/^static inline u8 *btrfs_header_csum(struct extent_buffer *eb)$/;"	f
btrfs_header_flag	ctree.h	/^static inline int btrfs_header_flag(struct extent_buffer *eb, u64 flag)$/;"	f
btrfs_header_fsid	ctree.h	/^static inline unsigned long btrfs_header_fsid(void)$/;"	f
btrfs_image_libs	Makefile	/^btrfs_image_libs = -lpthread$/;"	m
btrfs_inc_extent_ref	extent-tree.c	/^int btrfs_inc_extent_ref(struct btrfs_trans_handle *trans,$/;"	f
btrfs_inc_ref	extent-tree.c	/^int btrfs_inc_ref(struct btrfs_trans_handle *trans, struct btrfs_root *root,$/;"	f
btrfs_init_free_space_ctl	free-space-cache.c	/^int btrfs_init_free_space_ctl(struct btrfs_block_group_cache *block_group,$/;"	f
btrfs_init_path	ctree.c	/^inline void btrfs_init_path(struct btrfs_path *p)$/;"	f
btrfs_inode_atime	ctree.h	/^btrfs_inode_atime(struct btrfs_inode_item *inode_item)$/;"	f
btrfs_inode_ctime	ctree.h	/^btrfs_inode_ctime(struct btrfs_inode_item *inode_item)$/;"	f
btrfs_inode_extref	ctree.h	/^struct btrfs_inode_extref {$/;"	s
btrfs_inode_field	btrfs-corrupt-block.c	/^enum btrfs_inode_field {$/;"	g	file:
btrfs_inode_item	ctree.h	/^struct btrfs_inode_item {$/;"	s
btrfs_inode_mtime	ctree.h	/^btrfs_inode_mtime(struct btrfs_inode_item *inode_item)$/;"	f
btrfs_inode_otime	ctree.h	/^btrfs_inode_otime(struct btrfs_inode_item *inode_item)$/;"	f
btrfs_inode_ref	ctree.h	/^struct btrfs_inode_ref {$/;"	s
btrfs_insert_dir_item	dir-item.c	/^int btrfs_insert_dir_item(struct btrfs_trans_handle *trans, struct btrfs_root$/;"	f
btrfs_insert_empty_item	ctree.h	/^static inline int btrfs_insert_empty_item(struct btrfs_trans_handle *trans,$/;"	f
btrfs_insert_empty_items	ctree.c	/^int btrfs_insert_empty_items(struct btrfs_trans_handle *trans,$/;"	f
btrfs_insert_file_extent	file-item.c	/^int btrfs_insert_file_extent(struct btrfs_trans_handle *trans,$/;"	f
btrfs_insert_inline_extent	file-item.c	/^int btrfs_insert_inline_extent(struct btrfs_trans_handle *trans,$/;"	f
btrfs_insert_inode	inode-item.c	/^int btrfs_insert_inode(struct btrfs_trans_handle *trans, struct btrfs_root$/;"	f
btrfs_insert_inode_ref	inode-item.c	/^int btrfs_insert_inode_ref(struct btrfs_trans_handle *trans,$/;"	f
btrfs_insert_item	ctree.c	/^int btrfs_insert_item(struct btrfs_trans_handle *trans, struct btrfs_root$/;"	f
btrfs_insert_root	root-tree.c	/^int btrfs_insert_root(struct btrfs_trans_handle *trans, struct btrfs_root$/;"	f
btrfs_insert_xattr_item	dir-item.c	/^int btrfs_insert_xattr_item(struct btrfs_trans_handle *trans,$/;"	f
btrfs_ioctl_balance_args	ioctl.h	/^struct btrfs_ioctl_balance_args {$/;"	s
btrfs_ioctl_clone_range_args	ioctl.h	/^struct btrfs_ioctl_clone_range_args {$/;"	s
btrfs_ioctl_defrag_range_args	ioctl.h	/^struct btrfs_ioctl_defrag_range_args {$/;"	s
btrfs_ioctl_dev_info_args	ioctl.h	/^struct btrfs_ioctl_dev_info_args {$/;"	s
btrfs_ioctl_dev_replace_args	ioctl.h	/^struct btrfs_ioctl_dev_replace_args {$/;"	s
btrfs_ioctl_dev_replace_start_params	ioctl.h	/^struct btrfs_ioctl_dev_replace_start_params {$/;"	s
btrfs_ioctl_dev_replace_status_params	ioctl.h	/^struct btrfs_ioctl_dev_replace_status_params {$/;"	s
btrfs_ioctl_fs_info_args	ioctl.h	/^struct btrfs_ioctl_fs_info_args {$/;"	s
btrfs_ioctl_get_dev_stats	ioctl.h	/^struct btrfs_ioctl_get_dev_stats {$/;"	s
btrfs_ioctl_ino_lookup_args	ioctl.h	/^struct btrfs_ioctl_ino_lookup_args {$/;"	s
btrfs_ioctl_ino_path_args	ioctl.h	/^struct btrfs_ioctl_ino_path_args {$/;"	s
btrfs_ioctl_logical_ino_args	ioctl.h	/^struct btrfs_ioctl_logical_ino_args {$/;"	s
btrfs_ioctl_qgroup_assign_args	ioctl.h	/^struct btrfs_ioctl_qgroup_assign_args {$/;"	s
btrfs_ioctl_qgroup_create_args	ioctl.h	/^struct btrfs_ioctl_qgroup_create_args {$/;"	s
btrfs_ioctl_qgroup_limit_args	ioctl.h	/^struct btrfs_ioctl_qgroup_limit_args {$/;"	s
btrfs_ioctl_quota_ctl_args	ioctl.h	/^struct btrfs_ioctl_quota_ctl_args {$/;"	s
btrfs_ioctl_quota_rescan_args	ioctl.h	/^struct btrfs_ioctl_quota_rescan_args {$/;"	s
btrfs_ioctl_received_subvol_args	ioctl.h	/^struct btrfs_ioctl_received_subvol_args {$/;"	s
btrfs_ioctl_scrub_args	ioctl.h	/^struct btrfs_ioctl_scrub_args {$/;"	s
btrfs_ioctl_search_args	ioctl.h	/^struct btrfs_ioctl_search_args {$/;"	s
btrfs_ioctl_search_header	ioctl.h	/^struct btrfs_ioctl_search_header {$/;"	s
btrfs_ioctl_search_key	ioctl.h	/^struct btrfs_ioctl_search_key {$/;"	s
btrfs_ioctl_send_args	ioctl.h	/^struct btrfs_ioctl_send_args {$/;"	s
btrfs_ioctl_space_args	ioctl.h	/^struct btrfs_ioctl_space_args {$/;"	s
btrfs_ioctl_space_info	ioctl.h	/^struct btrfs_ioctl_space_info {$/;"	s
btrfs_ioctl_timespec	ioctl.h	/^struct btrfs_ioctl_timespec {$/;"	s
btrfs_ioctl_vol_args	ioctl.h	/^struct btrfs_ioctl_vol_args {$/;"	s
btrfs_ioctl_vol_args_v2	ioctl.h	/^struct btrfs_ioctl_vol_args_v2 {$/;"	s
btrfs_is_leaf	ctree.h	/^static inline int btrfs_is_leaf(struct extent_buffer *eb)$/;"	f
btrfs_item	ctree.h	/^struct btrfs_item {$/;"	s
btrfs_item_end	ctree.h	/^static inline u32 btrfs_item_end(struct extent_buffer *eb,$/;"	f
btrfs_item_end_nr	ctree.h	/^static inline u32 btrfs_item_end_nr(struct extent_buffer *eb, int nr)$/;"	f
btrfs_item_key	ctree.h	/^static inline void btrfs_item_key(struct extent_buffer *eb,$/;"	f
btrfs_item_key_to_cpu	ctree.h	/^static inline void btrfs_item_key_to_cpu(struct extent_buffer *eb,$/;"	f
btrfs_item_nr	ctree.h	/^static inline struct btrfs_item *btrfs_item_nr(int nr)$/;"	f
btrfs_item_nr_offset	ctree.h	/^static inline unsigned long btrfs_item_nr_offset(int nr)$/;"	f
btrfs_item_offset_nr	ctree.h	/^static inline u32 btrfs_item_offset_nr(struct extent_buffer *eb, int nr)$/;"	f
btrfs_item_ptr	ctree.h	2118;"	d
btrfs_item_ptr_offset	ctree.h	2122;"	d
btrfs_item_size_nr	ctree.h	/^static inline u32 btrfs_item_size_nr(struct extent_buffer *eb, int nr)$/;"	f
btrfs_key	ctree.h	/^struct btrfs_key {$/;"	s
btrfs_key_ptr	ctree.h	/^struct btrfs_key_ptr {$/;"	s
btrfs_key_type	ctree.h	/^static inline u8 btrfs_key_type(struct btrfs_key *key)$/;"	f
btrfs_leaf	ctree.h	/^struct btrfs_leaf {$/;"	s
btrfs_leaf_data	ctree.h	/^static inline unsigned long btrfs_leaf_data(struct extent_buffer *l)$/;"	f
btrfs_leaf_free_space	ctree.c	/^int btrfs_leaf_free_space(struct btrfs_root *root, struct extent_buffer *leaf)$/;"	f
btrfs_level_size	ctree.h	/^static inline u32 btrfs_level_size(struct btrfs_root *root, int level) {$/;"	f
btrfs_list_alloc_comparer_set	btrfs-list.c	/^struct btrfs_list_comparer_set *btrfs_list_alloc_comparer_set(void)$/;"	f
btrfs_list_alloc_filter_set	btrfs-list.c	/^struct btrfs_list_filter_set *btrfs_list_alloc_filter_set(void)$/;"	f
btrfs_list_column_enum	btrfs-list.h	/^enum btrfs_list_column_enum {$/;"	g
btrfs_list_columns	btrfs-list.c	/^} btrfs_list_columns[] = {$/;"	v	typeref:struct:__anon6	file:
btrfs_list_comp_enum	btrfs-list.h	/^enum btrfs_list_comp_enum {$/;"	g
btrfs_list_comp_func	btrfs-list.h	/^typedef int (*btrfs_list_comp_func)(struct root_info *, struct root_info *,$/;"	t
btrfs_list_comparer	btrfs-list.h	/^struct btrfs_list_comparer {$/;"	s
btrfs_list_comparer_set	btrfs-list.h	/^struct btrfs_list_comparer_set {$/;"	s
btrfs_list_filter	btrfs-list.h	/^struct btrfs_list_filter {$/;"	s
btrfs_list_filter_enum	btrfs-list.h	/^enum btrfs_list_filter_enum {$/;"	g
btrfs_list_filter_func	btrfs-list.h	/^typedef int (*btrfs_list_filter_func)(struct root_info *, u64);$/;"	t
btrfs_list_filter_set	btrfs-list.h	/^struct btrfs_list_filter_set {$/;"	s
btrfs_list_find_updated_files	btrfs-list.c	/^int btrfs_list_find_updated_files(int fd, u64 root_id, u64 oldest_gen)$/;"	f
btrfs_list_free_comparer_set	btrfs-list.c	/^void btrfs_list_free_comparer_set(struct btrfs_list_comparer_set *comp_set)$/;"	f
btrfs_list_free_filter_set	btrfs-list.c	/^void btrfs_list_free_filter_set(struct btrfs_list_filter_set *filter_set)$/;"	f
btrfs_list_get_default_subvolume	btrfs-list.c	/^int btrfs_list_get_default_subvolume(int fd, u64 *default_id)$/;"	f
btrfs_list_get_path_rootid	btrfs-list.c	/^int btrfs_list_get_path_rootid(int fd, u64 *treeid)$/;"	f
btrfs_list_get_sort_item	btrfs-list.c	/^static int  btrfs_list_get_sort_item(char *sort_name)$/;"	f	file:
btrfs_list_parse_filter_string	btrfs-list.c	/^int btrfs_list_parse_filter_string(char *opt_arg,$/;"	f
btrfs_list_parse_sort_string	btrfs-list.c	/^int btrfs_list_parse_sort_string(char *opt_arg,$/;"	f
btrfs_list_path_for_root	btrfs-list.c	/^char *btrfs_list_path_for_root(int fd, u64 root)$/;"	f
btrfs_list_setup_comparer	btrfs-list.c	/^static int btrfs_list_setup_comparer(struct btrfs_list_comparer_set **comp_set,$/;"	f	file:
btrfs_list_setup_filter	btrfs-list.c	/^int btrfs_list_setup_filter(struct btrfs_list_filter_set **filter_set,$/;"	f
btrfs_list_setup_print_column	btrfs-list.c	/^void btrfs_list_setup_print_column(enum btrfs_list_column_enum column)$/;"	f
btrfs_list_subvols	btrfs-list.c	/^static int btrfs_list_subvols(int fd, struct root_lookup *root_lookup)$/;"	f	file:
btrfs_list_subvols_print	btrfs-list.c	/^int btrfs_list_subvols_print(int fd, struct btrfs_list_filter_set *filter_set,$/;"	f
btrfs_lookup_block_group	extent-tree.c	/^struct btrfs_block_group_cache *btrfs_lookup_block_group(struct$/;"	f
btrfs_lookup_csum	file-item.c	/^btrfs_lookup_csum(struct btrfs_trans_handle *trans,$/;"	f	file:
btrfs_lookup_dir_item	dir-item.c	/^struct btrfs_dir_item *btrfs_lookup_dir_item(struct btrfs_trans_handle *trans,$/;"	f
btrfs_lookup_extent_info	extent-tree.c	/^int btrfs_lookup_extent_info(struct btrfs_trans_handle *trans,$/;"	f
btrfs_lookup_first_block_group	extent-tree.c	/^struct btrfs_block_group_cache *btrfs_lookup_first_block_group(struct$/;"	f
btrfs_lookup_inode	inode-item.c	/^int btrfs_lookup_inode(struct btrfs_trans_handle *trans, struct btrfs_root$/;"	f
btrfs_lookup_uuid_received_subvol_item	uuid-tree.c	/^int btrfs_lookup_uuid_received_subvol_item(int fd, const u8 *uuid,$/;"	f
btrfs_lookup_uuid_subvol_item	uuid-tree.c	/^int btrfs_lookup_uuid_subvol_item(int fd, const u8 *uuid, u64 *subvol_id)$/;"	f
btrfs_main	btrfs.c	/^int btrfs_main(int argc, char **argv)$/;"	f
btrfs_make_block_group	extent-tree.c	/^int btrfs_make_block_group(struct btrfs_trans_handle *trans,$/;"	f
btrfs_make_block_groups	extent-tree.c	/^int btrfs_make_block_groups(struct btrfs_trans_handle *trans,$/;"	f
btrfs_make_root_dir	utils.c	/^int btrfs_make_root_dir(struct btrfs_trans_handle *trans,$/;"	f
btrfs_map_block	volumes.c	/^int btrfs_map_block(struct btrfs_mapping_tree *map_tree, int rw,$/;"	f
btrfs_map_lookup_size	volumes.h	106;"	d
btrfs_mapping_tree	ctree.h	/^struct btrfs_mapping_tree {$/;"	s
btrfs_mark_buffer_dirty	disk-io.c	/^void btrfs_mark_buffer_dirty(struct extent_buffer *eb)$/;"	f
btrfs_match_dir_item_name	dir-item.c	/^static struct btrfs_dir_item *btrfs_match_dir_item_name(struct btrfs_root *root,$/;"	f	file:
btrfs_metadata_block_field	btrfs-corrupt-block.c	/^enum btrfs_metadata_block_field {$/;"	g	file:
btrfs_multi_bio	volumes.h	/^struct btrfs_multi_bio {$/;"	s
btrfs_multi_bio_size	volumes.h	104;"	d
btrfs_name_hash	hash.h	/^static inline u64 btrfs_name_hash(const char *name, int len)$/;"	f
btrfs_new_block_group_record	cmds-check.c	/^btrfs_new_block_group_record(struct extent_buffer *leaf, struct btrfs_key *key,$/;"	f
btrfs_new_chunk_record	cmds-check.c	/^struct chunk_record *btrfs_new_chunk_record(struct extent_buffer *leaf,$/;"	f
btrfs_new_device_extent_record	cmds-check.c	/^btrfs_new_device_extent_record(struct extent_buffer *leaf,$/;"	f
btrfs_new_extent_record	chunk-recover.c	/^static struct extent_record *btrfs_new_extent_record(struct extent_buffer *eb)$/;"	f	file:
btrfs_new_extent_record	cmds-chunk.c	/^static struct extent_record *btrfs_new_extent_record(struct extent_buffer *eb)$/;"	f	file:
btrfs_new_fs_info	disk-io.c	/^struct btrfs_fs_info *btrfs_new_fs_info(int writable, u64 sb_bytenr)$/;"	f
btrfs_next_leaf	ctree.c	/^int btrfs_next_leaf(struct btrfs_root *root, struct btrfs_path *path)$/;"	f
btrfs_next_metadata	volumes.c	/^int btrfs_next_metadata(struct btrfs_mapping_tree *map_tree, u64 *logical,$/;"	f
btrfs_next_stripe_logical_offset	chunk-recover.c	/^static inline u64 btrfs_next_stripe_logical_offset(struct chunk_record *chunk,$/;"	f	file:
btrfs_next_stripe_logical_offset	cmds-chunk.c	/^static inline u64 btrfs_next_stripe_logical_offset(struct chunk_record *chunk,$/;"	f	file:
btrfs_node	ctree.h	/^struct btrfs_node {$/;"	s
btrfs_node_blockptr	ctree.h	/^static inline u64 btrfs_node_blockptr(struct extent_buffer *eb, int nr)$/;"	f
btrfs_node_key	ctree.h	/^static inline void btrfs_node_key(struct extent_buffer *eb,$/;"	f
btrfs_node_key_ptr_offset	ctree.h	/^static inline unsigned long btrfs_node_key_ptr_offset(int nr)$/;"	f
btrfs_node_key_to_cpu	ctree.h	/^static inline void btrfs_node_key_to_cpu(struct extent_buffer *eb,$/;"	f
btrfs_node_ptr_generation	ctree.h	/^static inline u64 btrfs_node_ptr_generation(struct extent_buffer *eb, int nr)$/;"	f
btrfs_num_copies	volumes.c	/^int btrfs_num_copies(struct btrfs_mapping_tree *map_tree, u64 logical, u64 len)$/;"	f
btrfs_open_ctree_flags	disk-io.h	/^enum btrfs_open_ctree_flags {$/;"	g
btrfs_open_devices	volumes.c	/^int btrfs_open_devices(struct btrfs_fs_devices *fs_devices, int flags)$/;"	f
btrfs_path	ctree.h	/^struct btrfs_path {$/;"	s
btrfs_pin_extent	extent-tree.c	/^void btrfs_pin_extent(struct btrfs_fs_info *fs_info,$/;"	f
btrfs_prepare_device	utils.c	/^int btrfs_prepare_device(int fd, char *file, int zero_end, u64 *block_count_ret,$/;"	f
btrfs_prev_leaf	ctree.c	/^int btrfs_prev_leaf(struct btrfs_root *root, struct btrfs_path *path)$/;"	f
btrfs_previous_item	ctree.c	/^int btrfs_previous_item(struct btrfs_root *root,$/;"	f
btrfs_print_key	print-tree.c	/^void btrfs_print_key(struct btrfs_disk_key *disk_key)$/;"	f
btrfs_print_leaf	print-tree.c	/^void btrfs_print_leaf(struct btrfs_root *root, struct extent_buffer *l)$/;"	f
btrfs_print_tree	print-tree.c	/^void btrfs_print_tree(struct btrfs_root *root, struct extent_buffer *eb, int follow)$/;"	f
btrfs_qgroup	qgroup.c	/^struct btrfs_qgroup {$/;"	s	file:
btrfs_qgroup_alloc_comparer_set	qgroup.c	/^struct btrfs_qgroup_comparer_set *btrfs_qgroup_alloc_comparer_set(void)$/;"	f
btrfs_qgroup_alloc_filter_set	qgroup.c	/^struct btrfs_qgroup_filter_set *btrfs_qgroup_alloc_filter_set(void)$/;"	f
btrfs_qgroup_column_enum	qgroup.h	/^enum btrfs_qgroup_column_enum {$/;"	g
btrfs_qgroup_columns	qgroup.c	/^} btrfs_qgroup_columns[] = {$/;"	v	typeref:struct:__anon14
btrfs_qgroup_comp_enum	qgroup.h	/^enum btrfs_qgroup_comp_enum {$/;"	g
btrfs_qgroup_comp_func	qgroup.h	/^typedef int (*btrfs_qgroup_comp_func)(struct btrfs_qgroup *,$/;"	t
btrfs_qgroup_comparer	qgroup.h	/^struct btrfs_qgroup_comparer {$/;"	s
btrfs_qgroup_comparer_set	qgroup.h	/^struct btrfs_qgroup_comparer_set {$/;"	s
btrfs_qgroup_filter	qgroup.h	/^struct btrfs_qgroup_filter {$/;"	s
btrfs_qgroup_filter_enum	qgroup.h	/^enum btrfs_qgroup_filter_enum {$/;"	g
btrfs_qgroup_filter_func	qgroup.h	/^typedef int (*btrfs_qgroup_filter_func)(struct btrfs_qgroup *, u64);$/;"	t
btrfs_qgroup_filter_set	qgroup.h	/^struct btrfs_qgroup_filter_set {$/;"	s
btrfs_qgroup_free_comparer_set	qgroup.c	/^void btrfs_qgroup_free_comparer_set(struct btrfs_qgroup_comparer_set *comp_set)$/;"	f
btrfs_qgroup_free_filter_set	qgroup.c	/^void btrfs_qgroup_free_filter_set(struct btrfs_qgroup_filter_set *filter_set)$/;"	f
btrfs_qgroup_get_sort_item	qgroup.c	/^static int  btrfs_qgroup_get_sort_item(char *sort_name)$/;"	f	file:
btrfs_qgroup_info_item	ctree.h	/^struct btrfs_qgroup_info_item {$/;"	s
btrfs_qgroup_inherit	ioctl.h	/^struct btrfs_qgroup_inherit {$/;"	s
btrfs_qgroup_limit	ioctl.h	/^struct btrfs_qgroup_limit {$/;"	s
btrfs_qgroup_limit_item	ctree.h	/^struct btrfs_qgroup_limit_item {$/;"	s
btrfs_qgroup_list	qgroup.c	/^struct btrfs_qgroup_list {$/;"	s	file:
btrfs_qgroup_parse_sort_string	qgroup.c	/^int btrfs_qgroup_parse_sort_string(char *opt_arg,$/;"	f
btrfs_qgroup_setup_comparer	qgroup.c	/^int btrfs_qgroup_setup_comparer(struct btrfs_qgroup_comparer_set  **comp_set,$/;"	f
btrfs_qgroup_setup_filter	qgroup.c	/^int btrfs_qgroup_setup_filter(struct btrfs_qgroup_filter_set **filter_set,$/;"	f
btrfs_qgroup_setup_print_column	qgroup.c	/^void btrfs_qgroup_setup_print_column(enum btrfs_qgroup_column_enum column)$/;"	f
btrfs_qgroup_status_item	ctree.h	/^struct btrfs_qgroup_status_item {$/;"	s
btrfs_read_and_process_send_stream	send-stream.c	/^int btrfs_read_and_process_send_stream(int fd,$/;"	f
btrfs_read_block_groups	extent-tree.c	/^int btrfs_read_block_groups(struct btrfs_root *root)$/;"	f
btrfs_read_chunk_tree	volumes.c	/^int btrfs_read_chunk_tree(struct btrfs_root *root)$/;"	f
btrfs_read_dev_super	disk-io.c	/^int btrfs_read_dev_super(int fd, struct btrfs_super_block *sb, u64 sb_bytenr)$/;"	f
btrfs_read_fs_root	disk-io.c	/^struct btrfs_root *btrfs_read_fs_root(struct btrfs_fs_info *fs_info,$/;"	f
btrfs_read_fs_root_no_cache	disk-io.c	/^struct btrfs_root *btrfs_read_fs_root_no_cache(struct btrfs_fs_info *fs_info,$/;"	f
btrfs_read_root_item	send-utils.c	/^static int btrfs_read_root_item(int mnt_fd, u64 root_id,$/;"	f	file:
btrfs_read_root_item_raw	send-utils.c	/^static int btrfs_read_root_item_raw(int mnt_fd, u64 root_id, size_t buf_len,$/;"	f	file:
btrfs_read_sys_array	volumes.c	/^int btrfs_read_sys_array(struct btrfs_root *root)$/;"	f
btrfs_rebuild_chunk_stripes	chunk-recover.c	/^static int btrfs_rebuild_chunk_stripes(struct recover_control *rc,$/;"	f	file:
btrfs_rebuild_chunk_stripes	cmds-chunk.c	/^static int btrfs_rebuild_chunk_stripes(struct recover_control *rc,$/;"	f	file:
btrfs_rebuild_ordered_meta_chunk_stripes	chunk-recover.c	/^btrfs_rebuild_ordered_meta_chunk_stripes(struct recover_control *rc,$/;"	f	file:
btrfs_rebuild_ordered_meta_chunk_stripes	cmds-chunk.c	/^btrfs_rebuild_ordered_meta_chunk_stripes(struct recover_control *rc,$/;"	f	file:
btrfs_rebuild_unordered_chunk_stripes	chunk-recover.c	/^static int btrfs_rebuild_unordered_chunk_stripes(struct recover_control *rc,$/;"	f	file:
btrfs_rebuild_unordered_chunk_stripes	cmds-chunk.c	/^static int btrfs_rebuild_unordered_chunk_stripes(struct recover_control *rc,$/;"	f	file:
btrfs_receive	cmds-receive.c	/^struct btrfs_receive$/;"	s	file:
btrfs_record_file_extent	extent-tree.c	/^int btrfs_record_file_extent(struct btrfs_trans_handle *trans,$/;"	f
btrfs_recover_chunk_tree	chunk-recover.c	/^int btrfs_recover_chunk_tree(char *path, int verbose, int yes)$/;"	f
btrfs_recover_chunk_tree	cmds-chunk.c	/^static int btrfs_recover_chunk_tree(char *path, int verbose, int yes)$/;"	f	file:
btrfs_recover_chunks	chunk-recover.c	/^static int btrfs_recover_chunks(struct recover_control *rc)$/;"	f	file:
btrfs_recover_chunks	cmds-chunk.c	/^static int btrfs_recover_chunks(struct recover_control *rc)$/;"	f	file:
btrfs_recover_superblock	super-recover.c	/^struct btrfs_recover_superblock {$/;"	s	file:
btrfs_recover_superblocks	super-recover.c	/^int btrfs_recover_superblocks(const char *dname,$/;"	f
btrfs_register_one_device	utils.c	/^void btrfs_register_one_device(char *fname)$/;"	f
btrfs_release_all_roots	disk-io.c	/^void btrfs_release_all_roots(struct btrfs_fs_info *fs_info)$/;"	f
btrfs_release_path	ctree.c	/^void btrfs_release_path(struct btrfs_path *p)$/;"	f
btrfs_remove_free_space_cache	free-space-cache.c	/^void btrfs_remove_free_space_cache(struct btrfs_block_group_cache *block_group)$/;"	f
btrfs_reserve_extent	extent-tree.c	/^int btrfs_reserve_extent(struct btrfs_trans_handle *trans,$/;"	f
btrfs_rmap_block	volumes.c	/^int btrfs_rmap_block(struct btrfs_mapping_tree *map_tree,$/;"	f
btrfs_root	ctree.h	/^struct btrfs_root {$/;"	s
btrfs_root_backup	ctree.h	/^struct btrfs_root_backup {$/;"	s
btrfs_root_item	ctree.h	/^struct btrfs_root_item {$/;"	s
btrfs_root_item_v0	ctree.h	/^struct btrfs_root_item_v0 {$/;"	s
btrfs_root_ref	ctree.h	/^struct btrfs_root_ref {$/;"	s
btrfs_sb_offset	disk-io.h	/^static inline u64 btrfs_sb_offset(int mirror)$/;"	f
btrfs_scan_block_devices	utils.c	/^int btrfs_scan_block_devices(int run_ioctl)$/;"	f
btrfs_scan_for_fsid	utils.c	/^int btrfs_scan_for_fsid(int run_ioctls)$/;"	f
btrfs_scan_fs_devices	disk-io.c	/^int btrfs_scan_fs_devices(int fd, const char *path,$/;"	f
btrfs_scan_kernel	cmds-filesystem.c	/^static int btrfs_scan_kernel(void *search)$/;"	f	file:
btrfs_scan_lblkid	utils.c	/^int btrfs_scan_lblkid(int update_kernel)$/;"	f
btrfs_scan_one_device	volumes.c	/^int btrfs_scan_one_device(int fd, const char *path,$/;"	f
btrfs_scan_one_dir	utils.c	/^int btrfs_scan_one_dir(char *dirname, int run_ioctl)$/;"	f
btrfs_scanned_uuids	volumes.c	/^struct list_head *btrfs_scanned_uuids(void)$/;"	f
btrfs_scrub_progress	ioctl.h	/^struct btrfs_scrub_progress {$/;"	s
btrfs_search_slot	ctree.c	/^int btrfs_search_slot(struct btrfs_trans_handle *trans, struct btrfs_root$/;"	f
btrfs_send	cmds-send.c	/^struct btrfs_send {$/;"	s	file:
btrfs_send_cmd	send.h	/^enum btrfs_send_cmd {$/;"	g
btrfs_send_ops	send-stream.h	/^struct btrfs_send_ops {$/;"	s
btrfs_send_stream	send-stream.c	/^struct btrfs_send_stream {$/;"	s	file:
btrfs_set_block_flags	extent-tree.c	/^int btrfs_set_block_flags(struct btrfs_trans_handle *trans,$/;"	f
btrfs_set_buffer_uptodate	disk-io.c	/^int btrfs_set_buffer_uptodate(struct extent_buffer *eb)$/;"	f
btrfs_set_dir_item_key	ctree.h	/^static inline void btrfs_set_dir_item_key(struct extent_buffer *eb,$/;"	f
btrfs_set_free_space_key	ctree.h	/^static inline void btrfs_set_free_space_key(struct extent_buffer *eb,$/;"	f
btrfs_set_header_backref_rev	ctree.h	/^static inline void btrfs_set_header_backref_rev(struct extent_buffer *eb,$/;"	f
btrfs_set_header_flag	ctree.h	/^static inline int btrfs_set_header_flag(struct extent_buffer *eb, u64 flag)$/;"	f
btrfs_set_item_key	ctree.h	/^static inline void btrfs_set_item_key(struct extent_buffer *eb,$/;"	f
btrfs_set_item_key_safe	ctree.c	/^int btrfs_set_item_key_safe(struct btrfs_trans_handle *trans,$/;"	f
btrfs_set_key_type	ctree.h	/^static inline void btrfs_set_key_type(struct btrfs_key *key, u8 val)$/;"	f
btrfs_set_node_blockptr	ctree.h	/^static inline void btrfs_set_node_blockptr(struct extent_buffer *eb,$/;"	f
btrfs_set_node_key	ctree.h	/^static inline void btrfs_set_node_key(struct extent_buffer *eb,$/;"	f
btrfs_set_node_ptr_generation	ctree.h	/^static inline void btrfs_set_node_ptr_generation(struct extent_buffer *eb,$/;"	f
btrfs_set_stripe_devid_nr	ctree.h	/^static inline void btrfs_set_stripe_devid_nr(struct extent_buffer *eb,$/;"	f
btrfs_set_stripe_offset_nr	ctree.h	/^static inline void btrfs_set_stripe_offset_nr(struct extent_buffer *eb,$/;"	f
btrfs_set_tree_block_key	ctree.h	/^static inline void btrfs_set_tree_block_key(struct extent_buffer *eb,$/;"	f
btrfs_setup_all_roots	disk-io.c	/^int btrfs_setup_all_roots(struct btrfs_fs_info *fs_info, u64 root_tree_bytenr,$/;"	f
btrfs_setup_chunk_tree_and_device_map	disk-io.c	/^int btrfs_setup_chunk_tree_and_device_map(struct btrfs_fs_info *fs_info)$/;"	f
btrfs_shared_data_ref	ctree.h	/^struct btrfs_shared_data_ref {$/;"	s
btrfs_show_qgroups	qgroup.c	/^int btrfs_show_qgroups(int fd,$/;"	f
btrfs_space_info	ctree.h	/^struct btrfs_space_info {$/;"	s
btrfs_split_item	ctree.c	/^int btrfs_split_item(struct btrfs_trans_handle *trans,$/;"	f
btrfs_start_transaction	transaction.h	/^btrfs_start_transaction(struct btrfs_root *root, int num_blocks)$/;"	f
btrfs_stream_header	send.h	/^struct btrfs_stream_header {$/;"	s
btrfs_stripe	ctree.h	/^struct btrfs_stripe {$/;"	s
btrfs_stripe_dev_uuid	ctree.h	/^static inline char *btrfs_stripe_dev_uuid(struct btrfs_stripe *s)$/;"	f
btrfs_stripe_dev_uuid_nr	ctree.h	/^static inline char *btrfs_stripe_dev_uuid_nr(struct btrfs_chunk *c, int nr)$/;"	f
btrfs_stripe_devid_nr	ctree.h	/^static inline u64 btrfs_stripe_devid_nr(struct extent_buffer *eb,$/;"	f
btrfs_stripe_nr	ctree.h	/^static inline struct btrfs_stripe *btrfs_stripe_nr(struct btrfs_chunk *c,$/;"	f
btrfs_stripe_offset_nr	ctree.h	/^static inline u64 btrfs_stripe_offset_nr(struct extent_buffer *eb,$/;"	f
btrfs_subvolid_resolve	send-utils.c	/^int btrfs_subvolid_resolve(int fd, char *path, size_t path_len, u64 subvol_id)$/;"	f
btrfs_subvolid_resolve_sub	send-utils.c	/^static int btrfs_subvolid_resolve_sub(int fd, char *path, size_t *path_len,$/;"	f	file:
btrfs_super_block	ctree.h	/^struct btrfs_super_block {$/;"	s
btrfs_super_csum_size	ctree.h	/^static inline int btrfs_super_csum_size(struct btrfs_super_block *s)$/;"	f
btrfs_super_fsid	ctree.h	/^static inline u8 *btrfs_super_fsid(struct extent_buffer *eb)$/;"	f
btrfs_timespec	ctree.h	/^struct btrfs_timespec {$/;"	s
btrfs_tlv_header	send.h	/^struct btrfs_tlv_header {$/;"	s
btrfs_tlv_type	send.h	/^enum btrfs_tlv_type {$/;"	g
btrfs_trans_handle	transaction.h	/^struct btrfs_trans_handle {$/;"	s
btrfs_tree_block_info	ctree.h	/^struct btrfs_tree_block_info {$/;"	s
btrfs_tree_block_key	ctree.h	/^static inline void btrfs_tree_block_key(struct extent_buffer *eb,$/;"	f
btrfs_truncate_item	ctree.c	/^int btrfs_truncate_item(struct btrfs_trans_handle *trans,$/;"	f
btrfs_unpin_extent	extent-tree.c	/^void btrfs_unpin_extent(struct btrfs_fs_info *fs_info,$/;"	f
btrfs_update_block_group	extent-tree.c	/^int btrfs_update_block_group(struct btrfs_trans_handle *trans,$/;"	f
btrfs_update_device	volumes.c	/^int btrfs_update_device(struct btrfs_trans_handle *trans,$/;"	f
btrfs_update_root	root-tree.c	/^int btrfs_update_root(struct btrfs_trans_handle *trans, struct btrfs_root$/;"	f
btrfs_uuid_to_key	uuid-tree.c	/^static void btrfs_uuid_to_key(const u8 *uuid, u64 *key_objectid,$/;"	f	file:
btrfs_uuid_tree_lookup_any	uuid-tree.c	/^static int btrfs_uuid_tree_lookup_any(int fd, const u8 *uuid, u8 type,$/;"	f	file:
btrfs_verify_device_extents	chunk-recover.c	/^static int btrfs_verify_device_extents(struct block_group_record *bg,$/;"	f	file:
btrfs_verify_device_extents	cmds-chunk.c	/^static int btrfs_verify_device_extents(struct block_group_record *bg,$/;"	f	file:
btrfs_write_dirty_block_groups	extent-tree.c	/^int btrfs_write_dirty_block_groups(struct btrfs_trans_handle *trans,$/;"	f
buf	ioctl.h	/^	char buf[BTRFS_SEARCH_ARGS_BUFSIZE];$/;"	m	struct:btrfs_ioctl_search_args
buffer	btrfs-image.c	/^	u8 *buffer;$/;"	m	struct:async_work	file:
buffer	free-space-cache.c	/^	void *buffer;$/;"	m	struct:io_ctl	file:
buffer	scan-filesystem.c	/^GtkTextBuffer *buffer; \/\/接收输入字符串的buffer$/;"	v
bufsize	btrfs-image.c	/^	size_t bufsize;$/;"	m	struct:async_work	file:
build_chunk_tree	btrfs-image.c	/^static int build_chunk_tree(struct mdrestore_struct *mdres,$/;"	f	file:
build_device_map_by_chunk_record	chunk-recover.c	/^static int build_device_map_by_chunk_record(struct btrfs_root *root,$/;"	f	file:
build_device_map_by_chunk_record	cmds-chunk.c	/^static int build_device_map_by_chunk_record(struct btrfs_root *root,$/;"	f	file:
build_device_maps_by_chunk_records	chunk-recover.c	/^static int build_device_maps_by_chunk_records(struct recover_control *rc,$/;"	f	file:
build_device_maps_by_chunk_records	cmds-chunk.c	/^static int build_device_maps_by_chunk_records(struct recover_control *rc,$/;"	f	file:
build_name	btrfs-list.c	/^static char *build_name(char *dirid, char *name)$/;"	f	file:
bulk_op	dir-test.c	/^static int bulk_op(struct btrfs_trans_handle *trans, struct btrfs_root *root,$/;"	f	file:
bulk_op	random-test.c	/^static int bulk_op(struct btrfs_trans_handle *trans, struct btrfs_root *root,$/;"	f	file:
button_choose_folder	subvolume.h	/^GtkWidget *button_choose_folder;\/\/目录选择按钮$/;"	v
button_dest_browse	subvolume.h	/^GtkWidget *button_dest_browse;$/;"	v
button_file_change_show	subvolume.h	/^GtkWidget *button_file_change_show[ACTIVE_SIZE];$/;"	v
button_snapshot_change	snapshot-scan.h	/^GtkWidget *button_snapshot_change;$/;"	v
button_snapshot_create	snapshot-scan.h	/^GtkWidget *button_snapshot_create;$/;"	v
button_snapshot_delete	snapshot-scan.h	/^GtkWidget *button_snapshot_delete;$/;"	v
button_snapshot_open	snapshot-scan.h	/^GtkWidget *button_snapshot_open;$/;"	v
button_subvol_change	subvolume.h	/^GtkWidget *button_subvol_change;$/;"	v
button_subvol_create	subvolume.h	/^GtkWidget *button_subvol_create;$/;"	v
button_subvol_create	subvolume.h	/^GtkWidget *button_subvol_create;\/\/子卷的创建按钮$/;"	v
button_subvol_create_box	subvolume.h	/^GtkWidget *button_subvol_create_box;\/\/子卷创建按钮和输出状态的盒子$/;"	v
button_subvol_delete	subvolume.h	/^GtkWidget *button_subvol_delete;$/;"	v
button_subvol_info_show	subvolume.h	/^GtkWidget *button_subvol_info_show[ACTIVE_SIZE];$/;"	v
button_subvol_open	subvolume.h	/^GtkWidget *button_subvol_open;$/;"	v
byte	show-blocks	/^    byte = row[0]$/;"	v
byte_limit	ctree.h	/^	__le64 byte_limit;$/;"	m	struct:btrfs_root_item
byte_limit	ctree.h	/^	__le64 byte_limit;$/;"	m	struct:btrfs_root_item_v0
byte_range	show-blocks	/^byte_range = sectormax - sectormin$/;"	v
byte_used	btrfsck.h	/^	u64 byte_used;$/;"	m	struct:device_record
bytenr	btrfs-image.c	/^	__le64 bytenr;$/;"	m	struct:meta_cluster_header	file:
bytenr	btrfs-image.c	/^	__le64 bytenr;$/;"	m	struct:meta_cluster_item	file:
bytenr	cmds-check.c	/^	u64 bytenr;$/;"	m	struct:extent_entry	file:
bytenr	ctree.h	/^	__le64 bytenr; \/* this block number *\/$/;"	m	struct:btrfs_super_block
bytenr	ctree.h	/^	__le64 bytenr; \/* which block this node is supposed to live in *\/$/;"	m	struct:btrfs_header
bytenr	ctree.h	/^	__le64 bytenr;$/;"	m	struct:btrfs_root_item
bytenr	ctree.h	/^	__le64 bytenr;$/;"	m	struct:btrfs_root_item_v0
bytenr	extent-tree.c	/^	u64 bytenr;$/;"	m	struct:pending_extent_op	file:
bytenr	super-recover.c	/^	u64 bytenr;$/;"	m	struct:super_block_record	file:
bytes	btrfs-image.c	/^	u64 bytes;$/;"	m	struct:fs_chunk	file:
bytes	cmds-check.c	/^	u64 bytes;$/;"	m	struct:data_backref	file:
bytes	cmds-check.c	/^	u64 bytes;$/;"	m	struct:extent_entry	file:
bytes	ctree.h	/^	__le64 bytes;$/;"	m	struct:btrfs_free_space_entry
bytes	free-space-cache.h	/^	u64 bytes;$/;"	m	struct:btrfs_free_space
bytes_left	ioctl.h	/^	__u32	bytes_left;	\/* out -- bytes not needed to deliver output *\/$/;"	m	struct:btrfs_data_container
bytes_missing	ioctl.h	/^	__u32	bytes_missing;	\/* out -- additional bytes needed for result *\/$/;"	m	struct:btrfs_data_container
bytes_per_cell	show-blocks	/^bytes_per_cell = byte_range \/ total_cells$/;"	v
bytes_pinned	ctree.h	/^	u64 bytes_pinned;$/;"	m	struct:btrfs_space_info
bytes_to_bits	free-space-cache.c	/^static inline unsigned long bytes_to_bits(u64 bytes, u32 unit)$/;"	f	file:
bytes_used	cmds-check.c	/^static u64 bytes_used = 0;$/;"	v	file:
bytes_used	ctree.h	/^	__le64 bytes_used;$/;"	m	struct:btrfs_dev_item
bytes_used	ctree.h	/^	__le64 bytes_used;$/;"	m	struct:btrfs_root_backup
bytes_used	ctree.h	/^	__le64 bytes_used;$/;"	m	struct:btrfs_root_item
bytes_used	ctree.h	/^	__le64 bytes_used;$/;"	m	struct:btrfs_root_item_v0
bytes_used	ctree.h	/^	__le64 bytes_used;$/;"	m	struct:btrfs_super_block
bytes_used	ctree.h	/^	u64 bytes_used;$/;"	m	struct:btrfs_space_info
bytes_used	ioctl.h	/^	__u64 bytes_used;			\/* out *\/$/;"	m	struct:btrfs_ioctl_dev_info_args
bytes_used	volumes.h	/^	u64 bytes_used;$/;"	m	struct:btrfs_device
cache	btrfsck.h	/^	struct cache_extent cache;$/;"	m	struct:block_group_record	typeref:struct:block_group_record::cache_extent
cache	btrfsck.h	/^	struct cache_extent cache;$/;"	m	struct:chunk_record	typeref:struct:chunk_record::cache_extent
cache	btrfsck.h	/^	struct cache_extent cache;$/;"	m	struct:device_extent_record	typeref:struct:device_extent_record::cache_extent
cache	chunk-recover.c	/^	struct cache_extent cache;$/;"	m	struct:extent_record	typeref:struct:extent_record::cache_extent	file:
cache	cmds-check.c	/^	struct cache_extent cache;$/;"	m	struct:extent_record	typeref:struct:extent_record::cache_extent	file:
cache	cmds-check.c	/^	struct cache_extent cache;$/;"	m	struct:ptr_node	typeref:struct:ptr_node::cache_extent	file:
cache	cmds-check.c	/^	struct cache_extent cache;$/;"	m	struct:root_record	typeref:struct:root_record::cache_extent	file:
cache	cmds-check.c	/^	struct cache_extent cache;$/;"	m	struct:shared_node	typeref:struct:shared_node::cache_extent	file:
cache	cmds-chunk.c	/^	struct cache_extent cache;$/;"	m	struct:extent_record	typeref:struct:extent_record::cache_extent	file:
cache	ctree.h	/^	struct cache_extent cache;$/;"	m	struct:btrfs_block_group_cache	typeref:struct:btrfs_block_group_cache::cache_extent
cache	extent_io.h	/^	struct cache_tree cache;$/;"	m	struct:extent_io_tree	typeref:struct:extent_io_tree::cache_tree
cache	repair.h	/^	struct cache_extent cache;$/;"	m	struct:btrfs_corrupt_block	typeref:struct:btrfs_corrupt_block::cache_extent
cache_block_group	extent-tree.c	/^static int cache_block_group(struct btrfs_root *root,$/;"	f	file:
cache_extent	extent-cache.h	/^struct cache_extent {$/;"	s
cache_extent_search_range	extent-cache.c	/^struct cache_extent_search_range {$/;"	s	file:
cache_free_extents	btrfs-convert.c	/^static int cache_free_extents(struct btrfs_root *root, ext2_filsys ext2_fs)$/;"	f	file:
cache_generation	ctree.h	/^	__le64 cache_generation;$/;"	m	struct:btrfs_super_block
cache_hard_max	extent_io.c	/^static u64 cache_hard_max = 1 * 1024 * 1024 * 1024;$/;"	v	file:
cache_node	extent_io.h	/^	struct cache_extent cache_node;$/;"	m	struct:extent_buffer	typeref:struct:extent_buffer::cache_extent
cache_node	extent_io.h	/^	struct cache_extent cache_node;$/;"	m	struct:extent_state	typeref:struct:extent_state::cache_extent
cache_size	extent_io.h	/^	u64 cache_size;$/;"	m	struct:extent_io_tree
cache_soft_max	extent_io.c	/^static u64 cache_soft_max = 1024 * 1024 * 256;$/;"	v	file:
cache_tree	ctree.h	/^	struct cache_tree cache_tree;$/;"	m	struct:btrfs_mapping_tree	typeref:struct:btrfs_mapping_tree::cache_tree
cache_tree	extent-cache.h	/^struct cache_tree {$/;"	s
cache_tree_comp_nodes	extent-cache.c	/^static int cache_tree_comp_nodes(struct rb_node *node1, struct rb_node *node2)$/;"	f	file:
cache_tree_comp_nodes2	extent-cache.c	/^static int cache_tree_comp_nodes2(struct rb_node *node1, struct rb_node *node2)$/;"	f	file:
cache_tree_comp_range	extent-cache.c	/^static int cache_tree_comp_range(struct rb_node *node, void *data)$/;"	f	file:
cache_tree_comp_range2	extent-cache.c	/^static int cache_tree_comp_range2(struct rb_node *node, void *data)$/;"	f	file:
cache_tree_empty	extent-cache.h	/^static inline int cache_tree_empty(struct cache_tree *tree)$/;"	f
cache_tree_free_extents	extent-cache.c	/^void cache_tree_free_extents(struct cache_tree *tree,$/;"	f
cache_tree_init	extent-cache.c	/^void cache_tree_init(struct cache_tree *tree)$/;"	f
cached	ctree.h	/^	int cached;$/;"	m	struct:btrfs_block_group_cache
calc_distance	btrfs-calc-size.c	/^static u64 calc_distance(u64 block1, u64 block2)$/;"	f	file:
calc_num_stripes	chunk-recover.c	/^static int calc_num_stripes(u64 type)$/;"	f	file:
calc_num_stripes	cmds-chunk.c	/^static int calc_num_stripes(u64 type)$/;"	f	file:
calc_root_size	btrfs-calc-size.c	/^static int calc_root_size(struct btrfs_root *tree_root, struct btrfs_key *key,$/;"	f	file:
calc_stripe_length	cmds-check.c	/^u64 calc_stripe_length(u64 type, u64 length, int num_stripes)$/;"	f
calc_sub_nstripes	chunk-recover.c	/^static inline int calc_sub_nstripes(u64 type)$/;"	f	file:
calc_sub_nstripes	cmds-chunk.c	/^static inline int calc_sub_nstripes(u64 type)$/;"	f	file:
calc_used_bytes	cmds-filesystem.c	/^static u64 calc_used_bytes(struct btrfs_ioctl_space_args *si)$/;"	f	file:
calculate_dir_inode_size	mkfs.c	/^static u64 calculate_dir_inode_size(char *dirname)$/;"	f	file:
can_free_inode_rec	cmds-check.c	/^static int can_free_inode_rec(struct inode_record *rec)$/;"	f	file:
cancel_fd	cmds-scrub.c	/^static int cancel_fd = -1;$/;"	v	file:
canceled	cmds-scrub.c	/^	u64 canceled;$/;"	m	struct:scrub_stats	file:
ce	volumes.h	/^	struct cache_extent ce;$/;"	m	struct:map_lookup	typeref:struct:map_lookup::cache_extent
cell	show-blocks	/^    cell = 0$/;"	v
check	Makefile	/^	check = sparse -include $(check_defs) -D__CHECKER__ \\$/;"	m
check	Makefile	/^	check = true$/;"	m
check_all_chunks_by_metadata	chunk-recover.c	/^static int check_all_chunks_by_metadata(struct recover_control *rc,$/;"	f	file:
check_all_chunks_by_metadata	cmds-chunk.c	/^static int check_all_chunks_by_metadata(struct recover_control *rc,$/;"	f	file:
check_arg_type	cmds-filesystem.c	/^static int check_arg_type(char *input)$/;"	f	file:
check_argc_exact	btrfs.c	/^int check_argc_exact(int nargs, int expected)$/;"	f
check_argc_max	btrfs.c	/^int check_argc_max(int nargs, int expected)$/;"	f
check_argc_min	btrfs.c	/^int check_argc_min(int nargs, int expected)$/;"	f
check_block	cmds-check.c	/^static int check_block(struct btrfs_root *root,$/;"	f	file:
check_block	ctree.c	/^static int noinline check_block(struct btrfs_root *root,$/;"	f	file:
check_cache_range	cmds-check.c	/^static int check_cache_range(struct btrfs_root *root,$/;"	f	file:
check_chunk_by_metadata	chunk-recover.c	/^static int check_chunk_by_metadata(struct recover_control *rc,$/;"	f	file:
check_chunk_by_metadata	cmds-chunk.c	/^static int check_chunk_by_metadata(struct recover_control *rc,$/;"	f	file:
check_chunk_refs	cmds-check.c	/^static int check_chunk_refs(struct chunk_record *chunk_rec,$/;"	f	file:
check_chunks	cmds-check.c	/^int check_chunks(struct cache_tree *chunk_cache,$/;"	f
check_chunks_and_extents	cmds-check.c	/^static int check_chunks_and_extents(struct btrfs_root *root)$/;"	f	file:
check_crcs	free-space-cache.c	/^	unsigned check_crcs:1;$/;"	m	struct:io_ctl	file:
check_csum_sblock	btrfs-show-super.c	/^static int check_csum_sblock(void *sb, int csum_size)$/;"	f	file:
check_csums	cmds-check.c	/^static int check_csums(struct btrfs_root *root)$/;"	f	file:
check_defs	Makefile	/^check_defs := .cc-defines.h $/;"	m
check_device_used	cmds-check.c	/^static int check_device_used(struct device_record *dev_rec,$/;"	f	file:
check_devices	cmds-check.c	/^static int check_devices(struct rb_root *dev_cache,$/;"	f	file:
check_echo	Makefile	/^	check_echo = echo$/;"	m
check_echo	Makefile	/^	check_echo = true$/;"	m
check_extent_exists	cmds-check.c	/^static int check_extent_exists(struct btrfs_root *root, u64 bytenr,$/;"	f	file:
check_extent_refs	cmds-check.c	/^static int check_extent_refs(struct btrfs_trans_handle *trans,$/;"	f	file:
check_fs_root	cmds-check.c	/^static int check_fs_root(struct btrfs_root *root,$/;"	f	file:
check_fs_roots	cmds-check.c	/^static int check_fs_roots(struct btrfs_root *root,$/;"	f	file:
check_inode_recs	cmds-check.c	/^static int check_inode_recs(struct btrfs_root *root,$/;"	f	file:
check_label	utils.c	/^static int check_label(const char *input)$/;"	f	file:
check_leaf_or_node_size	mkfs.c	/^static int check_leaf_or_node_size(u32 size, u32 sectorsize)$/;"	f	file:
check_mounted	utils.c	/^int check_mounted(const char* file)$/;"	f
check_mounted_where	utils.c	/^int check_mounted_where(int fd, const char *file, char *where, int size,$/;"	f
check_orphan_item	cmds-check.c	/^static int check_orphan_item(struct btrfs_root *root, u64 ino)$/;"	f	file:
check_overwrite	utils.c	/^check_overwrite($/;"	f	file:
check_owner_ref	cmds-check.c	/^static int check_owner_ref(struct btrfs_root *root,$/;"	f	file:
check_root_dir	cmds-check.c	/^static int check_root_dir(struct inode_record *rec)$/;"	f	file:
check_root_refs	cmds-check.c	/^static int check_root_refs(struct btrfs_root *root,$/;"	f	file:
check_space_cache	cmds-check.c	/^static int check_space_cache(struct btrfs_root *root)$/;"	f	file:
check_super	super-recover.c	/^static int check_super(u64 bytenr, struct btrfs_super_block *sb)$/;"	f	file:
check_tree_block	disk-io.c	/^static int check_tree_block(struct btrfs_root *root, struct extent_buffer *buf)$/;"	f	file:
checked	cmds-check.c	/^	unsigned int checked:1;$/;"	m	struct:inode_record	file:
checksum	btrfs-convert.c	/^	int checksum;$/;"	m	struct:blk_iterate_data	file:
chmod	send-stream.h	/^	int (*chmod)(const char *path, u64 mode, void *user);$/;"	m	struct:btrfs_send_ops
chown	send-stream.h	/^	int (*chown)(const char *path, u64 uid, u64 gid, void *user);$/;"	m	struct:btrfs_send_ops
chunk	chunk-recover.c	/^	struct cache_tree chunk;$/;"	m	struct:recover_control	typeref:struct:recover_control::cache_tree	file:
chunk	cmds-chunk.c	/^	struct cache_tree chunk;$/;"	m	struct:recover_control	typeref:struct:recover_control::cache_tree	file:
chunk_bytes_by_type	volumes.c	/^static u64 chunk_bytes_by_type(u64 type, u64 calc_size, int num_stripes,$/;"	f	file:
chunk_cmp	btrfs-image.c	/^static int chunk_cmp(struct rb_node *a, struct rb_node *b, int fuzz)$/;"	f	file:
chunk_list	btrfsck.h	/^	struct list_head chunk_list;$/;"	m	struct:device_extent_record	typeref:struct:device_extent_record::list_head
chunk_objecteid	btrfsck.h	/^	u64 chunk_objecteid;$/;"	m	struct:device_extent_record
chunk_objectid	ctree.h	/^	__le64 chunk_objectid;$/;"	m	struct:btrfs_block_group_item
chunk_objectid	ctree.h	/^	__le64 chunk_objectid;$/;"	m	struct:btrfs_dev_extent
chunk_offset	btrfsck.h	/^	u64 chunk_offset;$/;"	m	struct:device_extent_record
chunk_offset	ctree.h	/^	__le64 chunk_offset;$/;"	m	struct:btrfs_dev_extent
chunk_record	btrfsck.h	/^struct chunk_record {$/;"	s
chunk_root	ctree.h	/^	__le64 chunk_root;$/;"	m	struct:btrfs_root_backup
chunk_root	ctree.h	/^	__le64 chunk_root;$/;"	m	struct:btrfs_super_block
chunk_root	ctree.h	/^	struct btrfs_root *chunk_root;$/;"	m	struct:btrfs_fs_info	typeref:struct:btrfs_fs_info::btrfs_root
chunk_root_gen	ctree.h	/^	__le64 chunk_root_gen;$/;"	m	struct:btrfs_root_backup
chunk_root_generation	chunk-recover.c	/^	u64 chunk_root_generation;$/;"	m	struct:recover_control	file:
chunk_root_generation	cmds-chunk.c	/^	u64 chunk_root_generation;$/;"	m	struct:recover_control	file:
chunk_root_generation	ctree.h	/^	__le64 chunk_root_generation;$/;"	m	struct:btrfs_super_block
chunk_root_level	ctree.h	/^	u8 chunk_root_level;$/;"	m	struct:btrfs_root_backup
chunk_root_level	ctree.h	/^	u8 chunk_root_level;$/;"	m	struct:btrfs_super_block
chunk_tree	btrfs-image.c	/^	struct rb_root chunk_tree;$/;"	m	struct:mdrestore_struct	typeref:struct:mdrestore_struct::rb_root	file:
chunk_tree	ctree.h	/^	__le64 chunk_tree;$/;"	m	struct:btrfs_dev_extent
chunk_tree_uuid	ctree.h	/^	u8 chunk_tree_uuid[BTRFS_UUID_SIZE];$/;"	m	struct:btrfs_dev_extent
chunk_tree_uuid	ctree.h	/^	u8 chunk_tree_uuid[BTRFS_UUID_SIZE];$/;"	m	struct:btrfs_fs_info
chunk_tree_uuid	ctree.h	/^	u8 chunk_tree_uuid[BTRFS_UUID_SIZE];$/;"	m	struct:btrfs_header
chunk_type	btrfs-fragments.c	/^chunk_type(u64 flags)$/;"	f	file:
clean_tree_block	disk-io.c	/^int clean_tree_block(struct btrfs_trans_handle *trans, struct btrfs_root *root,$/;"	f
cleanup_sys_chunk	btrfs-convert.c	/^static int cleanup_sys_chunk(struct btrfs_root *fs_root,$/;"	f	file:
clear	show-blocks	/^  def clear(self):$/;"	m	class:AnnoteFinder
clear_bit	bitops.h	/^static inline void clear_bit(int nr, unsigned long *addr)$/;"	f
clear_extent_bits	extent_io.c	/^int clear_extent_bits(struct extent_io_tree *tree, u64 start,$/;"	f
clear_extent_buffer_dirty	extent_io.c	/^int clear_extent_buffer_dirty(struct extent_buffer *eb)$/;"	f
clear_extent_buffer_uptodate	extent_io.c	/^int clear_extent_buffer_uptodate(struct extent_io_tree *tree,$/;"	f
clear_extent_dirty	extent_io.c	/^int clear_extent_dirty(struct extent_io_tree *tree, u64 start, u64 end,$/;"	f
clear_state_bit	extent_io.c	/^static int clear_state_bit(struct extent_io_tree *tree,$/;"	f	file:
clone	send-stream.h	/^	int (*clone)(const char *path, u64 offset, u64 len,$/;"	m	struct:btrfs_send_ops
clone_inode_rec	cmds-check.c	/^static struct inode_record *clone_inode_rec(struct inode_record *orig_rec)$/;"	f	file:
clone_sources	cmds-send.c	/^	u64 *clone_sources;$/;"	m	struct:btrfs_send	file:
clone_sources	ioctl.h	/^	__u64 *clone_sources;		\/* in *\/$/;"	m	struct:btrfs_ioctl_send_args
clone_sources_count	cmds-send.c	/^	u64 clone_sources_count;$/;"	m	struct:btrfs_send	file:
clone_sources_count	ioctl.h	/^	__u64 clone_sources_count;	\/* in *\/$/;"	m	struct:btrfs_ioctl_send_args
close_ctree	disk-io.c	/^int close_ctree(struct btrfs_root *root)$/;"	f
close_ext2fs	btrfs-convert.c	/^static int close_ext2fs(ext2_filsys fs)$/;"	f	file:
close_file_or_dir	utils.c	/^void close_file_or_dir(int fd, DIR *dirstream)$/;"	f
close_inode_for_write	cmds-receive.c	/^static int close_inode_for_write(struct btrfs_receive *r)$/;"	f	file:
cluster	btrfs-image.c	/^	struct meta_cluster *cluster;$/;"	m	struct:metadump_struct	typeref:struct:metadump_struct::meta_cluster	file:
cmd	ioctl.h	/^	__u64 cmd;	\/* in *\/$/;"	m	struct:btrfs_ioctl_dev_replace_args
cmd	ioctl.h	/^	__u64 cmd;$/;"	m	struct:btrfs_ioctl_quota_ctl_args
cmd	send-stream.c	/^	int cmd;$/;"	m	struct:btrfs_send_stream	file:
cmd	send.h	/^	__le16 cmd;$/;"	m	struct:btrfs_cmd_header
cmd_add_dev	cmds-device.c	/^static int cmd_add_dev(int argc, char **argv)$/;"	f	file:
cmd_add_dev_usage	cmds-device.c	/^static const char * const cmd_add_dev_usage[] = {$/;"	v	file:
cmd_attrs	send-stream.c	/^	struct btrfs_tlv_header *cmd_attrs[BTRFS_SEND_A_MAX + 1];$/;"	m	struct:btrfs_send_stream	typeref:struct:btrfs_send_stream::btrfs_tlv_header	file:
cmd_balance	cmds-balance.c	/^int cmd_balance(int argc, char **argv)$/;"	f
cmd_balance_cancel	cmds-balance.c	/^static int cmd_balance_cancel(int argc, char **argv)$/;"	f	file:
cmd_balance_cancel_usage	cmds-balance.c	/^static const char * const cmd_balance_cancel_usage[] = {$/;"	v	file:
cmd_balance_pause	cmds-balance.c	/^static int cmd_balance_pause(int argc, char **argv)$/;"	f	file:
cmd_balance_pause_usage	cmds-balance.c	/^static const char * const cmd_balance_pause_usage[] = {$/;"	v	file:
cmd_balance_resume	cmds-balance.c	/^static int cmd_balance_resume(int argc, char **argv)$/;"	f	file:
cmd_balance_resume_usage	cmds-balance.c	/^static const char * const cmd_balance_resume_usage[] = {$/;"	v	file:
cmd_balance_start	cmds-balance.c	/^static int cmd_balance_start(int argc, char **argv)$/;"	f	file:
cmd_balance_start_usage	cmds-balance.c	/^static const char * const cmd_balance_start_usage[] = {$/;"	v	file:
cmd_balance_status	cmds-balance.c	/^static int cmd_balance_status(int argc, char **argv)$/;"	f	file:
cmd_balance_status_usage	cmds-balance.c	/^static const char * const cmd_balance_status_usage[] = {$/;"	v	file:
cmd_cancel_replace	cmds-replace.c	/^static int cmd_cancel_replace(int argc, char **argv)$/;"	f	file:
cmd_cancel_replace_usage	cmds-replace.c	/^static const char *const cmd_cancel_replace_usage[] = {$/;"	v	file:
cmd_check	cmds-check.c	/^int cmd_check(int argc, char **argv)$/;"	f
cmd_check_usage	cmds-check.c	/^const char * const cmd_check_usage[] = {$/;"	v
cmd_chunk_recover	cmds-chunk.c	/^int cmd_chunk_recover(int argc, char *argv[])$/;"	f
cmd_chunk_recover	cmds-rescue.c	/^int cmd_chunk_recover(int argc, char *argv[])$/;"	f
cmd_chunk_recover_usage	cmds-chunk.c	/^const char * const cmd_chunk_recover_usage[] = {$/;"	v
cmd_chunk_recover_usage	cmds-rescue.c	/^const char * const cmd_chunk_recover_usage[] = {$/;"	v
cmd_defrag	cmds-filesystem.c	/^static int cmd_defrag(int argc, char **argv)$/;"	f	file:
cmd_defrag_usage	cmds-filesystem.c	/^static const char * const cmd_defrag_usage[] = {$/;"	v	file:
cmd_dev_stats	cmds-device.c	/^static int cmd_dev_stats(int argc, char **argv)$/;"	f	file:
cmd_dev_stats_usage	cmds-device.c	/^static const char * const cmd_dev_stats_usage[] = {$/;"	v	file:
cmd_device	cmds-device.c	/^int cmd_device(int argc, char **argv)$/;"	f
cmd_df	cmds-filesystem.c	/^static int cmd_df(int argc, char **argv)$/;"	f	file:
cmd_df_usage	cmds-filesystem.c	/^static const char * const cmd_df_usage[] = {$/;"	v	file:
cmd_filesystem	cmds-filesystem.c	/^int cmd_filesystem(int argc, char **argv)$/;"	f
cmd_find_new	cmds-subvolume.c	/^int cmd_find_new(int argc, char **argv)$/;"	f
cmd_find_new_usage	cmds-subvolume.c	/^static const char * const cmd_find_new_usage[] = {$/;"	v	file:
cmd_group	commands.h	/^struct cmd_group {$/;"	s
cmd_hdr	send-stream.c	/^	struct btrfs_cmd_header *cmd_hdr;$/;"	m	struct:btrfs_send_stream	typeref:struct:btrfs_send_stream::btrfs_cmd_header	file:
cmd_help	btrfs.c	/^static int cmd_help(int argc, char **argv)$/;"	f	file:
cmd_help_usage	btrfs.c	/^static const char * const cmd_help_usage[] = {$/;"	v	file:
cmd_inode_resolve	cmds-inspect.c	/^static int cmd_inode_resolve(int argc, char **argv)$/;"	f	file:
cmd_inode_resolve_usage	cmds-inspect.c	/^static const char * const cmd_inode_resolve_usage[] = {$/;"	v	file:
cmd_inspect	cmds-inspect.c	/^int cmd_inspect(int argc, char **argv)$/;"	f
cmd_label	cmds-filesystem.c	/^static int cmd_label(int argc, char **argv)$/;"	f	file:
cmd_label_usage	cmds-filesystem.c	/^static const char * const cmd_label_usage[] = {$/;"	v	file:
cmd_logical_resolve	cmds-inspect.c	/^static int cmd_logical_resolve(int argc, char **argv)$/;"	f	file:
cmd_logical_resolve_usage	cmds-inspect.c	/^static const char * const cmd_logical_resolve_usage[] = {$/;"	v	file:
cmd_qgroup	cmds-qgroup.c	/^int cmd_qgroup(int argc, char **argv)$/;"	f
cmd_qgroup_assign	cmds-qgroup.c	/^static int cmd_qgroup_assign(int argc, char **argv)$/;"	f	file:
cmd_qgroup_assign_usage	cmds-qgroup.c	/^static const char * const cmd_qgroup_assign_usage[] = {$/;"	v	file:
cmd_qgroup_create	cmds-qgroup.c	/^static int cmd_qgroup_create(int argc, char **argv)$/;"	f	file:
cmd_qgroup_create_usage	cmds-qgroup.c	/^static const char * const cmd_qgroup_create_usage[] = {$/;"	v	file:
cmd_qgroup_destroy	cmds-qgroup.c	/^static int cmd_qgroup_destroy(int argc, char **argv)$/;"	f	file:
cmd_qgroup_destroy_usage	cmds-qgroup.c	/^static const char * const cmd_qgroup_destroy_usage[] = {$/;"	v	file:
cmd_qgroup_limit	cmds-qgroup.c	/^static int cmd_qgroup_limit(int argc, char **argv)$/;"	f	file:
cmd_qgroup_limit_usage	cmds-qgroup.c	/^static const char * const cmd_qgroup_limit_usage[] = {$/;"	v	file:
cmd_qgroup_remove	cmds-qgroup.c	/^static int cmd_qgroup_remove(int argc, char **argv)$/;"	f	file:
cmd_qgroup_remove_usage	cmds-qgroup.c	/^static const char * const cmd_qgroup_remove_usage[] = {$/;"	v	file:
cmd_qgroup_show	cmds-qgroup.c	/^static int cmd_qgroup_show(int argc, char **argv)$/;"	f	file:
cmd_qgroup_show_usage	cmds-qgroup.c	/^static const char * const cmd_qgroup_show_usage[] = {$/;"	v	file:
cmd_quota	cmds-quota.c	/^int cmd_quota(int argc, char **argv)$/;"	f
cmd_quota_disable	cmds-quota.c	/^static int cmd_quota_disable(int argc, char **argv)$/;"	f	file:
cmd_quota_disable_usage	cmds-quota.c	/^static const char * const cmd_quota_disable_usage[] = {$/;"	v	file:
cmd_quota_enable	cmds-quota.c	/^static int cmd_quota_enable(int argc, char **argv)$/;"	f	file:
cmd_quota_enable_usage	cmds-quota.c	/^static const char * const cmd_quota_enable_usage[] = {$/;"	v	file:
cmd_quota_rescan	cmds-quota.c	/^static int cmd_quota_rescan(int argc, char **argv)$/;"	f	file:
cmd_quota_rescan_usage	cmds-quota.c	/^static const char * const cmd_quota_rescan_usage[] = {$/;"	v	file:
cmd_ready_dev	cmds-device.c	/^static int cmd_ready_dev(int argc, char **argv)$/;"	f	file:
cmd_ready_dev_usage	cmds-device.c	/^static const char * const cmd_ready_dev_usage[] = {$/;"	v	file:
cmd_receive	cmds-receive.c	/^int cmd_receive(int argc, char **argv)$/;"	f
cmd_receive_usage	cmds-receive.c	/^const char * const cmd_receive_usage[] = {$/;"	v
cmd_replace	cmds-replace.c	/^int cmd_replace(int argc, char **argv)$/;"	f
cmd_rescue	cmds-rescue.c	/^int cmd_rescue(int argc, char **argv)$/;"	f
cmd_resize	cmds-filesystem.c	/^static int cmd_resize(int argc, char **argv)$/;"	f	file:
cmd_resize_usage	cmds-filesystem.c	/^static const char * const cmd_resize_usage[] = {$/;"	v	file:
cmd_restore	cmds-restore.c	/^int cmd_restore(int argc, char **argv)$/;"	f
cmd_restore_usage	cmds-restore.c	/^const char * const cmd_restore_usage[] = {$/;"	v
cmd_rm_dev	cmds-device.c	/^static int cmd_rm_dev(int argc, char **argv)$/;"	f	file:
cmd_rm_dev_usage	cmds-device.c	/^static const char * const cmd_rm_dev_usage[] = {$/;"	v	file:
cmd_rootid	cmds-inspect.c	/^static int cmd_rootid(int argc, char **argv)$/;"	f	file:
cmd_rootid_usage	cmds-inspect.c	/^static const char* const cmd_rootid_usage[] = {$/;"	v	file:
cmd_scan_dev	cmds-device.c	/^static int cmd_scan_dev(int argc, char **argv)$/;"	f	file:
cmd_scan_dev_usage	cmds-device.c	/^static const char * const cmd_scan_dev_usage[] = {$/;"	v	file:
cmd_scrub	cmds-scrub.c	/^int cmd_scrub(int argc, char **argv)$/;"	f
cmd_scrub_cancel	cmds-scrub.c	/^static int cmd_scrub_cancel(int argc, char **argv)$/;"	f	file:
cmd_scrub_cancel_usage	cmds-scrub.c	/^static const char * const cmd_scrub_cancel_usage[] = {$/;"	v	file:
cmd_scrub_resume	cmds-scrub.c	/^static int cmd_scrub_resume(int argc, char **argv)$/;"	f	file:
cmd_scrub_resume_usage	cmds-scrub.c	/^static const char * const cmd_scrub_resume_usage[] = {$/;"	v	file:
cmd_scrub_resume_usage	cmds-scrub.c	/^static const char * const cmd_scrub_resume_usage[];$/;"	v	file:
cmd_scrub_start	cmds-scrub.c	/^static int cmd_scrub_start(int argc, char **argv)$/;"	f	file:
cmd_scrub_start_usage	cmds-scrub.c	/^static const char * const cmd_scrub_start_usage[] = {$/;"	v	file:
cmd_scrub_start_usage	cmds-scrub.c	/^static const char * const cmd_scrub_start_usage[];$/;"	v	file:
cmd_scrub_status	cmds-scrub.c	/^static int cmd_scrub_status(int argc, char **argv)$/;"	f	file:
cmd_scrub_status_usage	cmds-scrub.c	/^static const char * const cmd_scrub_status_usage[] = {$/;"	v	file:
cmd_send	cmds-send.c	/^int cmd_send(int argc, char **argv)$/;"	f
cmd_send_usage	cmds-send.c	/^const char * const cmd_send_usage[] = {$/;"	v
cmd_show	cmds-filesystem.c	/^int cmd_show(int argc, char **argv)$/;"	f
cmd_show_usage	cmds-filesystem.c	/^static const char * const cmd_show_usage[] = {$/;"	v	file:
cmd_snapshot	cmds-subvolume.c	/^int cmd_snapshot(int argc, char **argv)$/;"	f
cmd_snapshot_usage	cmds-subvolume.c	/^static const char * const cmd_snapshot_usage[] = {$/;"	v	file:
cmd_start_replace	cmds-replace.c	/^static int cmd_start_replace(int argc, char **argv)$/;"	f	file:
cmd_start_replace_usage	cmds-replace.c	/^static const char *const cmd_start_replace_usage[] = {$/;"	v	file:
cmd_status_replace	cmds-replace.c	/^static int cmd_status_replace(int argc, char **argv)$/;"	f	file:
cmd_status_replace_usage	cmds-replace.c	/^static const char *const cmd_status_replace_usage[] = {$/;"	v	file:
cmd_struct	commands.h	/^struct cmd_struct {$/;"	s
cmd_subvol_create	cmds-subvolume.c	/^int cmd_subvol_create(int argc, char **argv)$/;"	f
cmd_subvol_create_usage	cmds-subvolume.c	/^static const char * const cmd_subvol_create_usage[] = {$/;"	v	file:
cmd_subvol_delete	cmds-subvolume.c	/^int cmd_subvol_delete(int argc, char **argv)$/;"	f
cmd_subvol_delete_usage	cmds-subvolume.c	/^static const char * const cmd_subvol_delete_usage[] = {$/;"	v	file:
cmd_subvol_get_default	cmds-subvolume.c	/^static int cmd_subvol_get_default(int argc, char **argv)$/;"	f	file:
cmd_subvol_get_default_usage	cmds-subvolume.c	/^static const char * const cmd_subvol_get_default_usage[] = {$/;"	v	file:
cmd_subvol_list	cmds-subvolume.c	/^int cmd_subvol_list(int argc, char **argv)$/;"	f
cmd_subvol_list_usage	cmds-subvolume.c	/^static const char * const cmd_subvol_list_usage[] = {$/;"	v	file:
cmd_subvol_set_default	cmds-subvolume.c	/^static int cmd_subvol_set_default(int argc, char **argv)$/;"	f	file:
cmd_subvol_set_default_usage	cmds-subvolume.c	/^static const char * const cmd_subvol_set_default_usage[] = {$/;"	v	file:
cmd_subvol_show	cmds-subvolume.c	/^int cmd_subvol_show(int argc, char **argv)$/;"	f
cmd_subvol_show_usage	cmds-subvolume.c	/^static const char * const cmd_subvol_show_usage[] = {$/;"	v	file:
cmd_subvolid_resolve	cmds-inspect.c	/^static int cmd_subvolid_resolve(int argc, char **argv)$/;"	f	file:
cmd_subvolid_resolve_usage	cmds-inspect.c	/^static const char * const cmd_subvolid_resolve_usage[] = {$/;"	v	file:
cmd_subvolume	cmds-subvolume.c	/^int cmd_subvolume(int argc, char **argv)$/;"	f
cmd_super_recover	cmds-rescue.c	/^int cmd_super_recover(int argc, char **argv)$/;"	f
cmd_super_recover_usage	cmds-rescue.c	/^const char * const cmd_super_recover_usage[] = {$/;"	v
cmd_sync	cmds-filesystem.c	/^static int cmd_sync(int argc, char **argv)$/;"	f	file:
cmd_sync_usage	cmds-filesystem.c	/^static const char * const cmd_sync_usage[] = {$/;"	v	file:
cmd_version	btrfs.c	/^static int cmd_version(int argc, char **argv)$/;"	f	file:
cmd_version_usage	btrfs.c	/^static const char * const cmd_version_usage[] = {$/;"	v	file:
cmds_objects	Makefile	/^cmds_objects =  cmds-subvolume.o cmds-filesystem.o cmds-device.o cmds-scrub.o \\$/;"	m
cmp_device_id	cmds-filesystem.c	/^static int cmp_device_id(void *priv, struct list_head *a,$/;"	f	file:
color	main.c	/^GdkColor color;$/;"	v
color	snapshot-scan.h	/^GdkColor color;$/;"	v
color	subvolume.h	/^GdkColor color;$/;"	v
column_name	btrfs-list.c	/^	char	*column_name;$/;"	m	struct:__anon6	file:
column_name	qgroup.c	/^	char *column_name;$/;"	m	struct:__anon14	file:
combo_basep_snap	snapshot-scan.h	/^GtkWidget *combo_basep_snap;$/;"	v
commands	commands.h	/^	const struct cmd_struct commands[];$/;"	m	struct:cmd_group	typeref:struct:cmd_group::cmd_struct
commit_root	ctree.h	/^	struct extent_buffer *commit_root;$/;"	m	struct:btrfs_root	typeref:struct:btrfs_root::extent_buffer
commit_tree_roots	disk-io.c	/^static int commit_tree_roots(struct btrfs_trans_handle *trans,$/;"	f	file:
comp_entry_with_excl	qgroup.c	/^static int comp_entry_with_excl(struct btrfs_qgroup *entry1,$/;"	f	file:
comp_entry_with_gen	btrfs-list.c	/^static int comp_entry_with_gen(struct root_info *entry1,$/;"	f	file:
comp_entry_with_max_excl	qgroup.c	/^static int comp_entry_with_max_excl(struct btrfs_qgroup *entry1,$/;"	f	file:
comp_entry_with_max_rfer	qgroup.c	/^static int comp_entry_with_max_rfer(struct btrfs_qgroup *entry1,$/;"	f	file:
comp_entry_with_ogen	btrfs-list.c	/^static int comp_entry_with_ogen(struct root_info *entry1,$/;"	f	file:
comp_entry_with_path	btrfs-list.c	/^static int comp_entry_with_path(struct root_info *entry1,$/;"	f	file:
comp_entry_with_qgroupid	qgroup.c	/^static int comp_entry_with_qgroupid(struct btrfs_qgroup *entry1,$/;"	f	file:
comp_entry_with_rfer	qgroup.c	/^static int comp_entry_with_rfer(struct btrfs_qgroup *entry1,$/;"	f	file:
comp_entry_with_rootid	btrfs-list.c	/^static int comp_entry_with_rootid(struct root_info *entry1,$/;"	f	file:
comp_func	btrfs-list.h	/^	btrfs_list_comp_func comp_func;$/;"	m	struct:btrfs_list_comparer
comp_func	qgroup.h	/^	btrfs_qgroup_comp_func comp_func;$/;"	m	struct:btrfs_qgroup_comparer
compat_flags	ctree.h	/^	__le64 compat_flags;$/;"	m	struct:btrfs_super_block
compat_ro_flags	ctree.h	/^	__le64 compat_ro_flags;$/;"	m	struct:btrfs_super_block
completed	ioctl.h	/^	__u64 completed;$/;"	m	struct:btrfs_balance_progress
compress	btrfs-image.c	/^	u8 compress;$/;"	m	struct:meta_cluster_header	file:
compress_level	btrfs-image.c	/^	int compress_level;$/;"	m	struct:metadump_struct	file:
compress_method	btrfs-image.c	/^	int compress_method;$/;"	m	struct:mdrestore_struct	file:
compress_type	ioctl.h	/^	__u32 compress_type;$/;"	m	struct:btrfs_ioctl_defrag_range_args
compression	ctree.h	/^	u8 compression;$/;"	m	struct:btrfs_file_extent_item
comps	btrfs-list.h	/^	struct btrfs_list_comparer comps[0];$/;"	m	struct:btrfs_list_comparer_set	typeref:struct:btrfs_list_comparer_set::btrfs_list_comparer
comps	qgroup.h	/^	struct btrfs_qgroup_comparer comps[0];$/;"	m	struct:btrfs_qgroup_comparer_set	typeref:struct:btrfs_qgroup_comparer_set::btrfs_qgroup_comparer
cond	btrfs-image.c	/^	pthread_cond_t cond;$/;"	m	struct:mdrestore_struct	file:
cond	btrfs-image.c	/^	pthread_cond_t cond;$/;"	m	struct:metadump_struct	file:
cond_resched	kerncompat.h	124;"	d
considered	ioctl.h	/^	__u64 considered;$/;"	m	struct:btrfs_balance_progress
cont_reading_from_srcdev_mode	ioctl.h	/^	__u64 cont_reading_from_srcdev_mode;	\/* in, see #define$/;"	m	struct:btrfs_ioctl_dev_replace_start_params
container_of	kerncompat.h	240;"	d
content_checked	cmds-check.c	/^	unsigned int content_checked:1;$/;"	m	struct:extent_record	file:
contents_box	main.c	/^GtkWidget *box,*itemlist_box,*contents_box;\/\/主容器，左边的列表容器，右边的显示区域容器$/;"	v
convert_extent_item_v0	extent-tree.c	/^static int convert_extent_item_v0(struct btrfs_trans_handle *trans,$/;"	f	file:
convert_file_extent_field	btrfs-corrupt-block.c	/^static enum btrfs_file_extent_field convert_file_extent_field(char *field)$/;"	f	file:
convert_inode_field	btrfs-corrupt-block.c	/^static enum btrfs_inode_field convert_inode_field(char *field)$/;"	f	file:
convert_metadata_block_field	btrfs-corrupt-block.c	/^convert_metadata_block_field(char *field)$/;"	f	file:
copy_buffer	btrfs-image.c	/^static void copy_buffer(struct metadump_struct *md, u8 *dst,$/;"	f	file:
copy_disk_extent	btrfs-convert.c	/^static int copy_disk_extent(struct btrfs_root *root, u64 dst_bytenr,$/;"	f	file:
copy_extended_attrs	btrfs-convert.c	/^static int copy_extended_attrs(struct btrfs_trans_handle *trans,$/;"	f	file:
copy_extent_buffer	extent_io.c	/^void copy_extent_buffer(struct extent_buffer *dst, struct extent_buffer *src,$/;"	f
copy_file	cmds-restore.c	/^static int copy_file(struct btrfs_root *root, int fd, struct btrfs_key *key,$/;"	f	file:
copy_for_split	ctree.c	/^static noinline int copy_for_split(struct btrfs_trans_handle *trans,$/;"	f	file:
copy_from_extent_tree	btrfs-image.c	/^static int copy_from_extent_tree(struct metadump_struct *metadump,$/;"	f	file:
copy_inode_item	btrfs-convert.c	/^static int copy_inode_item(struct btrfs_inode_item *dst,$/;"	f	file:
copy_inodes	btrfs-convert.c	/^static int copy_inodes(struct btrfs_root *root, ext2_filsys ext2_fs,$/;"	f	file:
copy_log_trees	btrfs-image.c	/^static int copy_log_trees(struct btrfs_root *root,$/;"	f	file:
copy_one_extent	cmds-restore.c	/^static int copy_one_extent(struct btrfs_root *root, int fd,$/;"	f	file:
copy_one_inline	cmds-restore.c	/^static int copy_one_inline(int fd, struct btrfs_path *path, u64 pos)$/;"	f	file:
copy_single_inode	btrfs-convert.c	/^static int copy_single_inode(struct btrfs_trans_handle *trans,$/;"	f	file:
copy_single_xattr	btrfs-convert.c	/^static int copy_single_xattr(struct btrfs_trans_handle *trans,$/;"	f	file:
copy_space_cache	btrfs-image.c	/^static int copy_space_cache(struct btrfs_root *root,$/;"	f	file:
copy_tree_blocks	btrfs-image.c	/^static int copy_tree_blocks(struct btrfs_root *root, struct extent_buffer *eb,$/;"	f	file:
copydev	bcp	/^def copydev(srcname, dst, filename, statinfo, force_name):$/;"	f
copyfile	bcp	/^def copyfile(srcname, dst, filename, statinfo, force_name):$/;"	f
copylink	bcp	/^def copylink(srcname, dst, filename, statinfo, force_name):$/;"	f
corrected_errors	ioctl.h	/^	__u64 corrected_errors;$/;"	m	struct:btrfs_scrub_progress
corrupt_blocks	ctree.h	/^	struct cache_tree *corrupt_blocks;$/;"	m	struct:btrfs_fs_info	typeref:struct:btrfs_fs_info::cache_tree
corrupt_chunk_tree	btrfs-corrupt-block.c	/^int corrupt_chunk_tree(struct btrfs_trans_handle *trans,$/;"	f
corrupt_extent	btrfs-corrupt-block.c	/^static int corrupt_extent(struct btrfs_trans_handle *trans,$/;"	f	file:
corrupt_file_extent	btrfs-corrupt-block.c	/^static int corrupt_file_extent(struct btrfs_trans_handle *trans,$/;"	f	file:
corrupt_inode	btrfs-corrupt-block.c	/^static int corrupt_inode(struct btrfs_trans_handle *trans,$/;"	f	file:
corrupt_item_nocow	btrfs-corrupt-block.c	/^int corrupt_item_nocow(struct btrfs_trans_handle *trans,$/;"	f
corrupt_keys	btrfs-corrupt-block.c	/^static void corrupt_keys(struct btrfs_trans_handle *trans,$/;"	f	file:
corrupt_keys_in_block	btrfs-corrupt-block.c	/^static int corrupt_keys_in_block(struct btrfs_root *root, u64 bytenr)$/;"	f	file:
corrupt_metadata_block	btrfs-corrupt-block.c	/^static int corrupt_metadata_block(struct btrfs_root *root, u64 block,$/;"	f	file:
count	btrfs-calc-size.c	/^	u64 count;$/;"	m	struct:seek	file:
count	cmds-check.c	/^	int count;$/;"	m	struct:extent_entry	file:
count	ctree.h	/^	__le32 count;$/;"	m	struct:btrfs_extent_data_ref
count	ctree.h	/^	__le32 count;$/;"	m	struct:btrfs_extent_ref_v0
count	ctree.h	/^	__le32 count;$/;"	m	struct:btrfs_shared_data_ref
count	radix-tree.c	/^	unsigned int	count;$/;"	m	struct:radix_tree_node	file:
count_bytes	print-tree.c	/^static int count_bytes(void *buf, int len, char b)$/;"	f	file:
count_csum_range	cmds-check.c	/^static u64 count_csum_range(struct btrfs_root *root, u64 start, u64 len)$/;"	f	file:
cpu_to_le16	kerncompat.h	269;"	d
cpu_to_le16	kerncompat.h	276;"	d
cpu_to_le32	kerncompat.h	267;"	d
cpu_to_le32	kerncompat.h	274;"	d
cpu_to_le64	kerncompat.h	265;"	d
cpu_to_le64	kerncompat.h	272;"	d
cpu_to_le8	kerncompat.h	261;"	d
crc	send.h	/^	__le32 crc;$/;"	m	struct:btrfs_cmd_header
crc32c	crc32c.h	31;"	d
crc32c_intel	crc32c.c	/^static uint32_t crc32c_intel(u32 crc, unsigned char const *data, unsigned long length)$/;"	f	file:
crc32c_intel_available	crc32c.c	/^static int crc32c_intel_available = 0;$/;"	v	file:
crc32c_intel_le_hw_byte	crc32c.c	/^static uint32_t crc32c_intel_le_hw_byte(uint32_t crc, unsigned char const *data,$/;"	f	file:
crc32c_intel_probe	crc32c.c	/^static void crc32c_intel_probe(void)$/;"	f	file:
crc32c_le	crc32c.c	/^u32 crc32c_le(u32 crc, unsigned char const *data, size_t length)$/;"	f
crc32c_optimization_init	crc32c.c	/^void crc32c_optimization_init(void)$/;"	f
crc32c_probed	crc32c.c	/^static int crc32c_probed = 0;$/;"	v	file:
crc32c_table	crc32c.c	/^static const u32 crc32c_table[256] = {$/;"	v	file:
crc_function	crc32c.c	/^static u32 (*crc_function)(u32 crc, unsigned char const *data, size_t length) = __crc32c_le;$/;"	v	file:
create	ioctl.h	/^	__u64 create;$/;"	m	struct:btrfs_ioctl_qgroup_create_args
create_chunk_item	chunk-recover.c	/^static struct btrfs_chunk *create_chunk_item(struct chunk_record *record)$/;"	f	file:
create_chunk_item	cmds-chunk.c	/^static struct btrfs_chunk *create_chunk_item(struct chunk_record *record)$/;"	f	file:
create_chunk_mapping	btrfs-convert.c	/^static int create_chunk_mapping(struct btrfs_trans_handle *trans,$/;"	f	file:
create_chunks	mkfs.c	/^static int create_chunks(struct btrfs_trans_handle *trans,$/;"	f	file:
create_data_reloc_tree	mkfs.c	/^static int create_data_reloc_tree(struct btrfs_trans_handle *trans,$/;"	f	file:
create_dir_entries	btrfs-convert.c	/^static int create_dir_entries(struct btrfs_trans_handle *trans,$/;"	f	file:
create_ext2_image	btrfs-convert.c	/^static int create_ext2_image(struct btrfs_root *root, ext2_filsys ext2_fs,$/;"	f	file:
create_file_extents	btrfs-convert.c	/^static int create_file_extents(struct btrfs_trans_handle *trans,$/;"	f	file:
create_image_file_range	btrfs-convert.c	/^static int create_image_file_range(struct btrfs_trans_handle *trans,$/;"	f	file:
create_metadump	btrfs-image.c	/^static int create_metadump(const char *input, FILE *out, int num_threads,$/;"	f	file:
create_one_raid_group	mkfs.c	/^static int create_one_raid_group(struct btrfs_trans_handle *trans,$/;"	f	file:
create_raid_groups	mkfs.c	/^static int create_raid_groups(struct btrfs_trans_handle *trans,$/;"	f	file:
create_subvol	btrfs-convert.c	/^static int create_subvol(struct btrfs_trans_handle *trans,$/;"	f	file:
create_symbol_link	btrfs-convert.c	/^static int create_symbol_link(struct btrfs_trans_handle *trans,$/;"	f	file:
csum	chunk-recover.c	/^	u8 csum[BTRFS_CSUM_SIZE];$/;"	m	struct:extent_record	file:
csum	cmds-chunk.c	/^	u8 csum[BTRFS_CSUM_SIZE];$/;"	m	struct:extent_record	file:
csum	ctree.h	/^	u8 csum;$/;"	m	struct:btrfs_csum_item
csum	ctree.h	/^	u8 csum[BTRFS_CSUM_SIZE];$/;"	m	struct:btrfs_header
csum	ctree.h	/^	u8 csum[BTRFS_CSUM_SIZE];$/;"	m	struct:btrfs_super_block
csum_block	btrfs-find-root.c	/^static int csum_block(void *buf, u32 len)$/;"	f	file:
csum_block	btrfs-image.c	/^static void csum_block(u8 *buf, size_t len)$/;"	f	file:
csum_discards	ioctl.h	/^	__u64 csum_discards;$/;"	m	struct:btrfs_scrub_progress
csum_disk_extent	btrfs-convert.c	/^static int csum_disk_extent(struct btrfs_trans_handle *trans,$/;"	f	file:
csum_errors	ioctl.h	/^	__u64 csum_errors;$/;"	m	struct:btrfs_scrub_progress
csum_root	ctree.h	/^	__le64 csum_root;$/;"	m	struct:btrfs_root_backup
csum_root	ctree.h	/^	struct btrfs_root *csum_root;$/;"	m	struct:btrfs_fs_info	typeref:struct:btrfs_fs_info::btrfs_root
csum_root_gen	ctree.h	/^	__le64 csum_root_gen;$/;"	m	struct:btrfs_root_backup
csum_root_level	ctree.h	/^	u8 csum_root_level;$/;"	m	struct:btrfs_root_backup
csum_size	btrfs-find-root.c	/^static u16 csum_size = 0;$/;"	v	file:
csum_size	chunk-recover.c	/^	u16 csum_size;$/;"	m	struct:recover_control	file:
csum_size	cmds-chunk.c	/^	u16 csum_size;$/;"	m	struct:recover_control	file:
csum_tree_block	disk-io.c	/^int csum_tree_block(struct btrfs_root *root, struct extent_buffer *buf,$/;"	f
csum_tree_block_size	disk-io.c	/^int csum_tree_block_size(struct extent_buffer *buf, u16 csum_size, int verify)$/;"	f
csum_type	ctree.h	/^	__le16 csum_type;$/;"	m	struct:btrfs_super_block
ctime	ctree.h	/^	struct btrfs_timespec ctime;$/;"	m	struct:btrfs_inode_item	typeref:struct:btrfs_inode_item::btrfs_timespec
ctime	ctree.h	/^	struct btrfs_timespec ctime;$/;"	m	struct:btrfs_root_item	typeref:struct:btrfs_root_item::btrfs_timespec
ctransid	ctree.h	/^	__le64 ctransid; \/* updated when an inode changes *\/$/;"	m	struct:btrfs_root_item
ctransid	send-utils.h	/^	u64 ctransid;$/;"	m	struct:subvol_info
cur	free-space-cache.c	/^	void *cur, *orig;$/;"	m	struct:io_ctl	file:
cur_subvol	cmds-receive.c	/^	struct subvol_info *cur_subvol;$/;"	m	struct:btrfs_receive	typeref:struct:btrfs_receive::subvol_info	file:
current	cmds-check.c	/^	struct inode_record *current;$/;"	m	struct:shared_node	typeref:struct:shared_node::inode_record	file:
custom_alloc_extent	btrfs-convert.c	/^static int custom_alloc_extent(struct btrfs_root *root, u64 num_bytes,$/;"	f	file:
custom_free_extent	btrfs-convert.c	/^static int custom_free_extent(struct btrfs_root *root, u64 bytenr,$/;"	f	file:
data	btrfs-image.c	/^	int data;$/;"	m	struct:metadump_struct	file:
data	btrfs-list.h	/^	u64 data;$/;"	m	struct:btrfs_list_filter
data	cmds-check.c	/^	void *data;$/;"	m	struct:ptr_node	file:
data	extent_io.h	/^	char data[];$/;"	m	struct:extent_buffer
data	ioctl.h	/^	struct btrfs_balance_args data;		\/* in\/out *\/$/;"	m	struct:btrfs_ioctl_balance_args	typeref:struct:btrfs_ioctl_balance_args::btrfs_balance_args
data	qgroup.h	/^	u64 data;$/;"	m	struct:btrfs_qgroup_filter
data	show-blocks	/^    data = loaddata(file(options.input_file))$/;"	v
data	show-blocks	/^    data = run_debug_tree(options.device)$/;"	v
data_alloc_profile	ctree.h	/^	u64 data_alloc_profile;$/;"	m	struct:btrfs_fs_info
data_backref	cmds-check.c	/^struct data_backref {$/;"	s	file:
data_bytes_allocated	cmds-check.c	/^static u64 data_bytes_allocated = 0;$/;"	v	file:
data_bytes_referenced	cmds-check.c	/^static u64 data_bytes_referenced = 0;$/;"	v	file:
data_bytes_scrubbed	ioctl.h	/^	__u64 data_bytes_scrubbed;$/;"	m	struct:btrfs_scrub_progress
data_done	show-blocks	/^data_done = False$/;"	v
data_extents_scrubbed	ioctl.h	/^	__u64 data_extents_scrubbed;$/;"	m	struct:btrfs_scrub_progress
data_len	ctree.h	/^	__le16 data_len;$/;"	m	struct:btrfs_dir_item
datai	show-blocks	/^datai = 0$/;"	v
datalen	show-blocks	/^datalen = len(data)$/;"	v
debug_corrupt_block	btrfs-corrupt-block.c	/^struct extent_buffer *debug_corrupt_block(struct btrfs_root *root, u64 bytenr,$/;"	f
debug_read_block	btrfs-map-logical.c	/^static struct extent_buffer * debug_read_block(struct btrfs_root *root,$/;"	f	file:
decompress	cmds-restore.c	/^static int decompress(char *inbuf, char *outbuf, u64 compress_len,$/;"	f	file:
decompress_lzo	cmds-restore.c	/^static int decompress_lzo(unsigned char *inbuf, char *outbuf, u64 compress_len,$/;"	f	file:
decompress_zlib	cmds-restore.c	/^static int decompress_zlib(char *inbuf, char *outbuf, u64 compress_len,$/;"	f	file:
defrag_callback	cmds-filesystem.c	/^static int defrag_callback(const char *fpath, const struct stat *sb,$/;"	f	file:
defrag_global_errors	cmds-filesystem.c	/^static int defrag_global_errors;$/;"	v	file:
defrag_global_fancy_ioctl	cmds-filesystem.c	/^static int defrag_global_fancy_ioctl;$/;"	v	file:
defrag_global_range	cmds-filesystem.c	/^static struct btrfs_ioctl_defrag_range_args defrag_global_range;$/;"	v	typeref:struct:btrfs_ioctl_defrag_range_args	file:
defrag_global_verbose	cmds-filesystem.c	/^static int defrag_global_verbose;$/;"	v	file:
del_dir_item	dir-test.c	/^static int del_dir_item(struct btrfs_trans_handle *trans,$/;"	f	file:
del_one	dir-test.c	/^static int del_one(struct btrfs_trans_handle *trans, struct btrfs_root *root,$/;"	f	file:
del_one	random-test.c	/^static int del_one(struct btrfs_trans_handle *trans, struct btrfs_root *root,$/;"	f	file:
del_pending_extents	extent-tree.c	/^static int del_pending_extents(struct btrfs_trans_handle *trans, struct$/;"	f	file:
delete_duplicate_records	cmds-check.c	/^static int delete_duplicate_records(struct btrfs_trans_handle *trans,$/;"	f	file:
delete_extent_records	cmds-check.c	/^static int delete_extent_records(struct btrfs_trans_handle *trans,$/;"	f	file:
deleted	btrfs-list.h	/^	int deleted;$/;"	m	struct:root_info
desc	mkfs.c	/^	const char *desc;$/;"	m	struct:btrfs_fs_feature	file:
desp_snap_box	snapshot-scan.h	/^GtkWidget *desp_snap_box;$/;"	v
dest_dir_fd	cmds-receive.c	/^	int dest_dir_fd;$/;"	m	struct:btrfs_receive	file:
dest_dir_path	cmds-receive.c	/^	char *dest_dir_path; \/* relative to root_path *\/$/;"	m	struct:btrfs_receive	file:
dest_folder_box	subvolume.h	/^GtkWidget *dest_folder_box;\/\/用于目的文件夹的布局$/;"	v
dest_offset	ioctl.h	/^	__u64 dest_offset;$/;"	m	struct:btrfs_ioctl_clone_range_args
dest_pack_box	subvolume.h	/^GtkWidget *dest_pack_box;$/;"	v
dest_subvol_box	subvolume.h	/^GtkWidget *dest_subvol_box;$/;"	v
destroy	main.c	/^void destroy(GtkWidget *window,gpointer data){$/;"	f
details_show_box	snapshot-scan.h	/^GtkWidget *details_show_box;$/;"	v
details_show_box	subvolume.h	/^GtkWidget *details_show_box;$/;"	v
details_title_box	snapshot-scan.h	/^GtkWidget *details_title_box;$/;"	v
details_title_box	subvolume.h	/^GtkWidget *details_title_box;$/;"	v
dev	volumes.c	/^	struct btrfs_device *dev;$/;"	m	struct:stripe	typeref:struct:stripe::btrfs_device	file:
dev	volumes.h	/^	struct btrfs_device *dev;$/;"	m	struct:btrfs_bio_stripe	typeref:struct:btrfs_bio_stripe::btrfs_device
dev_bytenr	extent_io.h	/^	u64 dev_bytenr;$/;"	m	struct:extent_buffer
dev_group	ctree.h	/^	__le32 dev_group;$/;"	m	struct:btrfs_dev_item
dev_item	ctree.h	/^	struct btrfs_dev_item dev_item;$/;"	m	struct:btrfs_super_block	typeref:struct:btrfs_super_block::btrfs_dev_item
dev_list	volumes.h	/^	struct list_head dev_list;$/;"	m	struct:btrfs_device	typeref:struct:btrfs_device::list_head
dev_replace_cancel_fd	cmds-replace.c	/^static int dev_replace_cancel_fd = -1;$/;"	v	file:
dev_replace_handle_sigint	cmds-replace.c	/^static int dev_replace_handle_sigint(int fd)$/;"	f	file:
dev_replace_sigint_handler	cmds-replace.c	/^static void dev_replace_sigint_handler(int signal)$/;"	f	file:
dev_root	ctree.h	/^	__le64 dev_root;$/;"	m	struct:btrfs_root_backup
dev_root	ctree.h	/^	struct btrfs_root *dev_root;$/;"	m	struct:btrfs_fs_info	typeref:struct:btrfs_fs_info::btrfs_root
dev_root	volumes.h	/^	struct btrfs_root *dev_root;$/;"	m	struct:btrfs_device	typeref:struct:btrfs_device::btrfs_root
dev_root_gen	ctree.h	/^	__le64 dev_root_gen;$/;"	m	struct:btrfs_root_backup
dev_root_level	ctree.h	/^	u8 dev_root_level;$/;"	m	struct:btrfs_root_backup
dev_uuid	btrfsck.h	/^	u8 dev_uuid[BTRFS_UUID_SIZE];$/;"	m	struct:stripe
dev_uuid	ctree.h	/^	u8 dev_uuid[BTRFS_UUID_SIZE];$/;"	m	struct:btrfs_stripe
devext	chunk-recover.c	/^	struct device_extent_tree devext;$/;"	m	struct:recover_control	typeref:struct:recover_control::device_extent_tree	file:
devext	cmds-chunk.c	/^	struct device_extent_tree devext;$/;"	m	struct:recover_control	typeref:struct:recover_control::device_extent_tree	file:
device	btrfstune.c	/^static char *device;$/;"	v	file:
device_cmd_group	cmds-device.c	/^const struct cmd_group device_cmd_group = {$/;"	v	typeref:struct:cmd_group
device_cmd_group_usage	cmds-device.c	/^static const char * const device_cmd_group_usage[] = {$/;"	v	file:
device_extent_record	btrfsck.h	/^struct device_extent_record {$/;"	s
device_extent_tree	btrfsck.h	/^struct device_extent_tree {$/;"	s
device_extent_tree_init	btrfsck.h	/^static inline void device_extent_tree_init(struct device_extent_tree *tree)$/;"	f
device_list	btrfsck.h	/^	struct list_head device_list;$/;"	m	struct:device_extent_record	typeref:struct:device_extent_record::list_head
device_list_add	volumes.c	/^static int device_list_add(const char *path,$/;"	f	file:
device_name	super-recover.c	/^	char *device_name;$/;"	m	struct:super_block_record	file:
device_record	btrfsck.h	/^struct device_record {$/;"	s
device_record_compare	cmds-check.c	/^static int device_record_compare(struct rb_node *node1, struct rb_node *node2)$/;"	f	file:
devices	chunk-recover.c	/^	struct btrfs_device *devices[BTRFS_NUM_MIRRORS];$/;"	m	struct:extent_record	typeref:struct:extent_record::btrfs_device	file:
devices	cmds-chunk.c	/^	struct btrfs_device *devices[BTRFS_NUM_MIRRORS];$/;"	m	struct:extent_record	typeref:struct:extent_record::btrfs_device	file:
devices	volumes.h	/^	struct list_head devices;$/;"	m	struct:btrfs_fs_devices	typeref:struct:btrfs_fs_devices::list_head
devid	btrfs-image.c	/^	u64 devid;$/;"	m	struct:mdrestore_struct	file:
devid	btrfsck.h	/^	u64 devid;$/;"	m	struct:device_record
devid	btrfsck.h	/^	u64 devid;$/;"	m	struct:stripe
devid	cmds-scrub.c	/^	u64 devid;$/;"	m	struct:scrub_file_record	file:
devid	ctree.h	/^	__le64 devid;$/;"	m	struct:btrfs_dev_item
devid	ctree.h	/^	__le64 devid;$/;"	m	struct:btrfs_stripe
devid	ioctl.h	/^	__u64 devid;				\/* in *\/$/;"	m	struct:btrfs_ioctl_get_dev_stats
devid	ioctl.h	/^	__u64 devid;				\/* in *\/$/;"	m	struct:btrfs_ioctl_scrub_args
devid	ioctl.h	/^	__u64 devid;				\/* in\/out *\/$/;"	m	struct:btrfs_ioctl_dev_info_args
devid	ioctl.h	/^	__u64 devid;$/;"	m	struct:btrfs_balance_args
devid	volumes.h	/^	u64 devid;$/;"	m	struct:btrfs_device
dextents	btrfsck.h	/^	struct list_head dextents;$/;"	m	struct:chunk_record	typeref:struct:chunk_record::list_head
dialog	subvolume.h	/^GtkWidget *dialog;\/\/对话框$/;"	v
dir	cmds-check.c	/^	u64 dir;$/;"	m	struct:inode_backref	file:
dir	cmds-check.c	/^	u64 dir;$/;"	m	struct:root_backref	file:
dir_id	btrfs-list.h	/^	u64 dir_id;$/;"	m	struct:root_info
dir_iterate_data	btrfs-convert.c	/^struct dir_iterate_data {$/;"	s	file:
dir_iterate_proc	btrfs-convert.c	/^static int dir_iterate_proc(ext2_ino_t dir, int entry,$/;"	f	file:
dir_name	mkfs.c	/^	char *dir_name;$/;"	m	struct:directory_name_entry	file:
dir_oid	dir-test.c	/^static u64 dir_oid = 0;$/;"	v	file:
directory_name_entry	mkfs.c	/^struct directory_name_entry {$/;"	s	file:
directory_select	mkfs.c	/^static int directory_select(const struct direct *entry)$/;"	f	file:
dirid	ctree.h	/^	__le64 dirid;$/;"	m	struct:btrfs_root_ref
dirty_cowonly_roots	ctree.h	/^	struct list_head dirty_cowonly_roots;$/;"	m	struct:btrfs_fs_info	typeref:struct:btrfs_fs_info::list_head
dirty_list	ctree.h	/^	struct list_head dirty_list;$/;"	m	struct:btrfs_root	typeref:struct:btrfs_root::list_head
discard_blocks	utils.c	/^discard_blocks(int fd, u64 start, u64 len)$/;"	f	file:
disk_block	btrfs-convert.c	/^	u64 disk_block;$/;"	m	struct:blk_iterate_data	file:
disk_bytenr	cmds-check.c	/^	u64 disk_bytenr;$/;"	m	struct:data_backref	file:
disk_bytenr	ctree.h	/^	__le64 disk_bytenr;$/;"	m	struct:btrfs_file_extent_item
disk_num_bytes	ctree.h	/^	__le64 disk_num_bytes;$/;"	m	struct:btrfs_file_extent_item
distance	btrfs-calc-size.c	/^	u64 distance;$/;"	m	struct:seek	file:
div_factor	math.h	/^static inline u64 div_factor(u64 num, int factor)$/;"	f
do_balance	cmds-balance.c	/^static int do_balance(const char *path, struct btrfs_ioctl_balance_args *args,$/;"	f	file:
do_balance_v1	cmds-balance.c	/^static int do_balance_v1(int fd)$/;"	f	file:
do_chunk_alloc	extent-tree.c	/^static int do_chunk_alloc(struct btrfs_trans_handle *trans,$/;"	f	file:
do_convert	btrfs-convert.c	/^static int do_convert(const char *devname, int datacsum, int packing,$/;"	f	file:
do_cpuid	crc32c.c	/^static void do_cpuid(unsigned int *eax, unsigned int *ebx, unsigned int *ecx,$/;"	f	file:
do_defrag	cmds-filesystem.c	/^static int do_defrag(int fd, int fancy_ioctl,$/;"	f	file:
do_list_roots	cmds-restore.c	/^static int do_list_roots(struct btrfs_root *root)$/;"	f	file:
do_receive	cmds-receive.c	/^static int do_receive(struct btrfs_receive *r, const char *tomnt, int r_fd)$/;"	f	file:
do_record	cmds-scrub.c	/^	int do_record;$/;"	m	struct:scrub_progress_cycle	file:
do_rollback	btrfs-convert.c	/^static int do_rollback(const char *devname, int force)$/;"	f	file:
do_send	cmds-send.c	/^static int do_send(struct btrfs_send *send, u64 root_id, u64 parent_root_id,$/;"	f	file:
do_usage_one_command	help.c	/^static int do_usage_one_command(const char * const *usagestr,$/;"	f	file:
done	btrfs-image.c	/^	int done;$/;"	m	struct:mdrestore_struct	file:
done	btrfs-image.c	/^	int done;$/;"	m	struct:metadump_struct	file:
drawAnnote	show-blocks	/^  def drawAnnote(self, axis, x, y):$/;"	m	class:AnnoteFinder
drop_level	ctree.h	/^	u8 drop_level;$/;"	m	struct:btrfs_root_item
drop_level	ctree.h	/^	u8 drop_level;$/;"	m	struct:btrfs_root_item_v0
drop_progress	ctree.h	/^	struct btrfs_disk_key drop_progress;$/;"	m	struct:btrfs_root_item	typeref:struct:btrfs_root_item::btrfs_disk_key
drop_progress	ctree.h	/^	struct btrfs_disk_key drop_progress;$/;"	m	struct:btrfs_root_item_v0	typeref:struct:btrfs_root_item_v0::btrfs_disk_key
dst	bcp	/^        dst = orig_dst$/;"	v
dst	bcp	/^        dst = os.path.join(orig_dst, os.path.basename(src))$/;"	v
dst	ioctl.h	/^	__u64 dst;$/;"	m	struct:btrfs_ioctl_qgroup_assign_args
dst_dir	bcp	/^            dst_dir = os.path.join(dst, part)$/;"	v
dummy	Makefile	/^	dummy := $(shell $(CC) -dM -E -x c - < \/dev\/null | \\$/;"	m
dump_balance_args	cmds-balance.c	/^static void dump_balance_args(struct btrfs_balance_args *args)$/;"	f	file:
dump_fd	cmds-send.c	/^	int dump_fd;$/;"	m	struct:btrfs_send	file:
dump_ioctl_balance_args	cmds-balance.c	/^static void dump_ioctl_balance_args(struct btrfs_ioctl_balance_args *args)$/;"	f	file:
dump_superblock	btrfs-show-super.c	/^static void dump_superblock(struct btrfs_super_block *sb)$/;"	f	file:
dump_thread	cmds-send.c	/^static void *dump_thread(void *arg_)$/;"	f	file:
dump_worker	btrfs-image.c	/^static void *dump_worker(void *data)$/;"	f	file:
dups	cmds-check.c	/^	struct list_head dups;$/;"	m	struct:extent_record	typeref:struct:extent_record::list_head	file:
duration	cmds-scrub.c	/^	u64 duration;$/;"	m	struct:scrub_stats	file:
e_id	btrfs-convert.c	/^	__le32		e_id;$/;"	m	struct:__anon1	file:
e_id	btrfs-convert.c	/^	__le32		e_id;$/;"	m	struct:__anon4	file:
e_perm	btrfs-convert.c	/^	__le16		e_perm;$/;"	m	struct:__anon1	file:
e_perm	btrfs-convert.c	/^	__le16		e_perm;$/;"	m	struct:__anon2	file:
e_perm	btrfs-convert.c	/^	__le16		e_perm;$/;"	m	struct:__anon4	file:
e_tag	btrfs-convert.c	/^	__le16		e_tag;$/;"	m	struct:__anon1	file:
e_tag	btrfs-convert.c	/^	__le16		e_tag;$/;"	m	struct:__anon2	file:
e_tag	btrfs-convert.c	/^	__le16		e_tag;$/;"	m	struct:__anon4	file:
eb_cache	chunk-recover.c	/^	struct cache_tree eb_cache;$/;"	m	struct:recover_control	typeref:struct:recover_control::cache_tree	file:
eb_cache	cmds-chunk.c	/^	struct cache_tree eb_cache;$/;"	m	struct:recover_control	typeref:struct:recover_control::cache_tree	file:
elem_cnt	ioctl.h	/^	__u32	elem_cnt;	\/* out *\/$/;"	m	struct:btrfs_data_container
elem_missed	ioctl.h	/^	__u32	elem_missed;	\/* out *\/$/;"	m	struct:btrfs_data_container
empty_tree	dir-test.c	/^static int empty_tree(struct btrfs_trans_handle *trans, struct btrfs_root$/;"	f	file:
empty_tree	random-test.c	/^static int empty_tree(struct btrfs_trans_handle *trans, struct btrfs_root$/;"	f	file:
enable_extrefs_flag	btrfstune.c	/^static int enable_extrefs_flag(struct btrfs_root *root)$/;"	f	file:
enable_skinny_metadata	btrfstune.c	/^static int enable_skinny_metadata(struct btrfs_root *root)$/;"	f	file:
encryption	ctree.h	/^	u8 encryption;$/;"	m	struct:btrfs_file_extent_item
end	ctree.h	/^	__le64 end;$/;"	m	struct:btrfs_dir_log_item
end	extent_io.h	/^	u64 end;$/;"	m	struct:extent_state
end	ioctl.h	/^	__u64 end;				\/* in *\/$/;"	m	struct:btrfs_ioctl_scrub_args
end	scan-filesystem.c	/^GtkTextIter start,end; \/\/指向buffer的头部和尾部$/;"	v
enter_shared_node	cmds-check.c	/^static int enter_shared_node(struct btrfs_root *root, u64 bytenr, u32 refs,$/;"	f	file:
errcode	btrfs-convert.c	/^	int errcode;$/;"	m	struct:blk_iterate_data	file:
errcode	btrfs-convert.c	/^	int errcode;$/;"	m	struct:dir_iterate_data	file:
error	btrfs-image.c	/^	int error;$/;"	m	struct:async_work	file:
error	btrfs-image.c	/^	int error;$/;"	m	struct:mdrestore_struct	file:
error	volumes.h	/^	int error;$/;"	m	struct:btrfs_multi_bio
errors	cmds-check.c	/^	int errors;$/;"	m	struct:inode_backref	file:
errors	cmds-check.c	/^	int errors;$/;"	m	struct:inode_record	file:
errors	cmds-check.c	/^	int errors;$/;"	m	struct:root_backref	file:
excl	qgroup.c	/^	u64 excl;	\/*exclusive*\/$/;"	m	struct:btrfs_qgroup	file:
excl_cmpr	qgroup.c	/^	u64 excl_cmpr;	\/*exclusive compressed*\/$/;"	m	struct:btrfs_qgroup	file:
exclusive	ctree.h	/^	__le64 exclusive;$/;"	m	struct:btrfs_qgroup_info_item
exclusive_compressed	ctree.h	/^	__le64 exclusive_compressed;$/;"	m	struct:btrfs_qgroup_info_item
expected	ioctl.h	/^	__u64 expected;$/;"	m	struct:btrfs_balance_progress
ext2_acl_count	btrfs-convert.c	/^static inline int ext2_acl_count(size_t size)$/;"	f	file:
ext2_acl_entry	btrfs-convert.c	/^} ext2_acl_entry;$/;"	t	typeref:struct:__anon1	file:
ext2_acl_entry_short	btrfs-convert.c	/^} ext2_acl_entry_short;$/;"	t	typeref:struct:__anon2	file:
ext2_acl_header	btrfs-convert.c	/^} ext2_acl_header;$/;"	t	typeref:struct:__anon3	file:
ext2_acl_to_xattr	btrfs-convert.c	/^static int ext2_acl_to_xattr(void *dst, const void *src,$/;"	f	file:
ext2_alloc_block	btrfs-convert.c	/^static int ext2_alloc_block(ext2_filsys fs, u64 goal, u64 *block_ret)$/;"	f	file:
ext2_free_block	btrfs-convert.c	/^static int ext2_free_block(ext2_filsys fs, u64 block)$/;"	f	file:
ext2_xattr_check_block	btrfs-convert.c	/^static int ext2_xattr_check_block(const char *buf, size_t size)$/;"	f	file:
ext2_xattr_check_entry	btrfs-convert.c	/^static int ext2_xattr_check_entry(struct ext2_ext_attr_entry *entry,$/;"	f	file:
ext2_xattr_check_names	btrfs-convert.c	/^static int ext2_xattr_check_names(struct ext2_ext_attr_entry *entry,$/;"	f	file:
extent_backref	cmds-check.c	/^struct extent_backref {$/;"	s	file:
extent_buffer	extent_io.h	/^struct extent_buffer {$/;"	s
extent_buffer_get	extent_io.h	/^static inline void extent_buffer_get(struct extent_buffer *eb)$/;"	f
extent_buffer_uptodate	extent_io.c	/^int extent_buffer_uptodate(struct extent_buffer *eb)$/;"	f
extent_cache	ctree.h	/^	struct extent_io_tree extent_cache;$/;"	m	struct:btrfs_fs_info	typeref:struct:btrfs_fs_info::extent_io_tree
extent_data_ref_count	extent-tree.c	/^static noinline u32 extent_data_ref_count(struct btrfs_root *root,$/;"	f	file:
extent_end	cmds-check.c	/^	u64 extent_end;$/;"	m	struct:inode_record	file:
extent_entry	cmds-check.c	/^struct extent_entry {$/;"	s	file:
extent_ins	ctree.h	/^	struct extent_io_tree extent_ins;$/;"	m	struct:btrfs_fs_info	typeref:struct:btrfs_fs_info::extent_io_tree
extent_io_tree	extent_io.h	/^struct extent_io_tree {$/;"	s
extent_io_tree_cleanup	extent_io.c	/^void extent_io_tree_cleanup(struct extent_io_tree *tree)$/;"	f
extent_io_tree_init	extent_io.c	/^void extent_io_tree_init(struct extent_io_tree *tree)$/;"	f
extent_item_refs	cmds-check.c	/^	u64 extent_item_refs;$/;"	m	struct:extent_record	file:
extent_ops	btrfs-convert.c	/^static struct btrfs_extent_ops extent_ops = {$/;"	v	typeref:struct:btrfs_extent_ops	file:
extent_ops	ctree.h	/^	struct btrfs_extent_ops *extent_ops;$/;"	m	struct:btrfs_fs_info	typeref:struct:btrfs_fs_info::btrfs_extent_ops
extent_record	chunk-recover.c	/^struct extent_record {$/;"	s	file:
extent_record	cmds-check.c	/^struct extent_record {$/;"	s	file:
extent_record	cmds-chunk.c	/^struct extent_record {$/;"	s	file:
extent_ref_type	extent-tree.c	/^static inline int extent_ref_type(u64 parent, u64 owner)$/;"	f	file:
extent_root	ctree.h	/^	__le64 extent_root;$/;"	m	struct:btrfs_root_backup
extent_root	ctree.h	/^	struct btrfs_root *extent_root;$/;"	m	struct:btrfs_fs_info	typeref:struct:btrfs_fs_info::btrfs_root
extent_root_gen	ctree.h	/^	__le64 extent_root_gen;$/;"	m	struct:btrfs_root_backup
extent_root_level	ctree.h	/^	u8 extent_root_level;$/;"	m	struct:btrfs_root_backup
extent_root_pending_ops	extent-tree.c	/^static int extent_root_pending_ops(struct btrfs_fs_info *info)$/;"	f	file:
extent_start	cmds-check.c	/^	u64 extent_start;$/;"	m	struct:inode_record	file:
extent_state	extent_io.h	/^struct extent_state {$/;"	s
extent_thresh	ioctl.h	/^	__u32 extent_thresh;$/;"	m	struct:btrfs_ioctl_defrag_range_args
extents_thresh	free-space-cache.h	/^	int extents_thresh;$/;"	m	struct:btrfs_free_space_ctl
extract_metadata_record	chunk-recover.c	/^static int extract_metadata_record(struct recover_control *rc,$/;"	f	file:
extract_metadata_record	cmds-chunk.c	/^static int extract_metadata_record(struct recover_control *rc,$/;"	f	file:
f	show-blocks	/^f = figure(figsize=(8,6))$/;"	v
fd	cmds-scrub.c	/^	int fd;$/;"	m	struct:scrub_progress	file:
fd	extent_io.h	/^	int fd;$/;"	m	struct:extent_buffer
fd	ioctl.h	/^	__s64 fd;$/;"	m	struct:btrfs_ioctl_vol_args
fd	ioctl.h	/^	__s64 fd;$/;"	m	struct:btrfs_ioctl_vol_args_v2
fd	send-stream.c	/^	int fd;$/;"	m	struct:btrfs_send_stream	file:
fd	volumes.h	/^	int fd;$/;"	m	struct:btrfs_device
fdmnt	cmds-scrub.c	/^	int fdmnt;$/;"	m	struct:scrub_progress_cycle	file:
ffz	bitops.h	106;"	d
fi	cmds-scrub.c	/^	struct btrfs_ioctl_fs_info_args *fi;$/;"	m	struct:scrub_progress_cycle	typeref:struct:scrub_progress_cycle::btrfs_ioctl_fs_info_args	file:
file_change_box	subvolume.h	/^GtkWidget *file_change_box;$/;"	v
file_change_info	snapshot-scan.h	/^char file_change_info[ACTIVE_SIZE][256];$/;"	v
file_change_info	subvolume.h	/^char file_change_info[ACTIVE_SIZE][256];$/;"	v
file_change_num	snapshot-scan.h	/^int file_change_num;$/;"	v
file_change_num	subvolume.h	/^int file_change_num;$/;"	v
file_change_pack_box	snapshot-scan.h	/^GtkWidget *file_change_pack_box;$/;"	v
file_change_pack_box	subvolume.h	/^GtkWidget *file_change_pack_box;$/;"	v
file_oid	dir-test.c	/^static u64 file_oid = 33778;$/;"	v	file:
filesystem_cmd_group	cmds-filesystem.c	/^const struct cmd_group filesystem_cmd_group = {$/;"	v	typeref:struct:cmd_group
filesystem_cmd_group_usage	cmds-filesystem.c	/^static const char * const filesystem_cmd_group_usage[] = {$/;"	v	file:
filetype	cmds-check.c	/^	unsigned int filetype:8;$/;"	m	struct:inode_backref	file:
filetype_conversion_table	btrfs-convert.c	/^static u8 filetype_conversion_table[EXT2_FT_MAX] = {$/;"	v	file:
fill_device_from_item	volumes.c	/^static int fill_device_from_item(struct extent_buffer *leaf,$/;"	f	file:
fill_inode_item	mkfs.c	/^static int fill_inode_item(struct btrfs_trans_handle *trans,$/;"	f	file:
fill_mdres_info	btrfs-image.c	/^static int fill_mdres_info(struct mdrestore_struct *mdres,$/;"	f	file:
fill_missing_device	volumes.c	/^static struct btrfs_device *fill_missing_device(u64 devid)$/;"	f	file:
fill_radix	random-test.c	/^static int fill_radix(struct btrfs_root *root, struct radix_tree_root *radix)$/;"	f	file:
fill_tree	dir-test.c	/^static int fill_tree(struct btrfs_trans_handle *trans, struct btrfs_root *root,$/;"	f	file:
fill_tree	random-test.c	/^static int fill_tree(struct btrfs_trans_handle *trans, struct btrfs_root *root,$/;"	f	file:
filter_all_parent_insert	qgroup.c	/^static int filter_all_parent_insert(struct qgroup_lookup *sort_tree,$/;"	f	file:
filter_by_all_parent	qgroup.c	/^static int filter_by_all_parent(struct btrfs_qgroup *bq, u64 data)$/;"	f	file:
filter_by_parent	btrfs-list.c	/^static int filter_by_parent(struct root_info *ri, u64 data)$/;"	f	file:
filter_by_parent	qgroup.c	/^static int filter_by_parent(struct btrfs_qgroup *bq, u64 data)$/;"	f	file:
filter_by_rootid	btrfs-list.c	/^static int filter_by_rootid(struct root_info *ri, u64 data)$/;"	f	file:
filter_cgen_equal	btrfs-list.c	/^static int filter_cgen_equal(struct root_info *ri, u64 data)$/;"	f	file:
filter_cgen_less	btrfs-list.c	/^static int filter_cgen_less(struct root_info *ri, u64 data)$/;"	f	file:
filter_cgen_more	btrfs-list.c	/^static int filter_cgen_more(struct root_info *ri, u64 data)$/;"	f	file:
filter_deleted	btrfs-list.c	/^static int filter_deleted(struct root_info *ri, u64 data)$/;"	f	file:
filter_flags	btrfs-list.c	/^static int filter_flags(struct root_info *ri, u64 flags)$/;"	f	file:
filter_full_path	btrfs-list.c	/^static int filter_full_path(struct root_info *ri, u64 data)$/;"	f	file:
filter_func	btrfs-list.h	/^	btrfs_list_filter_func filter_func;$/;"	m	struct:btrfs_list_filter
filter_func	qgroup.h	/^	btrfs_qgroup_filter_func filter_func;$/;"	m	struct:btrfs_qgroup_filter
filter_gen_equal	btrfs-list.c	/^static int filter_gen_equal(struct root_info  *ri, u64 data)$/;"	f	file:
filter_gen_less	btrfs-list.c	/^static int filter_gen_less(struct root_info *ri, u64 data)$/;"	f	file:
filter_gen_more	btrfs-list.c	/^static int filter_gen_more(struct root_info *ri, u64 data)$/;"	f	file:
filter_qgroup	qgroup.c	/^static int filter_qgroup(struct btrfs_qgroup *bq,$/;"	f	file:
filter_root	btrfs-list.c	/^static int filter_root(struct root_info *ri,$/;"	f	file:
filter_snapshot	btrfs-list.c	/^static int filter_snapshot(struct root_info *ri, u64 data)$/;"	f	file:
filter_topid_equal	btrfs-list.c	/^static int filter_topid_equal(struct root_info *ri, u64 data)$/;"	f	file:
filters	btrfs-list.h	/^	struct btrfs_list_filter filters[0];$/;"	m	struct:btrfs_list_filter_set	typeref:struct:btrfs_list_filter_set::btrfs_list_filter
filters	qgroup.h	/^	struct btrfs_qgroup_filter filters[0];$/;"	m	struct:btrfs_qgroup_filter_set	typeref:struct:btrfs_qgroup_filter_set::btrfs_qgroup_filter
find_and_setup_log_root	disk-io.c	/^static int find_and_setup_log_root(struct btrfs_root *tree_root,$/;"	f	file:
find_and_setup_root	disk-io.c	/^static int find_and_setup_root(struct btrfs_root *tree_root,$/;"	f	file:
find_best_backup_root	disk-io.c	/^static int find_best_backup_root(struct btrfs_super_block *super)$/;"	f	file:
find_chunk_offset	btrfs-corrupt-block.c	/^int find_chunk_offset(struct btrfs_root *root,$/;"	f
find_collision	btrfs-image.c	/^static char *find_collision(struct metadump_struct *md, char *name,$/;"	f	file:
find_data_backref	cmds-check.c	/^static struct data_backref *find_data_backref(struct extent_record *rec,$/;"	f	file:
find_entry	cmds-check.c	/^static struct extent_entry *find_entry(struct list_head *entries,$/;"	f	file:
find_extent_buffer	extent_io.c	/^struct extent_buffer *find_extent_buffer(struct extent_io_tree *tree,$/;"	f
find_first_bit	bitops.h	/^find_first_bit(const unsigned long *addr, unsigned long size)$/;"	f
find_first_block_group	extent-tree.c	/^static int find_first_block_group(struct btrfs_root *root,$/;"	f	file:
find_first_dir	cmds-restore.c	/^static int find_first_dir(struct btrfs_root *root, u64 *objectid)$/;"	f	file:
find_first_extent_bit	extent_io.c	/^int find_first_extent_bit(struct extent_io_tree *tree, u64 start,$/;"	f
find_first_extent_buffer	extent_io.c	/^struct extent_buffer *find_first_extent_buffer(struct extent_io_tree *tree,$/;"	f
find_free_dev_extent	volumes.c	/^static int find_free_dev_extent(struct btrfs_trans_handle *trans,$/;"	f	file:
find_free_extent	extent-tree.c	/^static int noinline find_free_extent(struct btrfs_trans_handle *trans,$/;"	f	file:
find_fsid	volumes.c	/^static struct btrfs_fs_devices *find_fsid(u8 *fsid)$/;"	f	file:
find_good_parent	cmds-send.c	/^static int find_good_parent(struct btrfs_send *s, u64 root_id, u64 *found)$/;"	f	file:
find_most_right_entry	cmds-check.c	/^static struct extent_entry *find_most_right_entry(struct list_head *entries)$/;"	f	file:
find_mount_root	cmds-send.c	/^int find_mount_root(const char *path, char **mount_root)$/;"	f
find_name_in_backref	inode-item.c	/^static int find_name_in_backref(struct btrfs_path *path, const char * name,$/;"	f	file:
find_next_bit	bitops.h	/^find_next_bit(const unsigned long *addr, unsigned long size,$/;"	f
find_next_chunk	volumes.c	/^static int find_next_chunk(struct btrfs_root *root, u64 objectid, u64 *offset)$/;"	f	file:
find_next_devid	volumes.c	/^static int find_next_devid(struct btrfs_root *root, struct btrfs_path *path,$/;"	f	file:
find_next_key	extent-tree.c	/^static int find_next_key(struct btrfs_path *path, struct btrfs_key *key)$/;"	f	file:
find_next_zero_bit	bitops.h	/^find_next_zero_bit(const unsigned long *addr, unsigned long size,$/;"	f
find_num	dir-test.c	/^static int find_num(struct radix_tree_root *root, unsigned long *num_ret,$/;"	f	file:
find_possible_backrefs	cmds-check.c	/^static int find_possible_backrefs(struct btrfs_trans_handle *trans,$/;"	f	file:
find_raid56_stripe_len	volumes.c	/^static u32 find_raid56_stripe_len(u32 data_devices, u32 dev_stripe_target)$/;"	f	file:
find_root	btrfs-find-root.c	/^static int find_root(struct btrfs_root *root)$/;"	f	file:
find_root_gen	btrfs-list.c	/^static u64 find_root_gen(int fd)$/;"	f	file:
find_search_start	extent-tree.c	/^static int noinline find_search_start(struct btrfs_root *root,$/;"	f	file:
find_shared_node	cmds-check.c	/^static struct shared_node *find_shared_node(struct cache_tree *shared,$/;"	f	file:
find_tree_backref	cmds-check.c	/^static struct tree_backref *find_tree_backref(struct extent_record *rec,$/;"	f	file:
finish_current_insert	extent-tree.c	/^static int finish_current_insert(struct btrfs_trans_handle *trans,$/;"	f	file:
finish_subvol	cmds-receive.c	/^static int finish_subvol(struct btrfs_receive *r)$/;"	f	file:
finished	cmds-scrub.c	/^	u64 finished;$/;"	m	struct:scrub_stats	file:
first_block	btrfs-convert.c	/^	u64 first_block;$/;"	m	struct:blk_iterate_data	file:
first_cache_extent	extent-cache.c	/^struct cache_extent *first_cache_extent(struct cache_tree *tree)$/;"	f
first_extent_gap	cmds-check.c	/^	u64 first_extent_gap;$/;"	m	struct:inode_record	file:
first_tick	show-blocks	/^first_tick = ticks[1] * bytes_per_cell * num_cells$/;"	v
fixup_argv0	btrfs.c	/^static void fixup_argv0(char **argv, const char *token)$/;"	f	file:
fixup_chunk_mapping	btrfs-convert.c	/^static int fixup_chunk_mapping(struct btrfs_root *root)$/;"	f	file:
fixup_chunk_tree_block	btrfs-image.c	/^static int fixup_chunk_tree_block(struct mdrestore_struct *mdres,$/;"	f	file:
fixup_extent_refs	cmds-check.c	/^static int fixup_extent_refs(struct btrfs_trans_handle *trans,$/;"	f	file:
fixup_low_keys	ctree.c	/^static int fixup_low_keys(struct btrfs_trans_handle *trans,$/;"	f	file:
fixup_metadump	btrfs-image.c	/^static int fixup_metadump(const char *input, FILE *out, int num_threads,$/;"	f	file:
fixup_offset	btrfs-image.c	/^	int fixup_offset;$/;"	m	struct:mdrestore_struct	file:
flag	mkfs.c	/^	u64 flag;$/;"	m	struct:btrfs_fs_feature	file:
flags	btrfs-list.h	/^	u64 flags;$/;"	m	struct:root_info
flags	btrfsck.h	/^	u64 flags;$/;"	m	struct:block_group_record
flags	ctree.h	/^	__le64 flags;$/;"	m	struct:btrfs_block_group_item
flags	ctree.h	/^	__le64 flags;$/;"	m	struct:btrfs_extent_item
flags	ctree.h	/^	__le64 flags;$/;"	m	struct:btrfs_header
flags	ctree.h	/^	__le64 flags;$/;"	m	struct:btrfs_inode_item
flags	ctree.h	/^	__le64 flags;$/;"	m	struct:btrfs_qgroup_limit_item
flags	ctree.h	/^	__le64 flags;$/;"	m	struct:btrfs_qgroup_status_item
flags	ctree.h	/^	__le64 flags;$/;"	m	struct:btrfs_root_item
flags	ctree.h	/^	__le64 flags;$/;"	m	struct:btrfs_root_item_v0
flags	ctree.h	/^	__le64 flags;$/;"	m	struct:btrfs_super_block
flags	ctree.h	/^	u64 flags;$/;"	m	struct:btrfs_block_group_cache
flags	ctree.h	/^	u64 flags;$/;"	m	struct:btrfs_space_info
flags	extent-tree.c	/^	u64 flags;$/;"	m	struct:pending_extent_op	file:
flags	extent_io.h	/^	int flags;$/;"	m	struct:extent_buffer
flags	ioctl.h	/^	__u64	flags;			\/* in *\/$/;"	m	struct:btrfs_ioctl_received_subvol_args
flags	ioctl.h	/^	__u64	flags;$/;"	m	struct:btrfs_ioctl_quota_rescan_args
flags	ioctl.h	/^	__u64	flags;$/;"	m	struct:btrfs_qgroup_inherit
flags	ioctl.h	/^	__u64	flags;$/;"	m	struct:btrfs_qgroup_limit
flags	ioctl.h	/^	__u64 flags;				\/* in *\/$/;"	m	struct:btrfs_ioctl_scrub_args
flags	ioctl.h	/^	__u64 flags;				\/* in\/out *\/$/;"	m	struct:btrfs_ioctl_balance_args
flags	ioctl.h	/^	__u64 flags;				\/* in\/out *\/$/;"	m	struct:btrfs_ioctl_get_dev_stats
flags	ioctl.h	/^	__u64 flags;			\/* in *\/$/;"	m	struct:btrfs_ioctl_send_args
flags	ioctl.h	/^	__u64 flags;$/;"	m	struct:btrfs_balance_args
flags	ioctl.h	/^	__u64 flags;$/;"	m	struct:btrfs_ioctl_defrag_range_args
flags	ioctl.h	/^	__u64 flags;$/;"	m	struct:btrfs_ioctl_space_info
flags	ioctl.h	/^	__u64 flags;$/;"	m	struct:btrfs_ioctl_vol_args_v2
flags	qgroup.c	/^	u64 flags;	\/*which limits are set*\/$/;"	m	struct:btrfs_qgroup	file:
flush_pending	btrfs-image.c	/^static int flush_pending(struct metadump_struct *md, int done)$/;"	f	file:
fn	commands.h	/^	int (*fn)(int, char **);$/;"	m	struct:cmd_struct
folder	subvolume.h	/^GtkWidget *folder;$/;"	v
folder_subvol_dest	subvolume.h	/^gchar *folder_subvol_dest;\/\/目的子卷路径$/;"	v
foldername	subvolume.h	/^gchar *foldername;\/\/文件目录名$/;"	v
for_each_set_bit	bitops.h	11;"	d
for_each_set_bit_from	bitops.h	17;"	d
force_name	bcp	/^                force_name = os.path.basename(orig_dst)$/;"	v
force_name	bcp	/^        force_name = None$/;"	v
forward_seeks	btrfs-calc-size.c	/^	u64 forward_seeks;$/;"	m	struct:root_stats	file:
found_back_ref	cmds-check.c	/^	unsigned int found_back_ref:1;$/;"	m	struct:root_backref	file:
found_csum_item	cmds-check.c	/^	unsigned int found_csum_item:1;$/;"	m	struct:inode_record	file:
found_dir_index	cmds-check.c	/^	unsigned int found_dir_index:1;$/;"	m	struct:inode_backref	file:
found_dir_index	cmds-check.c	/^	unsigned int found_dir_index:1;$/;"	m	struct:root_backref	file:
found_dir_item	cmds-check.c	/^	unsigned int found_dir_item:1;$/;"	m	struct:inode_backref	file:
found_dir_item	cmds-check.c	/^	unsigned int found_dir_item:1;$/;"	m	struct:inode_record	file:
found_dir_item	cmds-check.c	/^	unsigned int found_dir_item:1;$/;"	m	struct:root_backref	file:
found_extent_tree	cmds-check.c	/^	unsigned int found_extent_tree:1;$/;"	m	struct:extent_backref	file:
found_file_extent	cmds-check.c	/^	unsigned int found_file_extent:1;$/;"	m	struct:inode_record	file:
found_forward_ref	cmds-check.c	/^	unsigned int found_forward_ref:1;$/;"	m	struct:root_backref	file:
found_inode_item	cmds-check.c	/^	unsigned int found_inode_item:1;$/;"	m	struct:inode_record	file:
found_inode_ref	cmds-check.c	/^	unsigned int found_inode_ref:1;$/;"	m	struct:inode_backref	file:
found_link	cmds-check.c	/^	u32 found_link;$/;"	m	struct:inode_record	file:
found_old_backref	cmds-check.c	/^static int found_old_backref = 0;$/;"	v	file:
found_rec	cmds-check.c	/^	unsigned int found_rec;$/;"	m	struct:extent_record	file:
found_ref	cmds-check.c	/^	u32 found_ref;$/;"	m	struct:data_backref	file:
found_ref	cmds-check.c	/^	u32 found_ref;$/;"	m	struct:root_record	file:
found_ref	cmds-check.c	/^	unsigned int found_ref:1;$/;"	m	struct:extent_backref	file:
found_root_item	cmds-check.c	/^	unsigned int found_root_item:1;$/;"	m	struct:root_record	file:
found_size	cmds-check.c	/^	u64 found_size;$/;"	m	struct:inode_record	file:
frame_main_box	subvolume.h	/^GtkWidget *frame_main_box; \/\/子卷创建面板的主盒子$/;"	v
free_all_extent_backrefs	cmds-check.c	/^static int free_all_extent_backrefs(struct extent_record *rec)$/;"	f	file:
free_block_group_record	cmds-check.c	/^static void free_block_group_record(struct cache_extent *cache)$/;"	f	file:
free_block_group_tree	cmds-check.c	/^void free_block_group_tree(struct block_group_tree *tree)$/;"	f
free_cache_extent	extent-cache.h	/^typedef void (*free_cache_extent)(struct cache_extent *pe);$/;"	t
free_chunk_cache_tree	cmds-check.c	/^void free_chunk_cache_tree(struct cache_tree *chunk_cache)$/;"	f
free_chunk_record	cmds-check.c	/^static void free_chunk_record(struct cache_extent *cache)$/;"	f	file:
free_corrupt_block	cmds-check.c	/^static void free_corrupt_block(struct cache_extent *cache)$/;"	f	file:
free_device_extent_record	cmds-check.c	/^static void free_device_extent_record(struct cache_extent *cache)$/;"	f	file:
free_device_extent_tree	cmds-check.c	/^void free_device_extent_tree(struct device_extent_tree *tree)$/;"	f
free_device_record	cmds-check.c	/^static void free_device_record(struct rb_node *node)$/;"	f	file:
free_extent	ctree.h	/^       int (*free_extent)(struct btrfs_root *root, u64 bytenr,$/;"	m	struct:btrfs_extent_ops
free_extent_buffer	extent_io.c	/^void free_extent_buffer(struct extent_buffer *eb)$/;"	f
free_extent_cache	extent-cache.c	/^static void free_extent_cache(struct cache_extent *pe)$/;"	f	file:
free_extent_cache_tree	extent-cache.c	/^void free_extent_cache_tree(struct cache_tree *tree)$/;"	f
free_extent_hook	cmds-check.c	/^static int free_extent_hook(struct btrfs_trans_handle *trans,$/;"	f	file:
free_extent_hook	ctree.h	/^	int (*free_extent_hook)(struct btrfs_trans_handle *trans,$/;"	m	struct:btrfs_fs_info
free_extent_record	chunk-recover.c	/^static void free_extent_record(struct cache_extent *cache)$/;"	f	file:
free_extent_record	cmds-chunk.c	/^static void free_extent_record(struct cache_extent *cache)$/;"	f	file:
free_extent_record_cache	cmds-check.c	/^static void free_extent_record_cache(struct btrfs_fs_info *fs_info,$/;"	f	file:
free_extent_state_func	extent_io.c	/^static void free_extent_state_func(struct cache_extent *cache)$/;"	f	file:
free_extents	free-space-cache.h	/^	int free_extents;$/;"	m	struct:btrfs_free_space_ctl
free_history	cmds-scrub.c	/^static void free_history(struct scrub_file_record **last_scrubs)$/;"	f	file:
free_inode_ptr	cmds-check.c	/^static void free_inode_ptr(struct cache_extent *cache)$/;"	f	file:
free_inode_rec	cmds-check.c	/^static void free_inode_rec(struct inode_record *rec)$/;"	f	file:
free_map_lookup	disk-io.c	/^static void free_map_lookup(struct cache_extent *ce)$/;"	f	file:
free_namelist	mkfs.c	/^static void free_namelist(struct direct **files, int count)$/;"	f	file:
free_recover_control	chunk-recover.c	/^static void free_recover_control(struct recover_control *rc)$/;"	f	file:
free_recover_control	cmds-chunk.c	/^static void free_recover_control(struct recover_control *rc)$/;"	f	file:
free_recover_superblock	super-recover.c	/^void free_recover_superblock(struct btrfs_recover_superblock *recover)$/;"	f	file:
free_root_record	cmds-check.c	/^static void free_root_record(struct cache_extent *cache)$/;"	f	file:
free_seen_fsid	cmds-filesystem.c	/^static void free_seen_fsid(void)$/;"	f	file:
free_some_buffers	extent_io.c	/^static int free_some_buffers(struct extent_io_tree *tree)$/;"	f	file:
free_space	free-space-cache.h	/^	u64 free_space;$/;"	m	struct:btrfs_free_space_ctl
free_space_cache	ctree.h	/^	struct extent_io_tree free_space_cache;$/;"	m	struct:btrfs_fs_info	typeref:struct:btrfs_fs_info::extent_io_tree
free_space_ctl	ctree.h	/^	struct btrfs_free_space_ctl *free_space_ctl;$/;"	m	struct:btrfs_block_group_cache	typeref:struct:btrfs_block_group_cache::btrfs_free_space_ctl
free_space_offset	free-space-cache.h	/^	struct rb_root free_space_offset;$/;"	m	struct:btrfs_free_space_ctl	typeref:struct:btrfs_free_space_ctl::rb_root
fs_chunk	btrfs-image.c	/^struct fs_chunk {$/;"	s	file:
fs_devices	chunk-recover.c	/^	struct btrfs_fs_devices *fs_devices;$/;"	m	struct:recover_control	typeref:struct:recover_control::btrfs_fs_devices	file:
fs_devices	cmds-chunk.c	/^	struct btrfs_fs_devices *fs_devices;$/;"	m	struct:recover_control	typeref:struct:recover_control::btrfs_fs_devices	file:
fs_devices	ctree.h	/^	struct btrfs_fs_devices *fs_devices;$/;"	m	struct:btrfs_fs_info	typeref:struct:btrfs_fs_info::btrfs_fs_devices
fs_devices	super-recover.c	/^	struct btrfs_fs_devices *fs_devices;$/;"	m	struct:btrfs_recover_superblock	typeref:struct:btrfs_recover_superblock::btrfs_fs_devices	file:
fs_devices	volumes.h	/^	struct btrfs_fs_devices *fs_devices;$/;"	m	struct:btrfs_device	typeref:struct:btrfs_device::btrfs_fs_devices
fs_info	ctree.h	/^	struct btrfs_fs_info *fs_info;$/;"	m	struct:btrfs_root	typeref:struct:btrfs_root::btrfs_fs_info
fs_mutex	ctree.h	/^	struct mutex fs_mutex;$/;"	m	struct:btrfs_fs_info	typeref:struct:btrfs_fs_info::mutex
fs_name	cmds-restore.c	/^static char fs_name[4096];$/;"	v	file:
fs_root	btrfs-calc-size.c	/^struct fs_root {$/;"	s	file:
fs_root	ctree.h	/^	__le64 fs_root;$/;"	m	struct:btrfs_root_backup
fs_root	ctree.h	/^	struct btrfs_root *fs_root;$/;"	m	struct:btrfs_fs_info	typeref:struct:btrfs_fs_info::btrfs_root
fs_root_gen	ctree.h	/^	__le64 fs_root_gen;$/;"	m	struct:btrfs_root_backup
fs_root_level	ctree.h	/^	u8 fs_root_level;$/;"	m	struct:btrfs_root_backup
fs_root_objectid	cmds-check.c	/^static int fs_root_objectid(u64 objectid)$/;"	f	file:
fs_root_tree	ctree.h	/^	struct rb_root fs_root_tree;$/;"	m	struct:btrfs_fs_info	typeref:struct:btrfs_fs_info::rb_root
fsck_extent_cache	ctree.h	/^	struct cache_tree *fsck_extent_cache;$/;"	m	struct:btrfs_fs_info	typeref:struct:btrfs_fs_info::cache_tree
fsid	btrfs-image.c	/^	u8 fsid[BTRFS_FSID_SIZE];$/;"	m	struct:mdrestore_struct	file:
fsid	cmds-filesystem.c	/^	u8 fsid[BTRFS_FSID_SIZE];$/;"	m	struct:seen_fsid	file:
fsid	cmds-scrub.c	/^	u8 fsid[BTRFS_FSID_SIZE];$/;"	m	struct:scrub_file_record	file:
fsid	ctree.h	/^	u8 fsid[BTRFS_FSID_SIZE];    \/* FS specific uuid *\/$/;"	m	struct:btrfs_super_block
fsid	ctree.h	/^	u8 fsid[BTRFS_FSID_SIZE]; \/* FS specific uuid *\/$/;"	m	struct:btrfs_header
fsid	ctree.h	/^	u8 fsid[BTRFS_FSID_SIZE];$/;"	m	struct:btrfs_fs_info
fsid	ctree.h	/^	u8 fsid[BTRFS_UUID_SIZE];$/;"	m	struct:btrfs_dev_item
fsid	ioctl.h	/^	__u8 fsid[BTRFS_FSID_SIZE];		\/* out *\/$/;"	m	struct:btrfs_ioctl_fs_info_args
fsid	volumes.h	/^	u8 fsid[BTRFS_FSID_SIZE]; \/* FS specific uuid *\/$/;"	m	struct:btrfs_fs_devices
fspath	ioctl.h	/^	__u64				fspath;		\/* out *\/$/;"	m	struct:btrfs_ioctl_ino_path_args
ftw_add_entry_size	mkfs.c	/^static int ftw_add_entry_size(const char *fpath, const struct stat *st,$/;"	f	file:
full	ctree.h	/^	int full;$/;"	m	struct:btrfs_space_info
full_backref	cmds-check.c	/^	unsigned int full_backref:1;$/;"	m	struct:extent_backref	file:
full_path	btrfs-list.h	/^	char *full_path;$/;"	m	struct:root_info
full_path_to_needed	btrfs-list.c	/^static void full_path_to_needed(char path[],int i){$/;"	f	file:
full_subvol_path	cmds-receive.c	/^	char *full_subvol_path;$/;"	m	struct:btrfs_receive	file:
full_subvol_path	send-test.c	/^	char *full_subvol_path;$/;"	m	struct:recv_args	file:
g_verbose	cmds-receive.c	/^static int g_verbose = 0;$/;"	v	file:
g_verbose	cmds-send.c	/^static int g_verbose = 0;$/;"	v	file:
gen	btrfs-list.h	/^	u64 gen;$/;"	m	struct:root_info
generate_garbage	btrfs-image.c	/^static char *generate_garbage(u32 name_len)$/;"	f	file:
generate_u64	btrfs-corrupt-block.c	/^static u64 generate_u64(u64 orig)$/;"	f	file:
generation	btrfsck.h	/^	u64 generation;$/;"	m	struct:block_group_record
generation	btrfsck.h	/^	u64 generation;$/;"	m	struct:chunk_record
generation	btrfsck.h	/^	u64 generation;$/;"	m	struct:device_extent_record
generation	btrfsck.h	/^	u64 generation;$/;"	m	struct:device_record
generation	chunk-recover.c	/^	u64 generation;$/;"	m	struct:extent_record	file:
generation	chunk-recover.c	/^	u64 generation;$/;"	m	struct:recover_control	file:
generation	cmds-check.c	/^	u64 generation;$/;"	m	struct:extent_record	file:
generation	cmds-chunk.c	/^	u64 generation;$/;"	m	struct:extent_record	file:
generation	cmds-chunk.c	/^	u64 generation;$/;"	m	struct:recover_control	file:
generation	ctree.h	/^	__le64 generation;$/;"	m	struct:btrfs_dev_item
generation	ctree.h	/^	__le64 generation;$/;"	m	struct:btrfs_extent_item
generation	ctree.h	/^	__le64 generation;$/;"	m	struct:btrfs_extent_ref_v0
generation	ctree.h	/^	__le64 generation;$/;"	m	struct:btrfs_file_extent_item
generation	ctree.h	/^	__le64 generation;$/;"	m	struct:btrfs_free_space_header
generation	ctree.h	/^	__le64 generation;$/;"	m	struct:btrfs_header
generation	ctree.h	/^	__le64 generation;$/;"	m	struct:btrfs_inode_item
generation	ctree.h	/^	__le64 generation;$/;"	m	struct:btrfs_key_ptr
generation	ctree.h	/^	__le64 generation;$/;"	m	struct:btrfs_qgroup_info_item
generation	ctree.h	/^	__le64 generation;$/;"	m	struct:btrfs_qgroup_status_item
generation	ctree.h	/^	__le64 generation;$/;"	m	struct:btrfs_root_item
generation	ctree.h	/^	__le64 generation;$/;"	m	struct:btrfs_root_item_v0
generation	ctree.h	/^	__le64 generation;$/;"	m	struct:btrfs_super_block
generation	ctree.h	/^	u64 generation;$/;"	m	struct:btrfs_fs_info
generation	qgroup.c	/^	u64 generation;$/;"	m	struct:btrfs_qgroup	file:
generation_v2	ctree.h	/^	__le64 generation_v2;$/;"	m	struct:btrfs_root_item
generic_bin_search	ctree.c	/^static int generic_bin_search(struct extent_buffer *eb, unsigned long p,$/;"	f	file:
get_btrfs_mount	utils.c	/^int get_btrfs_mount(const char *dev, char *mp, size_t mp_size)$/;"	f
get_color	btrfs-fragments.c	/^get_color(struct btrfs_extent_item *item, int len)$/;"	f	file:
get_cpu_var	kerncompat.h	39;"	d
get_device_info	utils.c	/^static int get_device_info(int fd, u64 devid,$/;"	f	file:
get_df	cmds-filesystem.c	/^static int get_df(int fd, struct btrfs_ioctl_space_args **sargs_ret)$/;"	f	file:
get_fs_info	utils.c	/^int get_fs_info(char *path, struct btrfs_ioctl_fs_info_args *fi_args,$/;"	f
get_inode_backref	cmds-check.c	/^static struct inode_backref *get_inode_backref(struct inode_record *rec,$/;"	f	file:
get_inode_rec	cmds-check.c	/^static struct inode_record *get_inode_rec(struct cache_tree *inode_cache,$/;"	f	file:
get_label	utils.c	/^int get_label(const char *btrfs_dev)$/;"	f
get_label_mounted	utils.c	/^int get_label_mounted(const char *mount_path, char *labelp)$/;"	f
get_label_unmounted	utils.c	/^static int get_label_unmounted(const char *dev)$/;"	f	file:
get_parent	cmds-send.c	/^static struct subvol_info *get_parent(struct btrfs_send *s, u64 root_id)$/;"	f	file:
get_root_backref	cmds-check.c	/^static struct root_backref *get_root_backref(struct root_record *rec,$/;"	f	file:
get_root_id	cmds-send.c	/^static int get_root_id(struct btrfs_send *s, const char *path, u64 *root_id)$/;"	f	file:
get_root_rec	cmds-check.c	/^static struct root_record *get_root_rec(struct cache_tree *root_cache,$/;"	f	file:
get_snaps	cmds-restore.c	/^static int get_snaps = 0;$/;"	v	file:
get_state_private	extent_io.c	/^int get_state_private(struct extent_io_tree *tree, u64 start, u64 *private)$/;"	f
get_subvol_name	cmds-send.c	/^char *get_subvol_name(char *mnt, char *full_path)$/;"	f
get_unaligned_le16	kerncompat.h	286;"	d
get_unaligned_le32	kerncompat.h	288;"	d
get_unaligned_le64	kerncompat.h	290;"	d
get_unaligned_le8	kerncompat.h	284;"	d
get_xattrs	cmds-restore.c	/^static int get_xattrs = 0;$/;"	v	file:
gfp_mask	radix-tree.h	/^	gfp_t			gfp_mask;$/;"	m	struct:radix_tree_root
gfp_t	kerncompat.h	38;"	d
gid	ctree.h	/^	__le32 gid;$/;"	m	struct:btrfs_inode_item
global_total_size	mkfs.c	/^static u64 global_total_size;$/;"	v	file:
good_chunks	chunk-recover.c	/^	struct list_head good_chunks;$/;"	m	struct:recover_control	typeref:struct:recover_control::list_head	file:
good_chunks	cmds-chunk.c	/^	struct list_head good_chunks;$/;"	m	struct:recover_control	typeref:struct:recover_control::list_head	file:
good_supers	super-recover.c	/^	struct list_head good_supers;$/;"	m	struct:btrfs_recover_superblock	typeref:struct:btrfs_recover_superblock::list_head	file:
group_profile_str	cmds-filesystem.c	/^static char *group_profile_str(u64 flag)$/;"	f	file:
group_type_str	cmds-filesystem.c	/^static char *group_type_str(u64 flag)$/;"	f	file:
gui_objects	Makefile	/^gui_objects =   snapshot-scan.o scan-filesystem.o subvolume.o$/;"	m
handle_command_group	btrfs.c	/^int handle_command_group(const struct cmd_group *grp, int argc,$/;"	f
handle_help_options_next_level	btrfs.c	/^static void handle_help_options_next_level(const struct cmd_struct *cmd,$/;"	f	file:
handle_options	btrfs.c	/^static int handle_options(int *argc, char ***argv)$/;"	f	file:
handle_subvol_create	subvolume_bak.c	/^void handle_subvol_create(GtkWidget *widget,gpointer data){$/;"	f
handle_subvol_delete	subvolume_bak.c	/^void handle_subvol_delete(GtkMenuItem *widget,gpointer data){$/;"	f
has_name	btrfs-image.c	/^static int has_name(struct btrfs_key *key)$/;"	f	file:
hash_extent_data_ref	extent-tree.c	/^static u64 hash_extent_data_ref(u64 root_objectid, u64 owner, u64 offset)$/;"	f	file:
hash_extent_data_ref_item	extent-tree.c	/^static u64 hash_extent_data_ref_item(struct extent_buffer *leaf,$/;"	f	file:
header	btrfs-image.c	/^	struct meta_cluster_header header;$/;"	m	struct:meta_cluster	typeref:struct:meta_cluster::meta_cluster_header	file:
header	ctree.h	/^	struct btrfs_header header;$/;"	m	struct:btrfs_leaf	typeref:struct:btrfs_leaf::btrfs_header
header	ctree.h	/^	struct btrfs_header header;$/;"	m	struct:btrfs_node	typeref:struct:btrfs_node::btrfs_header
headers	Makefile	/^headers = $(libbtrfs_headers)$/;"	m
height	radix-tree.h	/^	unsigned int		height;$/;"	m	struct:radix_tree_root
help_ambiguous_token	help.c	/^void help_ambiguous_token(const char *arg, const struct cmd_group *grp)$/;"	f
help_command_group	help.c	/^void help_command_group(const struct cmd_group *grp, int argc, char **argv)$/;"	f
help_unknown_token	help.c	/^void help_unknown_token(const char *arg, const struct cmd_group *grp)$/;"	f
hidden	commands.h	/^	int hidden;$/;"	m	struct:cmd_struct
highest_bytenr	btrfs-calc-size.c	/^	u64 highest_bytenr;$/;"	m	struct:root_stats	file:
highest_inode	ctree.h	/^	u64 highest_inode;$/;"	m	struct:btrfs_root
honor_end_cmd	cmds-receive.c	/^	int honor_end_cmd;$/;"	m	struct:btrfs_receive	file:
hweight32	bitops.h	/^static inline unsigned int hweight32(unsigned int w)$/;"	f
hweight64	bitops.h	/^static inline unsigned long hweight64(__u64 w)$/;"	f
hweight_long	bitops.h	/^static inline unsigned long hweight_long(unsigned long w)$/;"	f
i	cmds-scrub.c	/^	int i;$/;"	m	struct:scrub_fs_stat	file:
ignore_errors	cmds-restore.c	/^static int ignore_errors = 0;$/;"	v	file:
imode	cmds-check.c	/^	u32 imode;$/;"	m	struct:inode_record	file:
imode_to_type	cmds-check.c	/^static u8 imode_to_type(u32 imode)$/;"	f	file:
in	btrfs-image.c	/^	FILE *in;$/;"	m	struct:mdrestore_struct	file:
incdir	Makefile	/^incdir = $(prefix)\/include\/btrfs$/;"	m
incompat_flags	ctree.h	/^	__le64 incompat_flags;$/;"	m	struct:btrfs_super_block
index	cmds-check.c	/^	u64 index;$/;"	m	struct:inode_backref	file:
index	cmds-check.c	/^	u64 index;$/;"	m	struct:root_backref	file:
index	ctree.h	/^	__le64 index;$/;"	m	struct:btrfs_inode_extref
index	ctree.h	/^	__le64 index;$/;"	m	struct:btrfs_inode_ref
index	free-space-cache.c	/^	int index;$/;"	m	struct:io_ctl	file:
index	kerncompat.h	/^	unsigned long index;$/;"	m	struct:page
index_cnt	btrfs-convert.c	/^	u64 index_cnt;$/;"	m	struct:dir_iterate_data	file:
index_cnt	mkfs.c	/^static u64 index_cnt = 2;$/;"	v	file:
info	btrfs-image.c	/^	struct btrfs_fs_info *info;$/;"	m	struct:mdrestore_struct	typeref:struct:mdrestore_struct::btrfs_fs_info	file:
info_file	btrfs-map-logical.c	/^static FILE *info_file;$/;"	v	file:
info_level	cmds-check.c	/^	u8 info_level;$/;"	m	struct:extent_record	file:
info_objectid	cmds-check.c	/^	u64 info_objectid;$/;"	m	struct:extent_record	file:
infostr	commands.h	/^	const char *infostr;$/;"	m	struct:cmd_group
init_btrfs	btrfs-convert.c	/^static int init_btrfs(struct btrfs_root *root)$/;"	f	file:
init_colors	btrfs-fragments.c	/^init_colors(gdImagePtr im, int *colors)$/;"	f	file:
init_fs_stat	cmds-scrub.c	/^static void init_fs_stat(struct scrub_fs_stat *fs_stat)$/;"	f	file:
init_recover_control	chunk-recover.c	/^static void init_recover_control(struct recover_control *rc, int verbose,$/;"	f	file:
init_recover_control	cmds-chunk.c	/^static void init_recover_control(struct recover_control *rc, int verbose,$/;"	f	file:
init_recover_superblock	super-recover.c	/^void init_recover_superblock(struct btrfs_recover_superblock *recover)$/;"	f	file:
init_root_path	cmds-send.c	/^static int init_root_path(struct btrfs_send *s, const char *subvol)$/;"	f	file:
initial_inode_init	dir-test.c	/^static void initial_inode_init(struct btrfs_root *root,$/;"	f	file:
ino	cmds-check.c	/^	u64 ino;$/;"	m	struct:inode_record	file:
ino_resolve	btrfs-list.c	/^static char *ino_resolve(int fd, u64 ino, u64 *cache_dirid, char **cache_name)$/;"	f	file:
inode	btrfs-convert.c	/^	struct btrfs_inode_item *inode;$/;"	m	struct:blk_iterate_data	typeref:struct:blk_iterate_data::btrfs_inode_item	file:
inode	btrfs-convert.c	/^	struct btrfs_inode_item *inode;$/;"	m	struct:dir_iterate_data	typeref:struct:dir_iterate_data::btrfs_inode_item	file:
inode	ctree.h	/^	struct btrfs_inode_item inode;$/;"	m	struct:btrfs_root_item	typeref:struct:btrfs_root_item::btrfs_inode_item
inode	ctree.h	/^	struct btrfs_inode_item inode;$/;"	m	struct:btrfs_root_item_v0	typeref:struct:btrfs_root_item_v0::btrfs_inode_item
inode_backref	cmds-check.c	/^struct inode_backref {$/;"	s	file:
inode_cache	cmds-check.c	/^	struct cache_tree inode_cache;$/;"	m	struct:shared_node	typeref:struct:shared_node::cache_tree	file:
inode_record	cmds-check.c	/^struct inode_record {$/;"	s	file:
inodes	ioctl.h	/^	__u64				inodes;$/;"	m	struct:btrfs_ioctl_logical_ino_args
ins_one	dir-test.c	/^static int ins_one(struct btrfs_trans_handle *trans, struct btrfs_root *root,$/;"	f	file:
ins_one	random-test.c	/^static int ins_one(struct btrfs_trans_handle *trans, struct btrfs_root *root,$/;"	f	file:
insert_block_group_record	cmds-check.c	/^int insert_block_group_record(struct block_group_tree *tree,$/;"	f
insert_cache_extent	extent-cache.c	/^int insert_cache_extent(struct cache_tree *tree, struct cache_extent *pe)$/;"	f
insert_cache_extent2	extent-cache.c	/^int insert_cache_extent2(struct cache_tree *tree, struct cache_extent *pe)$/;"	f
insert_device_extent_record	cmds-check.c	/^int insert_device_extent_record(struct device_extent_tree *tree,$/;"	f
insert_dup	dir-test.c	/^static int insert_dup(struct btrfs_trans_handle *trans, struct btrfs_root$/;"	f	file:
insert_dup	random-test.c	/^static int insert_dup(struct btrfs_trans_handle *trans, struct btrfs_root$/;"	f	file:
insert_extent_backref	extent-tree.c	/^static int insert_extent_backref(struct btrfs_trans_handle *trans,$/;"	f	file:
insert_extent_data_ref	extent-tree.c	/^static noinline int insert_extent_data_ref(struct btrfs_trans_handle *trans,$/;"	f	file:
insert_inline_extent_backref	extent-tree.c	/^static int insert_inline_extent_backref(struct btrfs_trans_handle *trans,$/;"	f	file:
insert_new_root	ctree.c	/^static int noinline insert_new_root(struct btrfs_trans_handle *trans,$/;"	f	file:
insert_ptr	ctree.c	/^static int insert_ptr(struct btrfs_trans_handle *trans, struct btrfs_root$/;"	f	file:
insert_state	extent_io.c	/^static int insert_state(struct extent_io_tree *tree,$/;"	f	file:
insert_tree_block_ref	extent-tree.c	/^static noinline int insert_tree_block_ref(struct btrfs_trans_handle *trans,$/;"	f	file:
insert_with_overflow	dir-item.c	/^static struct btrfs_dir_item *insert_with_overflow(struct btrfs_trans_handle$/;"	f	file:
inspect_cmd_group	cmds-inspect.c	/^const struct cmd_group inspect_cmd_group = {$/;"	v	typeref:struct:cmd_group
inspect_cmd_group_usage	cmds-inspect.c	/^static const char * const inspect_cmd_group_usage[] = {$/;"	v	file:
internal_nodes	radix-tree.c	/^static int internal_nodes = 0;$/;"	v	file:
intersect_with_sb	btrfs-convert.c	/^static int intersect_with_sb(u64 bytenr, u64 num_bytes)$/;"	f	file:
inum	ioctl.h	/^	__u64				inum;		\/* in *\/$/;"	m	struct:btrfs_ioctl_ino_path_args
inum	mkfs.c	/^	ino_t inum;$/;"	m	struct:directory_name_entry	file:
io_align	btrfsck.h	/^	u32 io_align;$/;"	m	struct:chunk_record
io_align	ctree.h	/^	__le32 io_align;$/;"	m	struct:btrfs_chunk
io_align	ctree.h	/^	__le32 io_align;$/;"	m	struct:btrfs_dev_item
io_align	volumes.h	/^	int io_align;$/;"	m	struct:map_lookup
io_align	volumes.h	/^	u32 io_align;$/;"	m	struct:btrfs_device
io_ctl	free-space-cache.c	/^struct io_ctl {$/;"	s	file:
io_ctl_check_crc	free-space-cache.c	/^static int io_ctl_check_crc(struct io_ctl *io_ctl, int index)$/;"	f	file:
io_ctl_check_generation	free-space-cache.c	/^static int io_ctl_check_generation(struct io_ctl *io_ctl, u64 generation)$/;"	f	file:
io_ctl_drop_pages	free-space-cache.c	/^static void io_ctl_drop_pages(struct io_ctl *io_ctl)$/;"	f	file:
io_ctl_free	free-space-cache.c	/^static void io_ctl_free(struct io_ctl *io_ctl)$/;"	f	file:
io_ctl_init	free-space-cache.c	/^static int io_ctl_init(struct io_ctl *io_ctl, u64 size, u64 ino,$/;"	f	file:
io_ctl_map_page	free-space-cache.c	/^static void io_ctl_map_page(struct io_ctl *io_ctl, int clear)$/;"	f	file:
io_ctl_prepare_pages	free-space-cache.c	/^static int io_ctl_prepare_pages(struct io_ctl *io_ctl, struct btrfs_root *root,$/;"	f	file:
io_ctl_read_bitmap	free-space-cache.c	/^static int io_ctl_read_bitmap(struct io_ctl *io_ctl,$/;"	f	file:
io_ctl_read_entry	free-space-cache.c	/^static int io_ctl_read_entry(struct io_ctl *io_ctl,$/;"	f	file:
io_ctl_unmap_page	free-space-cache.c	/^static void io_ctl_unmap_page(struct io_ctl *io_ctl)$/;"	f	file:
io_send	send-test.c	/^struct btrfs_ioctl_send_args io_send = {0, };$/;"	v	typeref:struct:btrfs_ioctl_send_args
io_width	btrfsck.h	/^	u32 io_width;$/;"	m	struct:chunk_record
io_width	ctree.h	/^	__le32 io_width;$/;"	m	struct:btrfs_chunk
io_width	ctree.h	/^	__le32 io_width;$/;"	m	struct:btrfs_dev_item
io_width	volumes.h	/^	int io_width;$/;"	m	struct:map_lookup
io_width	volumes.h	/^	u32 io_width;$/;"	m	struct:btrfs_device
ioctl_errno	cmds-scrub.c	/^	int ioctl_errno;$/;"	m	struct:scrub_progress	file:
ioctls	ioctl-test.c	/^static unsigned long ioctls[] = {$/;"	v	file:
ioprio_class	cmds-scrub.c	/^	int ioprio_class;$/;"	m	struct:scrub_progress	file:
ioprio_classdata	cmds-scrub.c	/^	int ioprio_classdata;$/;"	m	struct:scrub_progress	file:
is_block_device	utils.c	/^int is_block_device(const char *path)$/;"	f
is_child_root	cmds-check.c	/^static int is_child_root(struct btrfs_root *root, u64 parent_root_id,$/;"	f	file:
is_data	cmds-check.c	/^	unsigned int is_data:1;$/;"	m	struct:extent_backref	file:
is_descending	btrfs-list.h	/^	int is_descending;$/;"	m	struct:btrfs_list_comparer
is_descending	qgroup.h	/^	int is_descending;$/;"	m	struct:btrfs_qgroup_comparer
is_existing_blk_or_reg_file	utils.c	/^static int is_existing_blk_or_reg_file(const char* filename)$/;"	f	file:
is_extent_record_in_device_extent	chunk-recover.c	/^static int is_extent_record_in_device_extent(struct extent_record *er,$/;"	f	file:
is_extent_record_in_device_extent	cmds-chunk.c	/^static int is_extent_record_in_device_extent(struct extent_record *er,$/;"	f	file:
is_extent_tree_record	cmds-check.c	/^static int is_extent_tree_record(struct extent_record *rec)$/;"	f	file:
is_loop_device	utils.c	/^static int is_loop_device (const char* device) {$/;"	f	file:
is_mount_point	utils.c	/^int is_mount_point(const char *path)$/;"	f
is_numerical	cmds-replace.c	/^static int is_numerical(const char *str)$/;"	f	file:
is_parity_stripe	volumes.c	54;"	d	file:
is_root	cmds-check.c	/^	unsigned int is_root:1;$/;"	m	struct:extent_record	file:
is_same_blk_file	utils.c	/^static int is_same_blk_file(const char* a, const char* b)$/;"	f	file:
is_same_loop_file	utils.c	/^static int is_same_loop_file(const char* a, const char* b)$/;"	f	file:
is_scrub_running_on_fs	cmds-scrub.c	/^static int is_scrub_running_on_fs(struct btrfs_ioctl_fs_info_args *fi_args,$/;"	f	file:
is_ssd	mkfs.c	/^static int is_ssd(const char *file)$/;"	f	file:
is_subvol_ro	cmds-send.c	/^static int is_subvol_ro(struct btrfs_send *s, char *subvol)$/;"	f	file:
is_super_block_address	chunk-recover.c	/^static inline int is_super_block_address(u64 offset)$/;"	f	file:
is_super_block_address	cmds-chunk.c	/^static inline int is_super_block_address(u64 offset)$/;"	f	file:
is_swap_device	utils.c	/^static int is_swap_device(const char *file)$/;"	f	file:
is_tree_block	btrfs-image.c	/^static int is_tree_block(struct btrfs_root *extent_root,$/;"	f	file:
is_vol_small	utils.c	/^int is_vol_small(char *file)$/;"	f
isize	cmds-check.c	/^	u64 isize;$/;"	m	struct:inode_record	file:
isoctal	utils.c	1698;"	d	file:
item	ctree.h	/^	struct btrfs_block_group_item item;$/;"	m	struct:btrfs_block_group_cache	typeref:struct:btrfs_block_group_cache::btrfs_block_group_item
item_factory	main.c	/^GtkItemFactory *item_factory;\/\/菜单项$/;"	v
item_subvol_list	subvolume.h	/^GtkWidget *item_subvol_list[ACTIVE_SIZE][ACTIVE_SIZE];\/\/左侧列表的标签$/;"	v
itemlist_box	main.c	/^GtkWidget *box,*itemlist_box,*contents_box;\/\/主容器，左边的列表容器，右边的显示区域容器$/;"	v
items	btrfs-image.c	/^	struct meta_cluster_item items[];$/;"	m	struct:meta_cluster	typeref:struct:meta_cluster::meta_cluster_item	file:
items	ctree.h	/^	struct btrfs_item items[];$/;"	m	struct:btrfs_leaf	typeref:struct:btrfs_leaf::btrfs_item
iter	bcp	/^    iter = os.walk(src, topdown=True)$/;"	v
iter	show-blocks	/^    def iter(fh, delimiter, converters):$/;"	f	function:loaddata
keep_locks	ctree.h	/^	unsigned int keep_locks:1;$/;"	m	struct:btrfs_path
keep_running	dir-test.c	/^int keep_running = 1;$/;"	v
keep_running	random-test.c	/^int keep_running = 1;$/;"	v
key	btrfs-calc-size.c	/^	struct btrfs_key key;$/;"	m	struct:fs_root	typeref:struct:fs_root::btrfs_key	file:
key	ctree.h	/^	struct btrfs_disk_key key;$/;"	m	struct:btrfs_item	typeref:struct:btrfs_item::btrfs_disk_key
key	ctree.h	/^	struct btrfs_disk_key key;$/;"	m	struct:btrfs_key_ptr	typeref:struct:btrfs_key_ptr::btrfs_disk_key
key	ctree.h	/^	struct btrfs_disk_key key;$/;"	m	struct:btrfs_tree_block_info	typeref:struct:btrfs_tree_block_info::btrfs_disk_key
key	ctree.h	/^	struct btrfs_key key;$/;"	m	struct:btrfs_block_group_cache	typeref:struct:btrfs_block_group_cache::btrfs_key
key	extent-tree.c	/^	struct btrfs_disk_key key;$/;"	m	struct:pending_extent_op	typeref:struct:pending_extent_op::btrfs_disk_key	file:
key	ioctl.h	/^	struct btrfs_ioctl_search_key key;$/;"	m	struct:btrfs_ioctl_search_args	typeref:struct:btrfs_ioctl_search_args::btrfs_ioctl_search_key
key	repair.h	/^	struct btrfs_key key;$/;"	m	struct:btrfs_corrupt_block	typeref:struct:btrfs_corrupt_block::btrfs_key
kfree	kerncompat.h	234;"	d
kmalloc	kerncompat.h	231;"	d
kstrdup	kerncompat.h	233;"	d
kzalloc	kerncompat.h	232;"	d
label	ctree.h	/^	char label[BTRFS_LABEL_SIZE];$/;"	m	struct:btrfs_super_block
label	volumes.h	/^	char *label;$/;"	m	struct:btrfs_device
label_basep_snap	snapshot-scan.h	/^GtkWidget *label_basep_snap;$/;"	v
label_desp_snap	snapshot-scan.h	/^GtkWidget *label_desp_snap;$/;"	v
label_dest_folder	subvolume.h	/^GtkWidget *label_dest_folder;\/\/目标子卷$/;"	v
label_dest_subvol	subvolume.h	/^GtkWidget *label_dest_subvol;$/;"	v
label_file_change_info	subvolume.h	/^GtkWidget *label_file_change_info[ACTIVE_SIZE];\/\/显示最近修改文件的标签$/;"	v
label_file_change_title	subvolume.h	/^GtkWidget *label_file_change_title; $/;"	v
label_name_snap	snapshot-scan.h	/^GtkWidget *label_name_snap;$/;"	v
label_name_subvol	subvolume.h	/^GtkWidget *label_name_subvol;$/;"	v
label_output	subvolume.h	/^GtkWidget *label_output;\/\/用于错误输出$/;"	v
label_snapshot_details_pic	snapshot-scan.h	/^GtkWidget *label_snapshot_details_pic;$/;"	v
label_snapshot_details_title	snapshot-scan.h	/^GtkWidget *label_snapshot_details_title;$/;"	v
label_snapshot_log	snapshot-scan.h	/^GtkWidget *label_snapshot_log;$/;"	v
label_subvol_contents	subvolume.h	/^GtkWidget *label_subvol_contents[12];\/\/右侧列表的标签$/;"	v
label_subvol_create_title	subvolume.h	/^GtkWidget *label_subvol_create_title;\/\/创建子卷的标题栏$/;"	v
label_subvol_delete_title	subvolume.h	/^GtkWidget *label_subvol_delete_title;$/;"	v
label_subvol_details_pic	subvolume.h	/^GtkWidget *label_subvol_details_pic;$/;"	v
label_subvol_details_title	subvolume.h	/^GtkWidget *label_subvol_details_title;$/;"	v
label_subvol_info	subvolume.h	/^GtkWidget *label_subvol_info[ACTIVE_SIZE][ACTIVE_SIZE];$/;"	v
label_subvol_info_title	subvolume.h	/^GtkWidget *label_subvol_info_title;$/;"	v
label_subvol_item_title	subvolume.h	/^GtkWidget *label_subvol_item_title;$/;"	v
label_subvol_log	subvolume.h	/^GtkWidget *label_subvol_log;$/;"	v
label_subvol_name	subvolume.h	/^GtkWidget *label_subvol_name;\/\/目的子卷名$/;"	v
label_subvol_tag	subvolume.h	/^GtkWidget *label_subvol_tag[12];\/\/右侧主标签名$/;"	v
label_title1	main.c	/^GtkWidget *label_title1,*label_title2;\/\/两个标题栏$/;"	v
label_title2	main.c	/^GtkWidget *label_title1,*label_title2;\/\/两个标题栏$/;"	v
labels	show-blocks	/^labels = []$/;"	v
last_dev_scrub	cmds-scrub.c	/^static struct scrub_file_record *last_dev_scrub($/;"	f	file:
last_inode_alloc	ctree.h	/^	u64 last_inode_alloc;$/;"	m	struct:btrfs_root
last_owner	show-blocks	/^    last_owner = owner$/;"	v
last_owner	show-blocks	/^last_owner = 0$/;"	v
last_physical	ioctl.h	/^	__u64 last_physical;$/;"	m	struct:btrfs_scrub_progress
last_root	show-blocks	/^    last_root = root$/;"	v
last_root	show-blocks	/^last_root = 0$/;"	v
last_snapshot	ctree.h	/^	__le64 last_snapshot;$/;"	m	struct:btrfs_root_item
last_snapshot	ctree.h	/^	__le64 last_snapshot;$/;"	m	struct:btrfs_root_item_v0
last_trans	ctree.h	/^	u64 last_trans;$/;"	m	struct:btrfs_root
last_trans_committed	ctree.h	/^	u64 last_trans_committed;$/;"	m	struct:btrfs_fs_info
latest_bdev	volumes.h	/^	int latest_bdev;$/;"	m	struct:btrfs_fs_devices
latest_devid	volumes.h	/^	u64 latest_devid;$/;"	m	struct:btrfs_fs_devices
latest_trans	volumes.h	/^	u64 latest_trans;$/;"	m	struct:btrfs_fs_devices
le16_to_cpu	kerncompat.h	270;"	d
le16_to_cpu	kerncompat.h	277;"	d
le32_to_cpu	kerncompat.h	268;"	d
le32_to_cpu	kerncompat.h	275;"	d
le64_to_cpu	kerncompat.h	266;"	d
le64_to_cpu	kerncompat.h	273;"	d
le8_to_cpu	kerncompat.h	260;"	d
leaf_data_end	ctree.c	/^static inline unsigned int leaf_data_end(struct btrfs_root *root,$/;"	f	file:
leaf_space_used	ctree.c	/^static int leaf_space_used(struct extent_buffer *l, int start, int nr)$/;"	f	file:
leafsize	btrfs-image.c	/^	u64 leafsize;$/;"	m	struct:mdrestore_struct	file:
leafsize	chunk-recover.c	/^	u32 leafsize;$/;"	m	struct:recover_control	file:
leafsize	cmds-chunk.c	/^	u32 leafsize;$/;"	m	struct:recover_control	file:
leafsize	ctree.h	/^	__le32 leafsize;$/;"	m	struct:btrfs_super_block
leafsize	ctree.h	/^	u32 leafsize;$/;"	m	struct:btrfs_root
leave_shared_node	cmds-check.c	/^static int leave_shared_node(struct btrfs_root *root,$/;"	f	file:
leave_spinning	ctree.h	/^	unsigned int leave_spinning:1;$/;"	m	struct:btrfs_path
left_snapshot_box	snapshot-scan.h	/^GtkWidget *left_snapshot_box,*right_snapshot_box;$/;"	v
left_subvol_box	subvolume.h	/^GtkWidget *left_subvol_box,*right_subvol_box;$/;"	v
len	btrfs-image.c	/^	u32 len;$/;"	m	struct:name	file:
len	extent_io.h	/^	u32 len;$/;"	m	struct:extent_buffer
len	ioctl.h	/^	__u32 len;$/;"	m	struct:btrfs_ioctl_search_header
len	ioctl.h	/^	__u64 len;$/;"	m	struct:btrfs_ioctl_defrag_range_args
len	send.h	/^	__le32 len;$/;"	m	struct:btrfs_cmd_header
length	btrfsck.h	/^	u64 length;$/;"	m	struct:chunk_record
length	btrfsck.h	/^	u64 length;$/;"	m	struct:device_extent_record
length	ctree.h	/^	__le64 length;$/;"	m	struct:btrfs_chunk
length	ctree.h	/^	__le64 length;$/;"	m	struct:btrfs_dev_extent
level	ctree.h	/^	u8 level;$/;"	m	struct:btrfs_header
level	ctree.h	/^	u8 level;$/;"	m	struct:btrfs_root_item
level	ctree.h	/^	u8 level;$/;"	m	struct:btrfs_root_item_v0
level	ctree.h	/^	u8 level;$/;"	m	struct:btrfs_tree_block_info
level	extent-tree.c	/^	int level;$/;"	m	struct:pending_extent_op	file:
level	repair.h	/^	int level;$/;"	m	struct:btrfs_corrupt_block
lib_LIBS	Makefile	/^lib_LIBS = -luuid -lblkid -lm -lz -llzo2 -L.$/;"	m
lib_links	Makefile	/^lib_links = libbtrfs.so.0 libbtrfs.so$/;"	m
libbtrfs_headers	Makefile	/^libbtrfs_headers =  snapshot-scan.h subvolume.h filesystem.h send-stream.h send-utils.h send.h rbtree.h btrfs-list.h \\$/;"	m
libbtrfs_objects	Makefile	/^libbtrfs_objects = send-stream.o send-utils.o rbtree.o btrfs-list.o crc32c.o \\$/;"	m
libdir	Makefile	/^libdir ?= $(prefix)\/lib$/;"	m
libs	Makefile	/^libs = $(libs_shared) $(libs_static)$/;"	m
libs_shared	Makefile	/^libs_shared = libbtrfs.so.0.1$/;"	m
libs_static	Makefile	/^libs_static = libbtrfs.a$/;"	m
lim	ioctl.h	/^	struct btrfs_qgroup_limit lim;$/;"	m	struct:btrfs_ioctl_qgroup_limit_args	typeref:struct:btrfs_ioctl_qgroup_limit_args::btrfs_qgroup_limit
lim	ioctl.h	/^	struct btrfs_qgroup_limit lim;$/;"	m	struct:btrfs_qgroup_inherit	typeref:struct:btrfs_qgroup_inherit::btrfs_qgroup_limit
line_picker	show-blocks	/^def line_picker(line, mouseevent):$/;"	f
lines	show-blocks	/^lines = []$/;"	v
link	send-stream.h	/^	int (*link)(const char *path, const char *lnk, void *user);$/;"	m	struct:btrfs_send_ops
link_free_space	free-space-cache.c	/^static int link_free_space(struct btrfs_free_space_ctl *ctl,$/;"	f	file:
link_subvol	btrfs-convert.c	/^static struct btrfs_root * link_subvol(struct btrfs_root *root,$/;"	f	file:
list	btrfs-image.c	/^	struct list_head list;$/;"	m	struct:async_work	typeref:struct:async_work::list_head	file:
list	btrfs-image.c	/^	struct list_head list;$/;"	m	struct:mdrestore_struct	typeref:struct:mdrestore_struct::list_head	file:
list	btrfs-image.c	/^	struct list_head list;$/;"	m	struct:metadump_struct	typeref:struct:metadump_struct::list_head	file:
list	btrfsck.h	/^	struct list_head list;$/;"	m	struct:block_group_record	typeref:struct:block_group_record::list_head
list	btrfsck.h	/^	struct list_head list;$/;"	m	struct:chunk_record	typeref:struct:chunk_record::list_head
list	cmds-check.c	/^	struct list_head list;$/;"	m	struct:extent_backref	typeref:struct:extent_backref::list_head	file:
list	cmds-check.c	/^	struct list_head list;$/;"	m	struct:extent_entry	typeref:struct:extent_entry::list_head	file:
list	cmds-check.c	/^	struct list_head list;$/;"	m	struct:extent_record	typeref:struct:extent_record::list_head	file:
list	cmds-check.c	/^	struct list_head list;$/;"	m	struct:inode_backref	typeref:struct:inode_backref::list_head	file:
list	cmds-check.c	/^	struct list_head list;$/;"	m	struct:root_backref	typeref:struct:root_backref::list_head	file:
list	ctree.h	/^	struct list_head list;$/;"	m	struct:btrfs_space_info	typeref:struct:btrfs_space_info::list_head
list	free-space-cache.h	/^	struct list_head list;$/;"	m	struct:btrfs_free_space	typeref:struct:btrfs_free_space::list_head
list	main.c	/^GtkWidget *list;\/\/列表$/;"	v
list	mkfs.c	/^	struct list_head list;$/;"	m	struct:directory_name_entry	typeref:struct:directory_name_entry::list_head	file:
list	super-recover.c	/^	struct list_head list;$/;"	m	struct:super_block_record	typeref:struct:super_block_record::list_head	file:
list	utils.c	/^	struct list_head list;$/;"	m	struct:pending_dir	typeref:struct:pending_dir::list_head	file:
list	volumes.h	/^	struct list_head list;$/;"	m	struct:btrfs_fs_devices	typeref:struct:btrfs_fs_devices::list_head
list_add	list.h	/^static inline void list_add(struct list_head *xnew, struct list_head *head)$/;"	f
list_add_tail	list.h	/^static inline void list_add_tail(struct list_head *xnew, struct list_head *head)$/;"	f
list_all_fs_features	mkfs.c	/^static void list_all_fs_features(void)$/;"	f	file:
list_def_gen	btrfs-list.c	/^char list_def_gen[127][30];$/;"	v
list_def_id	btrfs-list.c	/^char list_def_id[127][6];$/;"	v
list_def_level	btrfs-list.c	/^char list_def_level[127][5];$/;"	v
list_def_path	btrfs-list.c	/^char list_def_path[127][200];$/;"	v
list_del	list.h	/^static inline void list_del(struct list_head *entry)$/;"	f
list_del_init	list.h	/^static inline void list_del_init(struct list_head *entry)$/;"	f
list_empty	list.h	/^static inline int list_empty(const struct list_head *head)$/;"	f
list_empty_careful	list.h	/^static inline int list_empty_careful(const struct list_head *head)$/;"	f
list_entry	list.h	302;"	d
list_first_entry	list.h	313;"	d
list_for_each	list.h	331;"	d
list_for_each_entry	list.h	373;"	d
list_for_each_entry_continue	list.h	409;"	d
list_for_each_entry_from	list.h	422;"	d
list_for_each_entry_reverse	list.h	384;"	d
list_for_each_entry_safe	list.h	433;"	d
list_for_each_entry_safe_continue	list.h	449;"	d
list_for_each_entry_safe_from	list.h	465;"	d
list_for_each_entry_safe_reverse	list.h	480;"	d
list_for_each_prev	list.h	353;"	d
list_for_each_safe	list.h	363;"	d
list_fragments	btrfs-fragments.c	/^list_fragments(int fd, u64 flags, char *dir)$/;"	f
list_head	list.h	/^struct list_head {$/;"	s
list_is_last	list.h	/^static inline int list_is_last(const struct list_head *list,$/;"	f
list_item	main.c	/^GtkWidget *list_item;\/\/列表项$/;"	v
list_move	list.h	/^static inline void list_move(struct list_head *list, struct list_head *head)$/;"	f
list_move_tail	list.h	/^static inline void list_move_tail(struct list_head *list,$/;"	f
list_next_entry	list.h	323;"	d
list_prepare_entry	list.h	397;"	d
list_replace	list.h	/^static inline void list_replace(struct list_head *old,$/;"	f
list_replace_init	list.h	/^static inline void list_replace_init(struct list_head *old,$/;"	f
list_sort	list_sort.c	/^void list_sort(void *priv, struct list_head *head,$/;"	f
list_splice	list.h	/^static inline void list_splice(struct list_head *list, struct list_head *head)$/;"	f
list_splice_init	list.h	/^static inline void list_splice_init(struct list_head *list,$/;"	f
list_splice_tail	list.h	/^static inline void list_splice_tail(struct list_head *list,$/;"	f
list_splice_tail_init	list.h	/^static inline void list_splice_tail_init(struct list_head *list,$/;"	f
load_and_dump_sb	btrfs-show-super.c	/^static int load_and_dump_sb(char *filename, int fd, u64 sb_bytenr)$/;"	f	file:
load_free_space_cache	free-space-cache.c	/^int load_free_space_cache(struct btrfs_fs_info *fs_info,$/;"	f
loaddata	show-blocks	/^def loaddata(fh,delimiter=None, converters=None):$/;"	f
location	ctree.h	/^	struct btrfs_disk_key location;$/;"	m	struct:btrfs_dir_item	typeref:struct:btrfs_dir_item::btrfs_disk_key
location	ctree.h	/^	struct btrfs_disk_key location;$/;"	m	struct:btrfs_free_space_header	typeref:struct:btrfs_free_space_header::btrfs_disk_key
lock	kerncompat.h	/^	unsigned long lock;$/;"	m	struct:mutex
locks	ctree.h	/^	int locks[BTRFS_MAX_LEVEL];$/;"	m	struct:btrfs_path
log_root	ctree.h	/^	__le64 log_root;$/;"	m	struct:btrfs_super_block
log_root_level	ctree.h	/^	u8 log_root_level;$/;"	m	struct:btrfs_super_block
log_root_transid	ctree.h	/^	__le64 log_root_transid;$/;"	m	struct:btrfs_super_block
log_root_tree	ctree.h	/^	struct btrfs_root *log_root_tree;$/;"	m	struct:btrfs_fs_info	typeref:struct:btrfs_fs_info::btrfs_root
logical	btrfs-image.c	/^	u64 logical;$/;"	m	struct:fs_chunk	file:
logical	ioctl.h	/^	__u64				logical;	\/* in *\/$/;"	m	struct:btrfs_ioctl_logical_ino_args
logical_to_physical	btrfs-image.c	/^static u64 logical_to_physical(struct mdrestore_struct *mdres, u64 logical, u64 *size)$/;"	f	file:
long_options	btrfs-corrupt-block.c	/^static struct option long_options[] = {$/;"	v	typeref:struct:option	file:
long_options	btrfs-map-logical.c	/^static struct option long_options[] = {$/;"	v	typeref:struct:option	file:
long_options	cmds-check.c	/^static struct option long_options[] = {$/;"	v	typeref:struct:option	file:
long_options	cmds-restore.c	/^static struct option long_options[] = {$/;"	v	typeref:struct:option	file:
long_options	mkfs.c	/^static struct option long_options[] = {$/;"	v	typeref:struct:option	file:
lookup_cache_extent	extent-cache.c	/^struct cache_extent *lookup_cache_extent(struct cache_tree *tree,$/;"	f
lookup_cache_extent2	extent-cache.c	/^struct cache_extent *lookup_cache_extent2(struct cache_tree *tree,$/;"	f
lookup_enoent	dir-test.c	/^static int lookup_enoent(struct btrfs_trans_handle *trans, struct btrfs_root$/;"	f	file:
lookup_enoent	random-test.c	/^static int lookup_enoent(struct btrfs_trans_handle *trans, struct btrfs_root$/;"	f	file:
lookup_extent_backref	extent-tree.c	/^static int lookup_extent_backref(struct btrfs_trans_handle *trans,$/;"	f	file:
lookup_extent_data_ref	extent-tree.c	/^static noinline int lookup_extent_data_ref(struct btrfs_trans_handle *trans,$/;"	f	file:
lookup_inline_extent_backref	extent-tree.c	/^static int lookup_inline_extent_backref(struct btrfs_trans_handle *trans,$/;"	f	file:
lookup_ino_path	btrfs-list.c	/^static int lookup_ino_path(int fd, struct root_info *ri)$/;"	f	file:
lookup_ino_rootid	utils.c	/^int lookup_ino_rootid(int fd, u64 *rootid)$/;"	f
lookup_item	dir-test.c	/^static int lookup_item(struct btrfs_trans_handle *trans, struct btrfs_root$/;"	f	file:
lookup_item	random-test.c	/^static int lookup_item(struct btrfs_trans_handle *trans, struct btrfs_root$/;"	f	file:
lookup_tree_block_ref	extent-tree.c	/^static noinline int lookup_tree_block_ref(struct btrfs_trans_handle *trans,$/;"	f	file:
lowest_bdev	volumes.h	/^	int lowest_bdev;$/;"	m	struct:btrfs_fs_devices
lowest_bytenr	btrfs-calc-size.c	/^	u64 lowest_bytenr;$/;"	m	struct:root_stats	file:
lowest_devid	volumes.h	/^	u64 lowest_devid;$/;"	m	struct:btrfs_fs_devices
lowest_level	ctree.h	/^	int lowest_level;$/;"	m	struct:btrfs_path
lru	extent_io.h	/^	struct list_head lru;$/;"	m	struct:extent_buffer	typeref:struct:extent_buffer::list_head
lru	extent_io.h	/^	struct list_head lru;$/;"	m	struct:extent_io_tree	typeref:struct:extent_io_tree::list_head
lzo1x_worst_compress	cmds-restore.c	59;"	d	file:
magic	btrfs-image.c	/^	__le64 magic;$/;"	m	struct:meta_cluster_header	file:
magic	ctree.h	/^	__le64 magic;$/;"	m	struct:btrfs_super_block
magic	send.h	/^	char magic[sizeof(BTRFS_SEND_STREAM_MAGIC)];$/;"	m	struct:btrfs_stream_header
main	btrfs-calc-size.c	/^int main(int argc, char **argv)$/;"	f
main	btrfs-convert.c	/^int main(int argc, char *argv[])$/;"	f
main	btrfs-corrupt-block.c	/^int main(int ac, char **av)$/;"	f
main	btrfs-crc.c	/^int main(int argc, char **argv)$/;"	f
main	btrfs-debug-tree.c	/^int main(int ac, char **av)$/;"	f
main	btrfs-find-root.c	/^int main(int argc, char **argv)$/;"	f
main	btrfs-fragments.c	/^int main(int argc, char **argv)$/;"	f
main	btrfs-image.c	/^int main(int argc, char *argv[])$/;"	f
main	btrfs-map-logical.c	/^int main(int ac, char **av)$/;"	f
main	btrfs-select-super.c	/^int main(int ac, char **av)$/;"	f
main	btrfs-show-super.c	/^int main(int argc, char **argv)$/;"	f
main	btrfs-zero-log.c	/^int main(int ac, char **av)$/;"	f
main	btrfstune.c	/^int main(int argc, char *argv[])$/;"	f
main	dir-test.c	/^int main(int ac, char **av)$/;"	f
main	hasher.c	/^int main() {$/;"	f
main	ioctl-test.c	/^int main(int ac, char **av)$/;"	f
main	main.c	/^int main(int argc, char *argv[]){	$/;"	f
main	mkfs.c	/^int main(int ac, char **av)$/;"	f
main	quick-test.c	/^int main(int ac, char **av) {$/;"	f
main	random-test.c	/^int main(int ac, char **av)$/;"	f
main	send-test.c	/^int main(int argc, char **argv)$/;"	f
main_box	snapshot-scan.h	/^GtkWidget *main_box;$/;"	v
main_box	subvolume.h	/^GtkWidget *main_box;$/;"	v
main_snapshot_details_box	snapshot-scan.h	/^GtkWidget *main_snapshot_details_box;$/;"	v
main_snapshot_icon_box	snapshot-scan.h	/^GtkWidget *main_snapshot_icon_box;$/;"	v
main_snapshot_info_box	snapshot-scan.h	/^GtkWidget *main_snapshot_info_box;$/;"	v
main_snapshot_log_box	snapshot-scan.h	/^GtkWidget *main_snapshot_log_box;$/;"	v
main_subvol_details_box	subvolume.h	/^GtkWidget *main_subvol_details_box;$/;"	v
main_subvol_icon_box	subvolume.h	/^GtkWidget *main_subvol_icon_box;$/;"	v
main_subvol_info_box	subvolume.h	/^GtkWidget *main_subvol_info_box;$/;"	v
main_subvol_log_box	subvolume.h	/^GtkWidget *main_subvol_log_box;$/;"	v
make_btrfs	utils.c	/^int make_btrfs(int fd, const char *device, const char *label,$/;"	f
make_image	mkfs.c	/^static int make_image(char *source_dir, struct btrfs_root *root, int out_fd)$/;"	f	file:
make_path	mkfs.c	/^static char *make_path(char *dir, char *name)$/;"	f	file:
make_root_dir	mkfs.c	/^static int make_root_dir(struct btrfs_root *root, int mixed)$/;"	f	file:
malloc_errors	ioctl.h	/^	__u64 malloc_errors;$/;"	m	struct:btrfs_scrub_progress
man8dir	man/Makefile	/^man8dir = $(mandir)\/man8$/;"	m
mandir	man/Makefile	/^mandir = $(prefix)\/man$/;"	m
map_lookup	volumes.h	/^struct map_lookup {$/;"	s
mapping_tree	ctree.h	/^	struct btrfs_mapping_tree mapping_tree;$/;"	m	struct:btrfs_fs_info	typeref:struct:btrfs_fs_info::btrfs_mapping_tree
match_extent_data_ref	extent-tree.c	/^static int match_extent_data_ref(struct extent_buffer *leaf,$/;"	f	file:
max	kerncompat.h	200;"	d
max_cluster_size	btrfs-calc-size.c	/^	u64 max_cluster_size;$/;"	m	struct:root_stats	file:
max_excl	qgroup.c	/^	u64 max_excl;$/;"	m	struct:btrfs_qgroup	file:
max_exclusive	ctree.h	/^	__le64 max_exclusive;$/;"	m	struct:btrfs_qgroup_limit_item
max_exclusive	ioctl.h	/^	__u64	max_exclusive;$/;"	m	struct:btrfs_qgroup_limit
max_generation	super-recover.c	/^	u64 max_generation;$/;"	m	struct:btrfs_recover_superblock	file:
max_id	ioctl.h	/^	__u64 max_id;				\/* out *\/$/;"	m	struct:btrfs_ioctl_fs_info_args
max_len	qgroup.c	/^	int max_len;$/;"	m	struct:__anon14	file:
max_objectid	ioctl.h	/^	__u64 max_objectid;$/;"	m	struct:btrfs_ioctl_search_key
max_offset	ioctl.h	/^	__u64 max_offset;$/;"	m	struct:btrfs_ioctl_search_key
max_referenced	ctree.h	/^	__le64 max_referenced;$/;"	m	struct:btrfs_qgroup_limit_item
max_referenced	ioctl.h	/^	__u64	max_referenced;$/;"	m	struct:btrfs_qgroup_limit
max_rfer	qgroup.c	/^	u64 max_rfer;$/;"	m	struct:btrfs_qgroup	file:
max_seek_len	btrfs-calc-size.c	/^	u64 max_seek_len;$/;"	m	struct:root_stats	file:
max_size	cmds-check.c	/^	u64 max_size;$/;"	m	struct:extent_record	file:
max_t	kerncompat.h	208;"	d
max_transid	ioctl.h	/^	__u64 max_transid;$/;"	m	struct:btrfs_ioctl_search_key
max_type	ioctl.h	/^	__u32 max_type;$/;"	m	struct:btrfs_ioctl_search_key
may_rollback	btrfs-convert.c	/^static int may_rollback(struct btrfs_root *root)$/;"	f	file:
maybe_free_extent_rec	cmds-check.c	/^static int maybe_free_extent_rec(struct cache_tree *extent_cache,$/;"	f	file:
maybe_free_inode_rec	cmds-check.c	/^static void maybe_free_inode_rec(struct cache_tree *inode_cache,$/;"	f	file:
mdrestore_destroy	btrfs-image.c	/^static void mdrestore_destroy(struct mdrestore_struct *mdres)$/;"	f	file:
mdrestore_init	btrfs-image.c	/^static int mdrestore_init(struct mdrestore_struct *mdres,$/;"	f	file:
mdrestore_struct	btrfs-image.c	/^struct mdrestore_struct {$/;"	s	file:
member	qgroup.c	/^	struct btrfs_qgroup *member;$/;"	m	struct:btrfs_qgroup_list	typeref:struct:btrfs_qgroup_list::btrfs_qgroup	file:
members	qgroup.c	/^	struct list_head members;$/;"	m	struct:btrfs_qgroup	typeref:struct:btrfs_qgroup::list_head	file:
memcmp_extent_buffer	extent_io.c	/^int memcmp_extent_buffer(struct extent_buffer *eb, const void *ptrv,$/;"	f
memmove_extent_buffer	extent_io.c	/^void memmove_extent_buffer(struct extent_buffer *dst, unsigned long dst_offset,$/;"	f
memset_extent_buffer	extent_io.c	/^void memset_extent_buffer(struct extent_buffer *eb, char c,$/;"	f
menu_items	main.c	/^GtkItemFactoryEntry menu_items[] = {$/;"	v
menubar	main.c	/^GtkWidget *menubar;\/\/菜单条$/;"	v
merge	list_sort.c	/^static struct list_head *merge(void *priv,$/;"	f	file:
merge_and_restore_back_links	list_sort.c	/^static void merge_and_restore_back_links(void *priv,$/;"	f	file:
merge_inode_recs	cmds-check.c	/^static int merge_inode_recs(struct inode_record *src, struct inode_record *dst,$/;"	f	file:
merge_root_recs	cmds-check.c	/^static int merge_root_recs(struct btrfs_root *root,$/;"	f	file:
merge_space_tree	free-space-cache.c	/^static void merge_space_tree(struct btrfs_free_space_ctl *ctl)$/;"	f	file:
merge_state	extent_io.c	/^static int merge_state(struct extent_io_tree *tree,$/;"	f	file:
merging	cmds-check.c	/^	unsigned int merging:1;$/;"	m	struct:inode_record	file:
meta	ioctl.h	/^	struct btrfs_balance_args meta;		\/* in\/out *\/$/;"	m	struct:btrfs_ioctl_balance_args	typeref:struct:btrfs_ioctl_balance_args::btrfs_balance_args
meta_cluster	btrfs-image.c	/^struct meta_cluster {$/;"	s	file:
meta_cluster_header	btrfs-image.c	/^struct meta_cluster_header {$/;"	s	file:
meta_cluster_init	btrfs-image.c	/^static void meta_cluster_init(struct metadump_struct *md, u64 start)$/;"	f	file:
meta_cluster_item	btrfs-image.c	/^struct meta_cluster_item {$/;"	s	file:
meta_cmap	show-blocks	/^meta_cmap = get_cmap("gist_ncar")$/;"	v
metadata	cmds-check.c	/^	unsigned int metadata:1;$/;"	m	struct:extent_record	file:
metadata_alloc_profile	ctree.h	/^	u64 metadata_alloc_profile;$/;"	m	struct:btrfs_fs_info
metadump_destroy	btrfs-image.c	/^static void metadump_destroy(struct metadump_struct *md)$/;"	f	file:
metadump_init	btrfs-image.c	/^static int metadump_init(struct metadump_struct *md, struct btrfs_root *root,$/;"	f	file:
metadump_struct	btrfs-image.c	/^struct metadump_struct {$/;"	s	file:
migrate_super_block	btrfs-convert.c	/^static int migrate_super_block(int fd, u64 old_bytenr, u32 sectorsize)$/;"	f	file:
min	kerncompat.h	194;"	d
min_cluster_size	btrfs-calc-size.c	/^	u64 min_cluster_size;$/;"	m	struct:root_stats	file:
min_objectid	ioctl.h	/^	__u64 min_objectid;$/;"	m	struct:btrfs_ioctl_search_key
min_offset	ioctl.h	/^	__u64 min_offset;$/;"	m	struct:btrfs_ioctl_search_key
min_t	kerncompat.h	206;"	d
min_transid	ioctl.h	/^	__u64 min_transid;$/;"	m	struct:btrfs_ioctl_search_key
min_type	ioctl.h	/^	__u32 min_type;$/;"	m	struct:btrfs_ioctl_search_key
mkdir	send-stream.h	/^	int (*mkdir)(const char *path, void *user);$/;"	m	struct:btrfs_send_ops
mkdir_p	cmds-scrub.c	/^static int mkdir_p(char *path)$/;"	f	file:
mkfifo	send-stream.h	/^	int (*mkfifo)(const char *path, void *user);$/;"	m	struct:btrfs_send_ops
mkfile	send-stream.h	/^	int (*mkfile)(const char *path, void *user);$/;"	m	struct:btrfs_send_ops
mkfs_features	mkfs.c	/^} mkfs_features[] = {$/;"	v	typeref:struct:btrfs_fs_feature	file:
mknod	send-stream.h	/^	int (*mknod)(const char *path, u64 mode, u64 dev, void *user);$/;"	m	struct:btrfs_send_ops
mksock	send-stream.h	/^	int (*mksock)(const char *path, void *user);$/;"	m	struct:btrfs_send_ops
mnt_fd	cmds-receive.c	/^	int mnt_fd;$/;"	m	struct:btrfs_receive	file:
mnt_fd	cmds-send.c	/^	int mnt_fd;$/;"	m	struct:btrfs_send	file:
mnt_fd	send-utils.h	/^	int mnt_fd;$/;"	m	struct:subvol_uuid_search
mode	ctree.h	/^	__le32 mode;$/;"	m	struct:btrfs_inode_item
mtime	ctree.h	/^	struct btrfs_timespec mtime;$/;"	m	struct:btrfs_inode_item	typeref:struct:btrfs_inode_item::btrfs_timespec
multi_devices	btrfs-image.c	/^	int multi_devices;$/;"	m	struct:mdrestore_struct	file:
mutex	btrfs-image.c	/^	pthread_mutex_t mutex;$/;"	m	struct:mdrestore_struct	file:
mutex	btrfs-image.c	/^	pthread_mutex_t mutex;$/;"	m	struct:metadump_struct	file:
mutex	kerncompat.h	/^struct mutex {$/;"	s
mutex_init	kerncompat.h	104;"	d
mutex_is_locked	kerncompat.h	/^static inline int mutex_is_locked(struct mutex *m)$/;"	f
mutex_lock	kerncompat.h	/^static inline void mutex_lock(struct mutex *m)$/;"	f
mutex_unlock	kerncompat.h	/^static inline void mutex_unlock(struct mutex *m)$/;"	f
n	btrfs-calc-size.c	/^	struct rb_node n;$/;"	m	struct:seek	typeref:struct:seek::rb_node	file:
n	btrfs-image.c	/^	struct rb_node n;$/;"	m	struct:fs_chunk	typeref:struct:fs_chunk::rb_node	file:
n	btrfs-image.c	/^	struct rb_node n;$/;"	m	struct:name	typeref:struct:name::rb_node	file:
name	btrfs-image.c	/^struct name {$/;"	s	file:
name	btrfs-list.c	/^	char	*name;$/;"	m	struct:__anon6	file:
name	btrfs-list.h	/^	char *name;$/;"	m	struct:root_info
name	cmds-check.c	/^	char name[0];$/;"	m	struct:inode_backref	file:
name	cmds-check.c	/^	char name[0];$/;"	m	struct:root_backref	file:
name	ctree.h	/^	__u8   name[0]; \/* name goes here *\/$/;"	m	struct:btrfs_inode_extref
name	ioctl.h	/^	char name[BTRFS_INO_LOOKUP_PATH_MAX];$/;"	m	struct:btrfs_ioctl_ino_lookup_args
name	ioctl.h	/^	char name[BTRFS_PATH_NAME_MAX + 1];$/;"	m	struct:btrfs_ioctl_vol_args
name	ioctl.h	/^	char name[BTRFS_SUBVOL_NAME_MAX + 1];$/;"	m	struct:btrfs_ioctl_vol_args_v2
name	mkfs.c	/^	const char *name;$/;"	m	struct:btrfs_fs_feature	file:
name	qgroup.c	/^	char *name;$/;"	m	struct:__anon14	file:
name	utils.c	/^	char name[PATH_MAX];$/;"	m	struct:pending_dir	file:
name	volumes.h	/^	char *name;$/;"	m	struct:btrfs_device
name_cmp	btrfs-image.c	/^static int name_cmp(struct rb_node *a, struct rb_node *b, int fuzz)$/;"	f	file:
name_len	ctree.h	/^	__le16 name_len;$/;"	m	struct:btrfs_dir_item
name_len	ctree.h	/^	__le16 name_len;$/;"	m	struct:btrfs_inode_extref
name_len	ctree.h	/^	__le16 name_len;$/;"	m	struct:btrfs_inode_ref
name_len	ctree.h	/^	__le16 name_len;$/;"	m	struct:btrfs_root_ref
name_pack_box	subvolume.h	/^GtkWidget *name_pack_box;$/;"	v
name_snap_box	snapshot-scan.h	/^GtkWidget *name_snap_box;$/;"	v
name_subvol_box	subvolume.h	/^GtkWidget *name_subvol_box;$/;"	v
name_tree	btrfs-image.c	/^	struct rb_root name_tree;$/;"	m	struct:metadump_struct	typeref:struct:metadump_struct::rb_root	file:
namelen	cmds-check.c	/^	u16 namelen;$/;"	m	struct:inode_backref	file:
namelen	cmds-check.c	/^	u16 namelen;$/;"	m	struct:root_backref	file:
nbytes	cmds-check.c	/^	u64 nbytes;$/;"	m	struct:inode_record	file:
nbytes	ctree.h	/^	__le64 nbytes;$/;"	m	struct:btrfs_inode_item
ncomps	btrfs-list.h	/^	int ncomps;$/;"	m	struct:btrfs_list_comparer_set
ncomps	qgroup.h	/^	int ncomps;$/;"	m	struct:btrfs_qgroup_comparer_set
need_print	btrfs-list.c	/^	int	need_print;$/;"	m	struct:__anon6	file:
need_print	qgroup.c	/^	int need_print;$/;"	m	struct:__anon14	file:
needed_path	subvolume.h	/^char *needed_path[ACTIVE_SIZE];$/;"	v
new_decode_dev	btrfs-convert.c	/^static inline dev_t new_decode_dev(u32 dev)$/;"	f	file:
next	cmds-filesystem.c	/^	struct seen_fsid *next;$/;"	m	struct:seen_fsid	typeref:struct:seen_fsid::seen_fsid	file:
next	commands.h	/^	const struct cmd_group *next;$/;"	m	struct:cmd_struct	typeref:struct:cmd_struct::cmd_group
next	list.h	/^	struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head::list_head
next_cache_extent	extent-cache.c	/^struct cache_extent *next_cache_extent(struct cache_extent *pe)$/;"	f
next_key	quick-test.c	/^static int next_key(int i, int max_key) {$/;"	f	file:
next_leaf	cmds-restore.c	/^static int next_leaf(struct btrfs_root *root, struct btrfs_path *path)$/;"	f	file:
next_member	qgroup.c	/^	struct list_head next_member;$/;"	m	struct:btrfs_qgroup_list	typeref:struct:btrfs_qgroup_list::list_head	file:
next_qgroup	qgroup.c	/^	struct list_head next_qgroup;$/;"	m	struct:btrfs_qgroup_list	typeref:struct:btrfs_qgroup_list::list_head	file:
nfilters	btrfs-list.h	/^	int nfilters;$/;"	m	struct:btrfs_list_filter_set
nfilters	qgroup.h	/^	int nfilters;$/;"	m	struct:btrfs_qgroup_filter_set
nlink	cmds-check.c	/^	u32 nlink;$/;"	m	struct:inode_record	file:
nlink	ctree.h	/^	__le32 nlink;$/;"	m	struct:btrfs_inode_item
nmenu_items	main.c	/^gint nmenu_items = sizeof (menu_items) \/ sizeof (menu_items[0]);$/;"	v
nmirrors	chunk-recover.c	/^	int nmirrors;$/;"	m	struct:extent_record	file:
nmirrors	cmds-chunk.c	/^	int nmirrors;$/;"	m	struct:extent_record	file:
no_chunk_orphans	btrfsck.h	/^	struct list_head no_chunk_orphans;$/;"	m	struct:device_extent_tree	typeref:struct:device_extent_tree::list_head
no_csum	ioctl.h	/^	__u64 no_csum;$/;"	m	struct:btrfs_scrub_progress
no_device_orphans	btrfsck.h	/^	struct list_head no_device_orphans;$/;"	m	struct:device_extent_tree	typeref:struct:device_extent_tree::list_head
no_pretty	btrfs-calc-size.c	/^static int no_pretty = 0;$/;"	v	file:
nodatasum	cmds-check.c	/^	unsigned int nodatasum:1;$/;"	m	struct:inode_record	file:
node	btrfsck.h	/^	struct rb_node node;$/;"	m	struct:device_record	typeref:struct:device_record::rb_node
node	cmds-check.c	/^	struct extent_backref node;$/;"	m	struct:data_backref	typeref:struct:data_backref::extent_backref	file:
node	cmds-check.c	/^	struct extent_backref node;$/;"	m	struct:tree_backref	typeref:struct:tree_backref::extent_backref	file:
node	ctree.h	/^	struct extent_buffer *node;$/;"	m	struct:btrfs_root	typeref:struct:btrfs_root::extent_buffer
node	radix-tree.c	/^	struct radix_tree_node *node;$/;"	m	struct:radix_tree_path	typeref:struct:radix_tree_path::radix_tree_node	file:
nodes	cmds-check.c	/^	struct shared_node *nodes[BTRFS_MAX_LEVEL];$/;"	m	struct:walk_control	typeref:struct:walk_control::shared_node	file:
nodes	ctree.h	/^	struct extent_buffer *nodes[BTRFS_MAX_LEVEL];$/;"	m	struct:btrfs_path	typeref:struct:btrfs_path::extent_buffer
nodes	radix-tree.c	/^	struct radix_tree_node *nodes[RADIX_TREE_MAX_PATH];$/;"	m	struct:radix_tree_preload	typeref:struct:radix_tree_preload::radix_tree_node	file:
nodesize	ctree.h	/^	__le32 nodesize;$/;"	m	struct:btrfs_super_block
nodesize	ctree.h	/^	u32 nodesize;$/;"	m	struct:btrfs_root
noinline	kerncompat.h	295;"	d
notused	ioctl.h	/^	notused,$/;"	e	enum:btrfs_err_code
nr	cmds-check.c	/^	u64 nr;$/;"	m	struct:extent_record	file:
nr	radix-tree.c	/^	int nr;$/;"	m	struct:radix_tree_preload	file:
nr_data_stripes	volumes.c	/^static inline int nr_data_stripes(struct map_lookup *map)$/;"	f	file:
nr_items	ioctl.h	/^	__u32 nr_items;$/;"	m	struct:btrfs_ioctl_search_key
nr_items	ioctl.h	/^	__u64 nr_items;				\/* in\/out *\/$/;"	m	struct:btrfs_ioctl_get_dev_stats
nr_parity_stripes	volumes.c	/^static inline int nr_parity_stripes(struct map_lookup *map)$/;"	f	file:
nritems	btrfs-image.c	/^	__le32 nritems;$/;"	m	struct:meta_cluster_header	file:
nritems	ctree.h	/^	__le32 nritems;$/;"	m	struct:btrfs_header
nsec	ctree.h	/^	__le32 nsec;$/;"	m	struct:btrfs_timespec
nsec	ioctl.h	/^	__u32 nsec;$/;"	m	struct:btrfs_ioctl_timespec
num_bitmaps	ctree.h	/^	__le64 num_bitmaps;$/;"	m	struct:btrfs_free_space_header
num_blocks	btrfs-convert.c	/^	u64 num_blocks;$/;"	m	struct:blk_iterate_data	file:
num_bytes	ctree.h	/^	__le64 num_bytes;$/;"	m	struct:btrfs_file_extent_item
num_bytes	extent-tree.c	/^	u64 num_bytes;$/;"	m	struct:pending_extent_op	file:
num_cells	show-blocks	/^num_cells = 800$/;"	v
num_devices	ctree.h	/^	__le64 num_devices;$/;"	m	struct:btrfs_root_backup
num_devices	ctree.h	/^	__le64 num_devices;$/;"	m	struct:btrfs_super_block
num_devices	ioctl.h	/^	__u64 num_devices;			\/* out *\/$/;"	m	struct:btrfs_ioctl_fs_info_args
num_duplicates	cmds-check.c	/^	u64 num_duplicates;$/;"	m	struct:extent_record	file:
num_entries	ctree.h	/^	__le64 num_entries;$/;"	m	struct:btrfs_free_space_header
num_excl_copies	ioctl.h	/^	__u64	num_excl_copies;$/;"	m	struct:btrfs_qgroup_inherit
num_items	btrfs-image.c	/^	size_t num_items;$/;"	m	struct:mdrestore_struct	file:
num_items	btrfs-image.c	/^	size_t num_items;$/;"	m	struct:metadump_struct	file:
num_pages	free-space-cache.c	/^	int num_pages;$/;"	m	struct:io_ctl	file:
num_qgroups	ioctl.h	/^	__u64	num_qgroups;$/;"	m	struct:btrfs_qgroup_inherit
num_ready	btrfs-image.c	/^	size_t num_ready;$/;"	m	struct:metadump_struct	file:
num_ref_copies	ioctl.h	/^	__u64	num_ref_copies;$/;"	m	struct:btrfs_qgroup_inherit
num_refs	cmds-check.c	/^	u32 num_refs;$/;"	m	struct:data_backref	file:
num_stripes	btrfsck.h	/^	u16 num_stripes;$/;"	m	struct:chunk_record
num_stripes	ctree.h	/^	__le16 num_stripes;$/;"	m	struct:btrfs_chunk
num_stripes	volumes.h	/^	int num_stripes;$/;"	m	struct:btrfs_multi_bio
num_stripes	volumes.h	/^	int num_stripes;$/;"	m	struct:map_lookup
num_threads	btrfs-image.c	/^	size_t num_threads;$/;"	m	struct:mdrestore_struct	file:
num_threads	btrfs-image.c	/^	size_t num_threads;$/;"	m	struct:metadump_struct	file:
num_uncorrectable_read_errors	ioctl.h	/^	__u64 num_uncorrectable_read_errors;	\/* out *\/$/;"	m	struct:btrfs_ioctl_dev_replace_status_params
num_write_errors	ioctl.h	/^	__u64 num_write_errors;	\/* out *\/$/;"	m	struct:btrfs_ioctl_dev_replace_status_params
objectid	btrfs-convert.c	/^	u64 objectid;$/;"	m	struct:blk_iterate_data	file:
objectid	btrfs-convert.c	/^	u64 objectid;$/;"	m	struct:dir_iterate_data	file:
objectid	btrfsck.h	/^	u64 objectid;$/;"	m	struct:block_group_record
objectid	btrfsck.h	/^	u64 objectid;$/;"	m	struct:chunk_record
objectid	btrfsck.h	/^	u64 objectid;$/;"	m	struct:device_extent_record
objectid	btrfsck.h	/^	u64 objectid;$/;"	m	struct:device_record
objectid	cmds-check.c	/^	u64 objectid;$/;"	m	struct:root_record	file:
objectid	ctree.h	/^	__le64 objectid;$/;"	m	struct:btrfs_disk_key
objectid	ctree.h	/^	__le64 objectid;$/;"	m	struct:btrfs_extent_data_ref
objectid	ctree.h	/^	__le64 objectid;$/;"	m	struct:btrfs_extent_ref_v0
objectid	ctree.h	/^	u64 objectid;$/;"	m	struct:btrfs_key
objectid	ctree.h	/^	u64 objectid;$/;"	m	struct:btrfs_root
objectid	extent-cache.c	/^	u64 objectid;$/;"	m	struct:cache_extent_search_range	file:
objectid	extent-cache.h	/^	u64 objectid;$/;"	m	struct:cache_extent
objectid	ioctl.h	/^	__u64 objectid;$/;"	m	struct:btrfs_ioctl_ino_lookup_args
objectid	ioctl.h	/^	__u64 objectid;$/;"	m	struct:btrfs_ioctl_search_header
objects	Makefile	/^objects = ctree.o disk-io.o radix-tree.o extent-tree.o print-tree.o \\$/;"	m
offset	btrfsck.h	/^	u64 offset;$/;"	m	struct:block_group_record
offset	btrfsck.h	/^	u64 offset;$/;"	m	struct:chunk_record
offset	btrfsck.h	/^	u64 offset;$/;"	m	struct:device_extent_record
offset	btrfsck.h	/^	u64 offset;$/;"	m	struct:device_record
offset	btrfsck.h	/^	u64 offset;$/;"	m	struct:stripe
offset	cmds-check.c	/^	u64 offset;$/;"	m	struct:data_backref	file:
offset	ctree.h	/^	__le32 offset;$/;"	m	struct:btrfs_item
offset	ctree.h	/^	__le64 offset;$/;"	m	struct:btrfs_disk_key
offset	ctree.h	/^	__le64 offset;$/;"	m	struct:btrfs_extent_data_ref
offset	ctree.h	/^	__le64 offset;$/;"	m	struct:btrfs_extent_inline_ref
offset	ctree.h	/^	__le64 offset;$/;"	m	struct:btrfs_file_extent_item
offset	ctree.h	/^	__le64 offset;$/;"	m	struct:btrfs_free_space_entry
offset	ctree.h	/^	__le64 offset;$/;"	m	struct:btrfs_stripe
offset	ctree.h	/^	u64 offset;$/;"	m	struct:btrfs_key
offset	free-space-cache.h	/^	u64 offset;$/;"	m	struct:btrfs_free_space
offset	ioctl.h	/^	__u64 offset;$/;"	m	struct:btrfs_ioctl_search_header
offset	radix-tree.c	/^	int offset;$/;"	m	struct:radix_tree_path	file:
offset_index	free-space-cache.h	/^	struct rb_node offset_index;$/;"	m	struct:btrfs_free_space	typeref:struct:btrfs_free_space::rb_node
offset_to_bit	free-space-cache.c	/^static inline unsigned long offset_to_bit(u64 bitmap_start, u32 unit,$/;"	f	file:
offset_to_bitmap	free-space-cache.c	/^static inline u64 offset_to_bitmap(struct btrfs_free_space_ctl *ctl,$/;"	f	file:
offsets	chunk-recover.c	/^	u64 offsets[BTRFS_NUM_MIRRORS];$/;"	m	struct:extent_record	file:
offsets	cmds-chunk.c	/^	u64 offsets[BTRFS_NUM_MIRRORS];$/;"	m	struct:extent_record	file:
ogen	btrfs-list.h	/^	u64 ogen;$/;"	m	struct:root_info
old_decode_dev	btrfs-convert.c	/^static inline dev_t old_decode_dev(u16 val)$/;"	f	file:
old_restore	btrfs-image.c	/^	int old_restore;$/;"	m	struct:mdrestore_struct	file:
on_restoring	ctree.h	/^	int on_restoring;$/;"	m	struct:btrfs_fs_info
only_deleted	btrfs-list.h	/^	int only_deleted;$/;"	m	struct:btrfs_list_filter_set
open_ctree	disk-io.c	/^struct btrfs_root *open_ctree(const char *filename, u64 sb_bytenr,$/;"	f
open_ctree_broken	btrfs-find-root.c	/^static struct btrfs_root *open_ctree_broken(int fd, const char *device)$/;"	f	file:
open_ctree_fd	disk-io.c	/^struct btrfs_root *open_ctree_fd(int fp, const char *path, u64 sb_bytenr,$/;"	f
open_ctree_fs_info	disk-io.c	/^struct btrfs_fs_info *open_ctree_fs_info(const char *filename,$/;"	f
open_ctree_with_broken_chunk	chunk-recover.c	/^open_ctree_with_broken_chunk(struct recover_control *rc)$/;"	f	file:
open_ctree_with_broken_chunk	cmds-chunk.c	/^open_ctree_with_broken_chunk(struct recover_control *rc)$/;"	f	file:
open_ext2fs	btrfs-convert.c	/^static int open_ext2fs(const char *name, ext2_filsys *ret_fs)$/;"	f	file:
open_file_or_dir	utils.c	/^int open_file_or_dir(const char *fname, DIR **dirstream)$/;"	f
open_fs	cmds-restore.c	/^static struct btrfs_root *open_fs(const char *dev, u64 root_location,$/;"	f	file:
open_inode_for_write	cmds-receive.c	/^static int open_inode_for_write(struct btrfs_receive *r, const char *path)$/;"	f	file:
open_path_or_dev_mnt	utils.c	/^int open_path_or_dev_mnt(const char *path, DIR **dirstream)$/;"	f
open_seed_devices	volumes.c	/^static int open_seed_devices(struct btrfs_root *root, u8 *fsid)$/;"	f	file:
open_target	mkfs.c	/^static int open_target(char *output_name)$/;"	f	file:
ops	dir-test.c	/^int (*ops[])(struct btrfs_trans_handle *trans, struct btrfs_root *root, struct$/;"	v
ops	random-test.c	/^int (*ops[])(struct btrfs_trans_handle *,$/;"	v
ops	send-stream.c	/^	struct btrfs_send_ops *ops;$/;"	m	struct:btrfs_send_stream	typeref:struct:btrfs_send_stream::btrfs_send_ops	file:
ordered	btrfs-image.c	/^	struct list_head ordered;$/;"	m	struct:async_work	typeref:struct:async_work::list_head	file:
ordered	btrfs-image.c	/^	struct list_head ordered;$/;"	m	struct:metadump_struct	typeref:struct:metadump_struct::list_head	file:
orig	free-space-cache.c	/^	void *cur, *orig;$/;"	m	struct:io_ctl	file:
orig_dst	bcp	/^                orig_dst = os.path.dirname(orig_dst) or '.'$/;"	v
orig_dst	bcp	/^orig_dst = args[-1]$/;"	v
other_encoding	ctree.h	/^	__le16 other_encoding; \/* spare for later use *\/$/;"	m	struct:btrfs_file_extent_item
otime	btrfs-list.h	/^	time_t otime;$/;"	m	struct:root_info
otime	ctree.h	/^	struct btrfs_timespec otime;$/;"	m	struct:btrfs_inode_item	typeref:struct:btrfs_inode_item::btrfs_timespec
otime	ctree.h	/^	struct btrfs_timespec otime;$/;"	m	struct:btrfs_root_item	typeref:struct:btrfs_root_item::btrfs_timespec
otransid	ctree.h	/^	__le64 otransid; \/* trans when created *\/$/;"	m	struct:btrfs_root_item
otransid	send-utils.h	/^	u64 otransid;$/;"	m	struct:subvol_info
out	btrfs-image.c	/^	FILE *out;$/;"	m	struct:mdrestore_struct	file:
out	btrfs-image.c	/^	FILE *out;$/;"	m	struct:metadump_struct	file:
overwrite	cmds-restore.c	/^static int overwrite = 0;$/;"	v	file:
owner	btrfsck.h	/^	u64 owner;$/;"	m	struct:chunk_record
owner	cmds-check.c	/^	u64 owner;$/;"	m	struct:data_backref	file:
owner	ctree.h	/^	__le64 owner;$/;"	m	struct:btrfs_chunk
owner	ctree.h	/^	__le64 owner;$/;"	m	struct:btrfs_header
owner	show-blocks	/^    owner = row[2]$/;"	v
owner_ref_checked	cmds-check.c	/^	unsigned int owner_ref_checked:1;$/;"	m	struct:extent_record	file:
p	cmds-scrub.c	/^	struct btrfs_scrub_progress p;$/;"	m	struct:scrub_file_record	typeref:struct:scrub_file_record::btrfs_scrub_progress	file:
p	cmds-scrub.c	/^	struct btrfs_scrub_progress p;$/;"	m	struct:scrub_fs_stat	typeref:struct:scrub_fs_stat::btrfs_scrub_progress	file:
page	kerncompat.h	/^struct page {$/;"	s
panel	main.c	/^GtkWidget *panel;\/\/分割面板$/;"	v
parent	btrfs-convert.c	/^	u64 parent;$/;"	m	struct:dir_iterate_data	file:
parent	cmds-check.c	/^		u64 parent;$/;"	m	union:data_backref::__anon7	file:
parent	cmds-check.c	/^		u64 parent;$/;"	m	union:tree_backref::__anon8	file:
parent_key	cmds-check.c	/^	struct btrfs_disk_key parent_key;$/;"	m	struct:extent_record	typeref:struct:extent_record::btrfs_disk_key	file:
parent_objectid	ctree.h	/^	__le64 parent_objectid;$/;"	m	struct:btrfs_inode_extref
parent_root	ioctl.h	/^	__u64 parent_root;		\/* in *\/$/;"	m	struct:btrfs_ioctl_send_args
parent_uuid	ctree.h	/^	u8 parent_uuid[BTRFS_UUID_SIZE];$/;"	m	struct:btrfs_root_item
parent_uuid	send-utils.h	/^	u8 parent_uuid[BTRFS_UUID_SIZE];$/;"	m	struct:subvol_info
parity_smaller	volumes.c	/^static inline int parity_smaller(u64 a, u64 b)$/;"	f	file:
parse_command_token	btrfs.c	/^parse_command_token(const char *arg, const struct cmd_group *grp)$/;"	f	file:
parse_compress_type	cmds-filesystem.c	/^static int parse_compress_type(char *s)$/;"	f	file:
parse_filters	cmds-balance.c	/^static int parse_filters(char *filters, struct btrfs_balance_args *args)$/;"	f	file:
parse_fs_features	mkfs.c	/^static char* parse_fs_features(char *namelist, u64 *flags)$/;"	f	file:
parse_label	mkfs.c	/^static char *parse_label(char *input)$/;"	f	file:
parse_limit	cmds-qgroup.c	/^static int parse_limit(const char *p, unsigned long long *s)$/;"	f	file:
parse_num	show-blocks	/^    def parse_num(s):$/;"	f	function:parse_zoom
parse_one_fs_feature	mkfs.c	/^static int parse_one_fs_feature(const char *name, u64 *flags)$/;"	f	file:
parse_one_profile	cmds-balance.c	/^static int parse_one_profile(const char *profile, u64 *flags)$/;"	f	file:
parse_one_token	btrfs.c	/^static int parse_one_token(const char *arg, const struct cmd_group *grp,$/;"	f	file:
parse_profile	mkfs.c	/^static u64 parse_profile(char *s)$/;"	f	file:
parse_profiles	cmds-balance.c	/^static int parse_profiles(char *profiles, u64 *flags)$/;"	f	file:
parse_qgroupid	qgroup.c	/^u64 parse_qgroupid(char *p)$/;"	f
parse_range	cmds-balance.c	/^static int parse_range(const char *range, u64 *start, u64 *end)$/;"	f	file:
parse_size	utils.c	/^u64 parse_size(char *s)$/;"	f
parse_u64	cmds-balance.c	/^static int parse_u64(const char *str, u64 *result)$/;"	f	file:
parse_zoom	show-blocks	/^def parse_zoom():$/;"	f
parser	bcp	/^parser = OptionParser(usage=usage)$/;"	v
parser	show-blocks	/^parser = OptionParser(usage=usage)$/;"	v
part	bcp	/^            part = os.path.relpath(srcname, src)$/;"	v
path	btrfs-list.h	/^	char *path;$/;"	m	struct:root_info
path	ioctl.h	/^	__u8 path[BTRFS_DEVICE_PATH_NAME_MAX];	\/* out *\/$/;"	m	struct:btrfs_ioctl_dev_info_args
path	mkfs.c	/^	char *path;$/;"	m	struct:directory_name_entry	file:
path	send-utils.h	/^	char *path;$/;"	m	struct:subvol_info
path_cat	send-utils.c	/^char *path_cat(const char *p1, const char *p2)$/;"	f
path_cat3	send-utils.c	/^char *path_cat3(const char *p1, const char *p2, const char *p3)$/;"	f
path_name	cmds-restore.c	/^static char path_name[4096];$/;"	v	file:
path_to_full_path	subvolume_bak.c	/^char *path_to_full_path(char path_str[]){$/;"	f
pend	ioctl.h	/^	__u64 pend;$/;"	m	struct:btrfs_balance_args
pending_del	ctree.h	/^	struct extent_io_tree pending_del;$/;"	m	struct:btrfs_fs_info	typeref:struct:btrfs_fs_info::extent_io_tree
pending_dir	utils.c	/^struct pending_dir {$/;"	s	file:
pending_extent_op	extent-tree.c	/^struct pending_extent_op {$/;"	s	file:
pending_size	btrfs-image.c	/^	u64 pending_size;$/;"	m	struct:metadump_struct	file:
pending_start	btrfs-image.c	/^	u64 pending_start;$/;"	m	struct:metadump_struct	file:
percent_meta	show-blocks	/^    percent_meta = (float(total_metadata) \/ float(total_data)) * 100$/;"	v
percent_meta	show-blocks	/^    percent_meta = 100$/;"	v
physical	btrfs-image.c	/^	u64 physical;$/;"	m	struct:fs_chunk	file:
physical	volumes.c	/^	u64 physical;$/;"	m	struct:stripe	file:
physical	volumes.h	/^	u64 physical;$/;"	m	struct:btrfs_bio_stripe
pick_next_pending	cmds-check.c	/^static int pick_next_pending(struct cache_tree *pending,$/;"	f	file:
pin_down_bytes	extent-tree.c	/^static int pin_down_bytes(struct btrfs_trans_handle *trans,$/;"	f	file:
pin_down_tree_blocks	cmds-check.c	/^static int pin_down_tree_blocks(struct btrfs_fs_info *fs_info,$/;"	f	file:
pin_metadata_blocks	cmds-check.c	/^static int pin_metadata_blocks(struct btrfs_fs_info *fs_info)$/;"	f	file:
pinned	ctree.h	/^	u64 pinned;$/;"	m	struct:btrfs_block_group_cache
pinned_extents	ctree.h	/^	struct extent_io_tree pinned_extents;$/;"	m	struct:btrfs_fs_info	typeref:struct:btrfs_fs_info::extent_io_tree
pipefd	send-test.c	/^static int pipefd[2];$/;"	v	file:
plotone	show-blocks	/^def plotone(a, xvals, yvals, owner, root, lines, labels):$/;"	f
pre_process_filter_set	qgroup.c	/^static void pre_process_filter_set(struct qgroup_lookup *lookup,$/;"	f	file:
preempt_disable	kerncompat.h	126;"	d
preempt_enable	kerncompat.h	125;"	d
prefix	Makefile	/^prefix ?= \/usr\/local$/;"	m
prefix	man/Makefile	/^prefix ?= \/usr\/local$/;"	m
prefixcmp	btrfs.c	/^int prefixcmp(const char *str, const char *prefix)$/;"	f
prepare_system_chunk	btrfs-convert.c	/^static int prepare_system_chunk(int fd, u64 sb_bytenr, u32 sectorsize)$/;"	f	file:
prepare_system_chunk_sb	btrfs-convert.c	/^static int prepare_system_chunk_sb(struct btrfs_super_block *super)$/;"	f	file:
pretty_size	utils.h	61;"	d
pretty_size_snprintf	utils.c	/^int pretty_size_snprintf(u64 size, char *str, size_t str_bytes)$/;"	f
prev	list.h	/^	struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head::
prev_cache_extent	extent-cache.c	/^struct cache_extent *prev_cache_extent(struct cache_extent *pe)$/;"	f
prg_fd	cmds-scrub.c	/^	int prg_fd;$/;"	m	struct:scrub_progress_cycle	file:
print_all_devices	chunk-recover.c	/^static void print_all_devices(struct list_head *devices)$/;"	f	file:
print_all_devices	cmds-chunk.c	/^static void print_all_devices(struct list_head *devices)$/;"	f	file:
print_all_devices	super-recover.c	/^static void print_all_devices(struct list_head *devices)$/;"	f	file:
print_all_qgroups	qgroup.c	/^static void print_all_qgroups(struct qgroup_lookup *qgroup_lookup)$/;"	f	file:
print_all_supers	super-recover.c	/^static void print_all_supers(struct btrfs_recover_superblock *recover)$/;"	f	file:
print_all_volume_info	btrfs-list.c	/^static void print_all_volume_info(struct root_lookup *sorted_tree,$/;"	f	file:
print_all_volume_info_tab_head	btrfs-list.c	/^static void print_all_volume_info_tab_head(void)$/;"	f	file:
print_bg	btrfs-fragments.c	/^print_bg(FILE *html, char *name, u64 start, u64 len, u64 used, u64 flags,$/;"	f	file:
print_block_group_info	chunk-recover.c	/^static void print_block_group_info(struct block_group_record *rec, char *prefix)$/;"	f	file:
print_block_group_info	cmds-chunk.c	/^static void print_block_group_info(struct block_group_record *rec, char *prefix)$/;"	f	file:
print_block_group_tree	chunk-recover.c	/^static void print_block_group_tree(struct block_group_tree *tree)$/;"	f	file:
print_block_group_tree	cmds-chunk.c	/^static void print_block_group_tree(struct block_group_tree *tree)$/;"	f	file:
print_check_result	chunk-recover.c	/^static void print_check_result(struct recover_control *rc)$/;"	f	file:
print_check_result	cmds-chunk.c	/^static void print_check_result(struct recover_control *rc)$/;"	f	file:
print_child_column	qgroup.c	/^static int print_child_column(struct btrfs_qgroup *qgroup)$/;"	f	file:
print_chmod	send-test.c	/^static int print_chmod(const char *path, u64 mode, void *user)$/;"	f	file:
print_chown	send-test.c	/^static int print_chown(const char *path, u64 uid, u64 gid, void *user)$/;"	f	file:
print_chunk	print-tree.c	/^static void print_chunk(struct extent_buffer *eb, struct btrfs_chunk *chunk)$/;"	f	file:
print_chunk_info	chunk-recover.c	/^static void print_chunk_info(struct chunk_record *chunk, char *prefix)$/;"	f	file:
print_chunk_info	cmds-chunk.c	/^static void print_chunk_info(struct chunk_record *chunk, char *prefix)$/;"	f	file:
print_chunk_self_info	chunk-recover.c	/^static void print_chunk_self_info(struct chunk_record *rec, char *prefix)$/;"	f	file:
print_chunk_self_info	cmds-chunk.c	/^static void print_chunk_self_info(struct chunk_record *rec, char *prefix)$/;"	f	file:
print_chunk_tree	chunk-recover.c	/^static void print_chunk_tree(struct cache_tree *tree)$/;"	f	file:
print_chunk_tree	cmds-chunk.c	/^static void print_chunk_tree(struct cache_tree *tree)$/;"	f	file:
print_clone	send-test.c	/^static int print_clone(const char *path, u64 offset, u64 len,$/;"	f	file:
print_dev_item	print-tree.c	/^static void print_dev_item(struct extent_buffer *eb,$/;"	f	file:
print_device_extent_info	chunk-recover.c	/^static void print_device_extent_info(struct device_extent_record *rec,$/;"	f	file:
print_device_extent_info	cmds-chunk.c	/^static void print_device_extent_info(struct device_extent_record *rec,$/;"	f	file:
print_device_extent_tree	chunk-recover.c	/^static void print_device_extent_tree(struct device_extent_tree *tree)$/;"	f	file:
print_device_extent_tree	cmds-chunk.c	/^static void print_device_extent_tree(struct device_extent_tree *tree)$/;"	f	file:
print_device_info	chunk-recover.c	/^static void print_device_info(struct btrfs_device *device, char *prefix)$/;"	f	file:
print_device_info	cmds-chunk.c	/^static void print_device_info(struct btrfs_device *device, char *prefix)$/;"	f	file:
print_df	cmds-filesystem.c	/^static void print_df(struct btrfs_ioctl_space_args *sargs)$/;"	f	file:
print_dir_item	print-tree.c	/^static int print_dir_item(struct extent_buffer *eb, struct btrfs_item *item,$/;"	f	file:
print_dir_item_type	print-tree.c	/^static void print_dir_item_type(struct extent_buffer *eb,$/;"	f	file:
print_extent_item	print-tree.c	/^static void print_extent_item(struct extent_buffer *eb, int slot, int metadata)$/;"	f	file:
print_extent_ref_v0	print-tree.c	/^static void print_extent_ref_v0(struct extent_buffer *eb, int slot)$/;"	f	file:
print_extents	btrfs-debug-tree.c	/^static void print_extents(struct btrfs_root *root, struct extent_buffer *eb)$/;"	f	file:
print_file_extent_item	print-tree.c	/^static void print_file_extent_item(struct extent_buffer *eb,$/;"	f	file:
print_foldername	subvolume_bak.c	/^void print_foldername(GtkWidget *folder){$/;"	f
print_free_space_header	print-tree.c	/^static void print_free_space_header(struct extent_buffer *leaf, int slot)$/;"	f	file:
print_fs_stat	cmds-scrub.c	/^static void print_fs_stat(struct scrub_fs_stat *fs_stat, int raw)$/;"	f	file:
print_inode_error	cmds-check.c	/^static void print_inode_error(int errors)$/;"	f	file:
print_inode_extref_item	print-tree.c	/^static int print_inode_extref_item(struct extent_buffer *eb,$/;"	f	file:
print_inode_ref_item	print-tree.c	/^static int print_inode_ref_item(struct extent_buffer *eb, struct btrfs_item *item,$/;"	f	file:
print_key_type	print-tree.c	/^static void print_key_type(u64 objectid, u8 type)$/;"	f	file:
print_link	send-test.c	/^static int print_link(const char *path, const char *lnk, void *user)$/;"	f	file:
print_mkdir	send-test.c	/^static int print_mkdir(const char *path, void *user)$/;"	f	file:
print_mkfifo	send-test.c	/^static int print_mkfifo(const char *path, void *user)$/;"	f	file:
print_mkfile	send-test.c	/^static int print_mkfile(const char *path, void *user)$/;"	f	file:
print_mknod	send-test.c	/^static int print_mknod(const char *path, u64 mode, u64 dev, void *user)$/;"	f	file:
print_mksock	send-test.c	/^static int print_mksock(const char *path, void *user)$/;"	f	file:
print_objectid	print-tree.c	/^static void print_objectid(u64 objectid, u8 type)$/;"	f	file:
print_old_roots	btrfs-debug-tree.c	/^static void print_old_roots(struct btrfs_super_block *super)$/;"	f	file:
print_one_extent	btrfs-list.c	/^	int print_one_extent(int fd, struct btrfs_ioctl_search_header *sh,$/;"	f
print_one_fs	cmds-filesystem.c	/^static int print_one_fs(struct btrfs_ioctl_fs_info_args *fs_info,$/;"	f	file:
print_one_uuid	cmds-filesystem.c	/^void print_one_uuid(struct btrfs_fs_devices *fs_devices)$/;"	f
print_parent_column	qgroup.c	/^static int print_parent_column(struct btrfs_qgroup *qgroup)$/;"	f	file:
print_qgroup_column	qgroup.c	/^static void print_qgroup_column(struct btrfs_qgroup *qgroup,$/;"	f	file:
print_qgroup_column_add_blank	qgroup.c	/^static void print_qgroup_column_add_blank(enum btrfs_qgroup_column_enum column,$/;"	f	file:
print_ref_error	cmds-check.c	/^static void print_ref_error(int errors)$/;"	f	file:
print_remove_xattr	send-test.c	/^static int print_remove_xattr(const char *path, const char *name, void *user)$/;"	f	file:
print_rename	send-test.c	/^static int print_rename(const char *from, const char *to, void *user)$/;"	f	file:
print_replace_status	cmds-replace.c	/^static int print_replace_status(int fd, const char *path, int once)$/;"	f	file:
print_rmdir	send-test.c	/^static int print_rmdir(const char *path, void *user)$/;"	f	file:
print_root	print-tree.c	/^static void print_root(struct extent_buffer *leaf, int slot)$/;"	f	file:
print_root_ref	print-tree.c	/^static void print_root_ref(struct extent_buffer *leaf, int slot, char *tag)$/;"	f	file:
print_scan_result	chunk-recover.c	/^static void print_scan_result(struct recover_control *rc)$/;"	f	file:
print_scan_result	cmds-chunk.c	/^static void print_scan_result(struct recover_control *rc)$/;"	f	file:
print_scrub_dev	cmds-scrub.c	/^static void print_scrub_dev(struct btrfs_ioctl_dev_info_args *di,$/;"	f	file:
print_scrub_full	cmds-scrub.c	/^static void print_scrub_full(struct btrfs_scrub_progress *sp)$/;"	f	file:
print_scrub_summary	cmds-scrub.c	/^static void print_scrub_summary(struct btrfs_scrub_progress *p)$/;"	f	file:
print_seek_histogram	btrfs-calc-size.c	/^static void print_seek_histogram(struct root_stats *stat)$/;"	f	file:
print_set_xattr	send-test.c	/^static int print_set_xattr(const char *path, const char *name,$/;"	f	file:
print_single_qgroup_table	qgroup.c	/^static void print_single_qgroup_table(struct btrfs_qgroup *qgroup)$/;"	f	file:
print_single_volume_info_default	btrfs-list.c	/^static void print_single_volume_info_default(struct root_info *subv)$/;"	f	file:
print_single_volume_info_raw	btrfs-list.c	/^static void print_single_volume_info_raw(struct root_info *subv, char *raw_prefix)$/;"	f	file:
print_single_volume_info_table	btrfs-list.c	/^static void print_single_volume_info_table(struct root_info *subv)$/;"	f	file:
print_snapshot	send-test.c	/^static int print_snapshot(const char *path, const u8 *uuid, u64 ctransid,$/;"	f	file:
print_stripe_info	chunk-recover.c	/^static void print_stripe_info(struct stripe *data, char *prefix1, char *prefix2,$/;"	f	file:
print_stripe_info	cmds-chunk.c	/^static void print_stripe_info(struct stripe *data, char *prefix1, char *prefix2,$/;"	f	file:
print_subvol	send-test.c	/^static int print_subvol(const char *path, const u8 *uuid, u64 ctransid,$/;"	f	file:
print_subvolume_column	btrfs-list.c	/^static void print_subvolume_column(struct root_info *subv,$/;"	f	file:
print_super_info	super-recover.c	/^static void print_super_info(struct super_block_record *record)$/;"	f	file:
print_symlink	send-test.c	/^static int print_symlink(const char *path, const char *lnk, void *user)$/;"	f	file:
print_table_head	qgroup.c	/^static void print_table_head()$/;"	f	file:
print_truncate	send-test.c	/^static int print_truncate(const char *path, u64 size, void *user)$/;"	f	file:
print_unlink	send-test.c	/^static int print_unlink(const char *path, void *user)$/;"	f	file:
print_update_extent	send-test.c	/^static int print_update_extent(const char *path, u64 offset, u64 len,$/;"	f	file:
print_usage	btrfs-convert.c	/^static void print_usage(void)$/;"	f	file:
print_usage	btrfs-corrupt-block.c	/^static void print_usage(void)$/;"	f	file:
print_usage	btrfs-debug-tree.c	/^static int print_usage(void)$/;"	f	file:
print_usage	btrfs-image.c	/^static void print_usage(void)$/;"	f	file:
print_usage	btrfs-map-logical.c	/^static void print_usage(void)$/;"	f	file:
print_usage	btrfs-select-super.c	/^static void print_usage(void)$/;"	f	file:
print_usage	btrfs-show-super.c	/^static void print_usage(void)$/;"	f	file:
print_usage	btrfs-zero-log.c	/^static void print_usage(void)$/;"	f	file:
print_usage	btrfstune.c	/^static void print_usage(void)$/;"	f	file:
print_usage	dir-test.c	/^int print_usage(void)$/;"	f
print_usage	mkfs.c	/^static void print_usage(void)$/;"	f	file:
print_usage	random-test.c	/^int print_usage(void)$/;"	f
print_utimes	send-test.c	/^static int print_utimes(const char *path, struct timespec *at,$/;"	f	file:
print_uuid_item	print-tree.c	/^static void print_uuid_item(struct extent_buffer *l, unsigned long offset,$/;"	f	file:
print_uuids	print-tree.c	/^static void print_uuids(struct extent_buffer *eb)$/;"	f	file:
print_version	mkfs.c	/^static void print_version(void)$/;"	f	file:
print_write	send-test.c	/^static int print_write(const char *path, const void *data, u64 offset,$/;"	f	file:
printk	kerncompat.h	224;"	d
prio_tree_node	kerncompat.h	/^struct vma_shared { int prio_tree_node; };$/;"	m	struct:vma_shared
process_block_group_item	chunk-recover.c	/^static int process_block_group_item(struct block_group_tree *bg_cache,$/;"	f	file:
process_block_group_item	cmds-check.c	/^static int process_block_group_item(struct block_group_tree *block_group_cache,$/;"	f	file:
process_block_group_item	cmds-chunk.c	/^static int process_block_group_item(struct block_group_tree *bg_cache,$/;"	f	file:
process_chmod	cmds-receive.c	/^static int process_chmod(const char *path, u64 mode, void *user)$/;"	f	file:
process_chown	cmds-receive.c	/^static int process_chown(const char *path, u64 uid, u64 gid, void *user)$/;"	f	file:
process_chunk_item	chunk-recover.c	/^static int process_chunk_item(struct cache_tree *chunk_cache,$/;"	f	file:
process_chunk_item	cmds-check.c	/^static int process_chunk_item(struct cache_tree *chunk_cache,$/;"	f	file:
process_chunk_item	cmds-chunk.c	/^static int process_chunk_item(struct cache_tree *chunk_cache,$/;"	f	file:
process_clone	cmds-receive.c	/^static int process_clone(const char *path, u64 offset, u64 len,$/;"	f	file:
process_device_extent_item	chunk-recover.c	/^static int process_device_extent_item(struct device_extent_tree *devext_cache,$/;"	f	file:
process_device_extent_item	cmds-check.c	/^process_device_extent_item(struct device_extent_tree *dev_extent_cache,$/;"	f	file:
process_device_extent_item	cmds-chunk.c	/^static int process_device_extent_item(struct device_extent_tree *devext_cache,$/;"	f	file:
process_device_item	cmds-check.c	/^static int process_device_item(struct rb_root *dev_cache,$/;"	f	file:
process_dir_item	cmds-check.c	/^static int process_dir_item(struct btrfs_root *root,$/;"	f	file:
process_duplicates	cmds-check.c	/^static int process_duplicates(struct btrfs_root *root,$/;"	f	file:
process_extent_buffer	chunk-recover.c	/^static int process_extent_buffer(struct cache_tree *eb_cache,$/;"	f	file:
process_extent_buffer	cmds-chunk.c	/^static int process_extent_buffer(struct cache_tree *eb_cache,$/;"	f	file:
process_extent_item	cmds-check.c	/^static int process_extent_item(struct btrfs_root *root,$/;"	f	file:
process_extent_ref_v0	cmds-check.c	/^static int process_extent_ref_v0(struct cache_tree *extent_cache,$/;"	f	file:
process_file_extent	cmds-check.c	/^static int process_file_extent(struct btrfs_root *root,$/;"	f	file:
process_fs_features	mkfs.c	/^static void process_fs_features(u64 flags)$/;"	f	file:
process_inode_extref	cmds-check.c	/^static int process_inode_extref(struct extent_buffer *eb,$/;"	f	file:
process_inode_item	cmds-check.c	/^static int process_inode_item(struct extent_buffer *eb,$/;"	f	file:
process_inode_ref	cmds-check.c	/^static int process_inode_ref(struct extent_buffer *eb,$/;"	f	file:
process_link	cmds-receive.c	/^static int process_link(const char *path, const char *lnk, void *user)$/;"	f	file:
process_mkdir	cmds-receive.c	/^static int process_mkdir(const char *path, void *user)$/;"	f	file:
process_mkfifo	cmds-receive.c	/^static int process_mkfifo(const char *path, void *user)$/;"	f	file:
process_mkfile	cmds-receive.c	/^static int process_mkfile(const char *path, void *user)$/;"	f	file:
process_mknod	cmds-receive.c	/^static int process_mknod(const char *path, u64 mode, u64 dev, void *user)$/;"	f	file:
process_mksock	cmds-receive.c	/^static int process_mksock(const char *path, void *user)$/;"	f	file:
process_one_leaf	cmds-check.c	/^static int process_one_leaf(struct btrfs_root *root, struct extent_buffer *eb,$/;"	f	file:
process_remove_xattr	cmds-receive.c	/^static int process_remove_xattr(const char *path, const char *name, void *user)$/;"	f	file:
process_rename	cmds-receive.c	/^static int process_rename(const char *from, const char *to, void *user)$/;"	f	file:
process_rmdir	cmds-receive.c	/^static int process_rmdir(const char *path, void *user)$/;"	f	file:
process_root_ref	cmds-check.c	/^static int process_root_ref(struct extent_buffer *eb, int slot,$/;"	f	file:
process_set_xattr	cmds-receive.c	/^static int process_set_xattr(const char *path, const char *name,$/;"	f	file:
process_snapshot	cmds-receive.c	/^static int process_snapshot(const char *path, const u8 *uuid, u64 ctransid,$/;"	f	file:
process_subvol	cmds-receive.c	/^static int process_subvol(const char *path, const u8 *uuid, u64 ctransid,$/;"	f	file:
process_symlink	cmds-receive.c	/^static int process_symlink(const char *path, const char *lnk, void *user)$/;"	f	file:
process_thread	send-test.c	/^static void *process_thread(void *arg_)$/;"	f	file:
process_truncate	cmds-receive.c	/^static int process_truncate(const char *path, u64 size, void *user)$/;"	f	file:
process_unlink	cmds-receive.c	/^static int process_unlink(const char *path, void *user)$/;"	f	file:
process_utimes	cmds-receive.c	/^static int process_utimes(const char *path, struct timespec *at,$/;"	f	file:
process_write	cmds-receive.c	/^static int process_write(const char *path, const void *data, u64 offset,$/;"	f	file:
profiles	ioctl.h	/^	__u64 profiles;$/;"	m	struct:btrfs_balance_args
progress	cmds-scrub.c	/^	struct scrub_progress *progress;$/;"	m	struct:scrub_progress_cycle	typeref:struct:scrub_progress_cycle::scrub_progress	file:
progress	ioctl.h	/^	__u64   progress;$/;"	m	struct:btrfs_ioctl_quota_rescan_args
progress	ioctl.h	/^	struct btrfs_scrub_progress progress;	\/* out *\/$/;"	m	struct:btrfs_ioctl_scrub_args	typeref:struct:btrfs_ioctl_scrub_args::btrfs_scrub_progress
progress2string	cmds-replace.c	/^progress2string(char *buf, size_t s, int progress_1000)$/;"	f	file:
progress_1000	ioctl.h	/^	__u64 progress_1000;	\/* out, 0 <= x <= 1000 *\/$/;"	m	struct:btrfs_ioctl_dev_replace_status_params
progress_mutex	cmds-scrub.c	/^	pthread_mutex_t progress_mutex;$/;"	m	struct:scrub_progress	file:
progress_one_dev	cmds-scrub.c	/^static void *progress_one_dev(void *ctx)$/;"	f	file:
progs	Makefile	/^progs = mkfs.btrfs btrfs-debug-tree main \\$/;"	m
prune_corrupt_blocks	cmds-check.c	/^static int prune_corrupt_blocks(struct btrfs_trans_handle *trans,$/;"	f	file:
prune_one_block	cmds-check.c	/^static int prune_one_block(struct btrfs_trans_handle *trans,$/;"	f	file:
pstart	ioctl.h	/^	__u64 pstart;$/;"	m	struct:btrfs_balance_args
ptr_node	cmds-check.c	/^struct ptr_node {$/;"	s	file:
ptrs	ctree.h	/^	struct btrfs_key_ptr ptrs[];$/;"	m	struct:btrfs_node	typeref:struct:btrfs_node::btrfs_key_ptr
push_im	btrfs-fragments.c	/^push_im(gdImagePtr im, char *name, char *dir)$/;"	f	file:
push_leaf_left	ctree.c	/^static int push_leaf_left(struct btrfs_trans_handle *trans, struct btrfs_root$/;"	f	file:
push_leaf_right	ctree.c	/^static int push_leaf_right(struct btrfs_trans_handle *trans, struct btrfs_root$/;"	f	file:
push_node_left	ctree.c	/^static int push_node_left(struct btrfs_trans_handle *trans,$/;"	f	file:
push_nodes_for_insert	ctree.c	/^static int noinline push_nodes_for_insert(struct btrfs_trans_handle *trans,$/;"	f	file:
put_unaligned_le16	kerncompat.h	287;"	d
put_unaligned_le32	kerncompat.h	289;"	d
put_unaligned_le64	kerncompat.h	291;"	d
put_unaligned_le8	kerncompat.h	285;"	d
puuid	btrfs-list.h	/^	u8 puuid[BTRFS_UUID_SIZE];$/;"	m	struct:root_info
qgroup	qgroup.c	/^	struct btrfs_qgroup *qgroup;$/;"	m	struct:btrfs_qgroup_list	typeref:struct:btrfs_qgroup_list::btrfs_qgroup	file:
qgroup_assign	cmds-qgroup.c	/^static int qgroup_assign(int assign, int argc, char **argv)$/;"	f	file:
qgroup_cmd_group	cmds-qgroup.c	/^const struct cmd_group qgroup_cmd_group = {$/;"	v	typeref:struct:cmd_group
qgroup_cmd_group_usage	cmds-qgroup.c	/^static const char * const qgroup_cmd_group_usage[] = {$/;"	v	file:
qgroup_create	cmds-qgroup.c	/^static int qgroup_create(int create, int argc, char **argv)$/;"	f	file:
qgroup_inherit	ioctl.h	/^			struct btrfs_qgroup_inherit *qgroup_inherit;$/;"	m	struct:btrfs_ioctl_vol_args_v2::__anon11::__anon12	typeref:struct:btrfs_ioctl_vol_args_v2::__anon11::__anon12::btrfs_qgroup_inherit
qgroup_inherit_add_copy	qgroup.c	/^int qgroup_inherit_add_copy(struct btrfs_qgroup_inherit **inherit, char *arg,$/;"	f
qgroup_inherit_add_group	qgroup.c	/^int qgroup_inherit_add_group(struct btrfs_qgroup_inherit **inherit, char *arg)$/;"	f
qgroup_inherit_realloc	qgroup.c	/^qgroup_inherit_realloc(struct btrfs_qgroup_inherit **inherit, int n, int pos)$/;"	f	file:
qgroup_inherit_size	qgroup.c	/^int qgroup_inherit_size(struct btrfs_qgroup_inherit *p)$/;"	f
qgroup_lookup	qgroup.c	/^struct qgroup_lookup {$/;"	s	file:
qgroup_lookup_init	qgroup.c	/^static void qgroup_lookup_init(struct qgroup_lookup *tree)$/;"	f	file:
qgroup_tree_insert	qgroup.c	/^static int qgroup_tree_insert(struct qgroup_lookup *root_tree,$/;"	f	file:
qgroup_tree_search	qgroup.c	/^static struct btrfs_qgroup *qgroup_tree_search(struct qgroup_lookup *root_tree,$/;"	f	file:
qgroupid	ioctl.h	/^	__u64	qgroupid;$/;"	m	struct:btrfs_ioctl_qgroup_limit_args
qgroupid	ioctl.h	/^	__u64 qgroupid;$/;"	m	struct:btrfs_ioctl_qgroup_create_args
qgroupid	qgroup.c	/^	u64 qgroupid;$/;"	m	struct:btrfs_qgroup	file:
qgroups	ioctl.h	/^	__u64	qgroups[0];$/;"	m	struct:btrfs_qgroup_inherit
qgroups	qgroup.c	/^	struct list_head qgroups;$/;"	m	struct:btrfs_qgroup	typeref:struct:btrfs_qgroup::list_head	file:
quota_cmd_group	cmds-quota.c	/^const struct cmd_group quota_cmd_group = {$/;"	v	typeref:struct:cmd_group
quota_cmd_group_usage	cmds-quota.c	/^static const char * const quota_cmd_group_usage[] = {$/;"	v	file:
quota_ctl	cmds-quota.c	/^static int quota_ctl(int cmd, int argc, char **argv)$/;"	f	file:
radix_tree_delete	radix-tree.c	/^void *radix_tree_delete(struct radix_tree_root *root, unsigned long index)$/;"	f
radix_tree_extend	radix-tree.c	/^static int radix_tree_extend(struct radix_tree_root *root, unsigned long index)$/;"	f	file:
radix_tree_gang_lookup	radix-tree.c	/^radix_tree_gang_lookup(struct radix_tree_root *root, void **results,$/;"	f
radix_tree_gang_lookup_tag	radix-tree.c	/^radix_tree_gang_lookup_tag(struct radix_tree_root *root, void **results,$/;"	f
radix_tree_init	radix-tree.c	/^void radix_tree_init(void)$/;"	f
radix_tree_init_maxindex	radix-tree.c	/^static void radix_tree_init_maxindex(void)$/;"	f	file:
radix_tree_insert	radix-tree.c	/^int radix_tree_insert(struct radix_tree_root *root,$/;"	f
radix_tree_lookup	radix-tree.c	/^void *radix_tree_lookup(struct radix_tree_root *root, unsigned long index)$/;"	f
radix_tree_lookup_slot	radix-tree.c	/^void **radix_tree_lookup_slot(struct radix_tree_root *root, unsigned long index)$/;"	f
radix_tree_maxindex	radix-tree.c	/^static inline unsigned long radix_tree_maxindex(unsigned int height)$/;"	f	file:
radix_tree_node	radix-tree.c	/^struct radix_tree_node {$/;"	s	file:
radix_tree_node_alloc	radix-tree.c	/^radix_tree_node_alloc(struct radix_tree_root *root)$/;"	f	file:
radix_tree_node_free	radix-tree.c	/^radix_tree_node_free(struct radix_tree_node *node)$/;"	f	file:
radix_tree_path	radix-tree.c	/^struct radix_tree_path {$/;"	s	file:
radix_tree_preload	radix-tree.c	/^int radix_tree_preload(gfp_t gfp_mask)$/;"	f
radix_tree_preload	radix-tree.c	/^struct radix_tree_preload {$/;"	s	file:
radix_tree_preload_end	radix-tree.h	/^static inline void radix_tree_preload_end(void)$/;"	f
radix_tree_preloads	radix-tree.c	/^static struct radix_tree_preload radix_tree_preloads = { 0, };$/;"	v	typeref:struct:radix_tree_preload	file:
radix_tree_root	radix-tree.h	/^struct radix_tree_root {$/;"	s
radix_tree_shrink	radix-tree.c	/^static inline void radix_tree_shrink(struct radix_tree_root *root)$/;"	f	file:
radix_tree_tag_clear	radix-tree.c	/^void *radix_tree_tag_clear(struct radix_tree_root *root,$/;"	f
radix_tree_tag_get	radix-tree.c	/^int radix_tree_tag_get(struct radix_tree_root *root,$/;"	f
radix_tree_tag_set	radix-tree.c	/^void *radix_tree_tag_set(struct radix_tree_root *root,$/;"	f
radix_tree_tagged	radix-tree.c	/^int radix_tree_tagged(struct radix_tree_root *root, unsigned int tag)$/;"	f
raid6_gen_syndrome	raid6.c	/^void raid6_gen_syndrome(int disks, size_t bytes, void **ptrs)$/;"	f
ram_bytes	cmds-check.c	/^	u64 ram_bytes;$/;"	m	struct:data_backref	file:
ram_bytes	ctree.h	/^	__le64 ram_bytes;$/;"	m	struct:btrfs_file_extent_item
randgen	show-blocks	/^randgen = random.Random()$/;"	v
rb_color	rbtree.h	117;"	d
rb_compare_keys	rbtree.h	/^typedef int (*rb_compare_keys)(struct rb_node *node, void *key);$/;"	t
rb_compare_nodes	rbtree.h	/^typedef int (*rb_compare_nodes)(struct rb_node *node1, struct rb_node *node2);$/;"	t
rb_entry	rbtree.h	133;"	d
rb_erase	rbtree.c	/^void rb_erase(struct rb_node *node, struct rb_root *root)$/;"	f
rb_first	rbtree.c	/^struct rb_node *rb_first(struct rb_root *root)$/;"	f
rb_free_node	rbtree.h	/^typedef void (*rb_free_node)(struct rb_node *node);$/;"	t
rb_free_nodes	rbtree.c	/^void rb_free_nodes(struct rb_root *root, rb_free_node free_node)$/;"	f
rb_insert	rbtree.c	/^int rb_insert(struct rb_root *root, struct rb_node *node,$/;"	f
rb_insert_color	rbtree.c	/^void rb_insert_color(struct rb_node *node, struct rb_root *root)$/;"	f
rb_is_black	rbtree.h	119;"	d
rb_is_red	rbtree.h	118;"	d
rb_last	rbtree.c	/^struct rb_node *rb_last(struct rb_root *root)$/;"	f
rb_left	rbtree.h	/^	struct rb_node *rb_left;$/;"	m	struct:rb_node	typeref:struct:rb_node::rb_node
rb_link_node	rbtree.h	/^static inline void rb_link_node(struct rb_node * node, struct rb_node * parent,$/;"	f
rb_next	rbtree.c	/^struct rb_node *rb_next(struct rb_node *node)$/;"	f
rb_node	btrfs-list.h	/^	struct rb_node rb_node;$/;"	m	struct:root_info	typeref:struct:root_info::rb_node
rb_node	ctree.h	/^	struct rb_node rb_node;$/;"	m	struct:btrfs_root	typeref:struct:btrfs_root::rb_node
rb_node	extent-cache.h	/^	struct rb_node rb_node;$/;"	m	struct:cache_extent	typeref:struct:cache_extent::rb_node
rb_node	qgroup.c	/^	struct rb_node rb_node;$/;"	m	struct:btrfs_qgroup	typeref:struct:btrfs_qgroup::rb_node	file:
rb_node	rbtree.h	/^	struct rb_node *rb_node;$/;"	m	struct:rb_root	typeref:struct:rb_root::rb_node
rb_node	rbtree.h	/^struct rb_node$/;"	s
rb_parent	rbtree.h	116;"	d
rb_parent_color	rbtree.h	/^	unsigned long  rb_parent_color;$/;"	m	struct:rb_node
rb_prev	rbtree.c	/^struct rb_node *rb_prev(struct rb_node *node)$/;"	f
rb_replace_node	rbtree.c	/^void rb_replace_node(struct rb_node *victim, struct rb_node *new,$/;"	f
rb_right	rbtree.h	/^	struct rb_node *rb_right;$/;"	m	struct:rb_node	typeref:struct:rb_node::rb_node
rb_root	rbtree.h	/^struct rb_root$/;"	s
rb_search	rbtree.c	/^struct rb_node *rb_search(struct rb_root *root, void *key, rb_compare_keys comp,$/;"	f
rb_set_black	rbtree.h	121;"	d
rb_set_color	rbtree.h	/^static inline void rb_set_color(struct rb_node *rb, int color)$/;"	f
rb_set_parent	rbtree.h	/^static inline void rb_set_parent(struct rb_node *rb, struct rb_node *p)$/;"	f
rb_set_red	rbtree.h	120;"	d
rdev	ctree.h	/^	__le64 rdev;$/;"	m	struct:btrfs_inode_item
reachable	cmds-check.c	/^	unsigned int reachable:1;$/;"	m	struct:root_backref	file:
read_and_process_cmd	send-stream.c	/^static int read_and_process_cmd(struct btrfs_send_stream *s)$/;"	f	file:
read_buf	send-stream.c	/^	char read_buf[BTRFS_SEND_BUF_SIZE];$/;"	m	struct:btrfs_send_stream	file:
read_buf	send-stream.c	/^static int read_buf(struct btrfs_send_stream *s, void *buf, int len)$/;"	f	file:
read_chunk_block	btrfs-image.c	/^static int read_chunk_block(struct mdrestore_struct *mdres, u8 *buffer,$/;"	f	file:
read_cmd	send-stream.c	/^static int read_cmd(struct btrfs_send_stream *s)$/;"	f	file:
read_compress_length	cmds-restore.c	/^static inline size_t read_compress_length(unsigned char *buf)$/;"	f	file:
read_data_extent	btrfs-image.c	/^static int read_data_extent(struct metadump_struct *md,$/;"	f	file:
read_data_from_disk	extent_io.c	/^int read_data_from_disk(struct btrfs_fs_info *info, void *buf, u64 offset,$/;"	f
read_dev_supers	super-recover.c	/^read_dev_supers(char *filename, struct btrfs_recover_superblock *recover)$/;"	f	file:
read_disk_extent	btrfs-convert.c	/^static int read_disk_extent(struct btrfs_root *root, u64 bytenr,$/;"	f	file:
read_eb_member	ctree.h	1158;"	d
read_errors	ioctl.h	/^	__u64 read_errors;$/;"	m	struct:btrfs_scrub_progress
read_extent_buffer	extent_io.c	/^void read_extent_buffer(struct extent_buffer *eb, void *dst,$/;"	f
read_extent_from_disk	extent_io.c	/^int read_extent_from_disk(struct extent_buffer *eb,$/;"	f
read_fs_supers	super-recover.c	/^static int read_fs_supers(struct btrfs_recover_superblock *recover)$/;"	f	file:
read_node_slot	ctree.c	/^struct extent_buffer *read_node_slot(struct btrfs_root *root,$/;"	f
read_one_chunk	volumes.c	/^static int read_one_chunk(struct btrfs_root *root, struct btrfs_key *key,$/;"	f	file:
read_one_dev	volumes.c	/^static int read_one_dev(struct btrfs_root *root,$/;"	f	file:
read_physical	btrfs-find-root.c	/^static int read_physical(struct btrfs_root *root, int fd, u64 offset,$/;"	f	file:
read_tree_block	disk-io.c	/^struct extent_buffer *read_tree_block(struct btrfs_root *root, u64 bytenr,$/;"	f
read_whole_eb	disk-io.c	/^int read_whole_eb(struct btrfs_fs_info *info, struct extent_buffer *eb, int mirror)$/;"	f
reada	ctree.h	/^	int reada;$/;"	m	struct:btrfs_path
reada_for_search	ctree.c	/^void reada_for_search(struct btrfs_root *root, struct btrfs_path *path,$/;"	f
reada_walk_down	cmds-check.c	/^static void reada_walk_down(struct btrfs_root *root,$/;"	f	file:
readahead_tree_block	disk-io.c	/^int readahead_tree_block(struct btrfs_root *root, u64 bytenr, u32 blocksize,$/;"	f
readonly	ctree.h	/^	int readonly;$/;"	m	struct:btrfs_fs_info
real_used	btrfsck.h	/^	u64 real_used;$/;"	m	struct:device_record
rebuild_chunk_tree	chunk-recover.c	/^static int rebuild_chunk_tree(struct btrfs_trans_handle *trans,$/;"	f	file:
rebuild_chunk_tree	cmds-chunk.c	/^static int rebuild_chunk_tree(struct btrfs_trans_handle *trans,$/;"	f	file:
rebuild_sys_array	chunk-recover.c	/^static int rebuild_sys_array(struct recover_control *rc,$/;"	f	file:
rebuild_sys_array	cmds-chunk.c	/^static int rebuild_sys_array(struct recover_control *rc,$/;"	f	file:
received_uuid	ctree.h	/^	u8 received_uuid[BTRFS_UUID_SIZE];$/;"	m	struct:btrfs_root_item
received_uuid	send-utils.h	/^	u8 received_uuid[BTRFS_UUID_SIZE];$/;"	m	struct:subvol_info
record_bad_block_io	cmds-check.c	/^static int record_bad_block_io(struct btrfs_fs_info *info,$/;"	f	file:
record_extent	cmds-check.c	/^static int record_extent(struct btrfs_trans_handle *trans,$/;"	f	file:
record_file_blocks	btrfs-convert.c	/^static int record_file_blocks(struct btrfs_trans_handle *trans,$/;"	f	file:
recover_control	chunk-recover.c	/^struct recover_control {$/;"	s	file:
recover_control	cmds-chunk.c	/^struct recover_control {$/;"	s	file:
recover_err_str	super-recover.c	/^static void recover_err_str(int ret)$/;"	f	file:
recover_get_good_super	super-recover.c	/^static struct super_block_record *recover_get_good_super($/;"	f	file:
recover_prepare	chunk-recover.c	/^static int recover_prepare(struct recover_control *rc, char *path)$/;"	f	file:
recover_prepare	cmds-chunk.c	/^static int recover_prepare(struct recover_control *rc, char *path)$/;"	f	file:
recow	extent_io.h	/^	struct list_head recow;$/;"	m	struct:extent_buffer	typeref:struct:extent_buffer::list_head
recow_ebs	ctree.h	/^	struct list_head recow_ebs;$/;"	m	struct:btrfs_fs_info	typeref:struct:btrfs_fs_info::list_head
recow_extent_buffer	cmds-check.c	/^static int recow_extent_buffer(struct btrfs_root *root, struct extent_buffer *eb)$/;"	f	file:
recow_roots	mkfs.c	/^static void recow_roots(struct btrfs_trans_handle *trans,$/;"	f	file:
recv_args	send-test.c	/^struct recv_args {$/;"	s	file:
ref_cows	ctree.h	/^	int ref_cows;$/;"	m	struct:btrfs_root
ref_root	cmds-check.c	/^	u64 ref_root;$/;"	m	struct:root_backref	file:
ref_tree	btrfs-list.h	/^	u64 ref_tree;$/;"	m	struct:root_info
ref_type	cmds-check.c	/^	unsigned int ref_type;$/;"	m	struct:inode_backref	file:
reference_root_table	utils.c	/^static u64 reference_root_table[] = {$/;"	v	file:
referenced	ctree.h	/^	__le64 referenced;$/;"	m	struct:btrfs_qgroup_info_item
referenced_compressed	ctree.h	/^	__le64 referenced_compressed;$/;"	m	struct:btrfs_qgroup_info_item
refs	cmds-check.c	/^	u32 refs;$/;"	m	struct:inode_record	file:
refs	cmds-check.c	/^	u32 refs;$/;"	m	struct:shared_node	file:
refs	cmds-check.c	/^	u64 refs;$/;"	m	struct:extent_record	file:
refs	ctree.h	/^	__le32 refs;$/;"	m	struct:btrfs_extent_item_v0
refs	ctree.h	/^	__le32 refs;$/;"	m	struct:btrfs_root_item
refs	ctree.h	/^	__le32 refs;$/;"	m	struct:btrfs_root_item_v0
refs	ctree.h	/^	__le64 refs;$/;"	m	struct:btrfs_extent_item
refs	extent_io.h	/^	int refs;$/;"	m	struct:extent_buffer
refs	extent_io.h	/^	int refs;$/;"	m	struct:extent_state
reinit_extent_tree	cmds-check.c	/^static int reinit_extent_tree(struct btrfs_fs_info *fs_info)$/;"	f	file:
relocate_extents_range	btrfs-convert.c	/^static int relocate_extents_range(struct btrfs_root *fs_root,$/;"	f	file:
relocate_one_reference	btrfs-convert.c	/^static int relocate_one_reference(struct btrfs_trans_handle *trans,$/;"	f	file:
remove_cache_extent	extent-cache.c	/^void remove_cache_extent(struct cache_tree *tree, struct cache_extent *pe)$/;"	f
remove_chunk_extent_item	chunk-recover.c	/^static int remove_chunk_extent_item(struct btrfs_trans_handle *trans,$/;"	f	file:
remove_chunk_extent_item	cmds-chunk.c	/^static int remove_chunk_extent_item(struct btrfs_trans_handle *trans,$/;"	f	file:
remove_extent_backref	extent-tree.c	/^static int remove_extent_backref(struct btrfs_trans_handle *trans,$/;"	f	file:
remove_extent_data_ref	extent-tree.c	/^static noinline int remove_extent_data_ref(struct btrfs_trans_handle *trans,$/;"	f	file:
remove_sb_from_cache	extent-tree.c	/^static int remove_sb_from_cache(struct btrfs_root *root,$/;"	f	file:
remove_xattr	send-stream.h	/^	int (*remove_xattr)(const char *path, const char *name, void *user);$/;"	m	struct:btrfs_send_ops
rename	send-stream.h	/^	int (*rename)(const char *from, const char *to, void *user);$/;"	m	struct:btrfs_send_ops
repair	cmds-check.c	/^static int repair = 0;$/;"	v	file:
repair_ref	cmds-check.c	/^static int repair_ref(struct btrfs_trans_handle *trans,$/;"	f	file:
replace_cmd_group	cmds-replace.c	/^const struct cmd_group replace_cmd_group = {$/;"	v	typeref:struct:cmd_group
replace_cmd_group_usage	cmds-replace.c	/^static const char * const replace_cmd_group_usage[] = {$/;"	v	file:
replace_dev_result2string	cmds-replace.c	/^static const char *replace_dev_result2string(__u64 result)$/;"	f	file:
replace_state	ioctl.h	/^	__u64 replace_state;	\/* out, see #define above *\/$/;"	m	struct:btrfs_ioctl_dev_replace_status_params
rescue_cmd_group	cmds-rescue.c	/^const struct cmd_group rescue_cmd_group = {$/;"	v	typeref:struct:cmd_group
rescue_cmd_group_usage	cmds-rescue.c	/^static const char * const rescue_cmd_group_usage[] = {$/;"	v	file:
reserved	ctree.h	/^	__le64 reserved[30];$/;"	m	struct:btrfs_super_block
reserved	ctree.h	/^	__le64 reserved[4];$/;"	m	struct:btrfs_inode_item
reserved	ctree.h	/^        __le64 reserved[8]; \/* for future *\/$/;"	m	struct:btrfs_root_item
reserved	ioctl.h	/^	__u64				reserved[4];$/;"	m	struct:btrfs_ioctl_ino_path_args
reserved	ioctl.h	/^	__u64				reserved[4];$/;"	m	struct:btrfs_ioctl_logical_ino_args
reserved	ioctl.h	/^	__u64	reserved[16];		\/* in *\/$/;"	m	struct:btrfs_ioctl_received_subvol_args
reserved	ioctl.h	/^	__u64   reserved[6];$/;"	m	struct:btrfs_ioctl_quota_rescan_args
reserved	ioctl.h	/^	__u64 reserved[124];			\/* pad to 1k *\/$/;"	m	struct:btrfs_ioctl_fs_info_args
reserved	ioctl.h	/^	__u64 reserved[4];		\/* in *\/$/;"	m	struct:btrfs_ioctl_send_args
reset_balance	cmds-check.c	/^static int reset_balance(struct btrfs_trans_handle *trans,$/;"	f	file:
reset_block_groups	cmds-check.c	/^static int reset_block_groups(struct btrfs_fs_info *fs_info)$/;"	f	file:
reset_cached_block_groups	cmds-check.c	/^static void reset_cached_block_groups(struct btrfs_fs_info *fs_info)$/;"	f	file:
resolve_loop_device	utils.c	/^static int resolve_loop_device(const char* loop_dev, char* loop_file,$/;"	f	file:
resolve_root	btrfs-list.c	/^static int resolve_root(struct root_lookup *rl, struct root_info *ri,$/;"	f	file:
restore_metadump	btrfs-image.c	/^static int restore_metadump(const char *input, FILE *out, int old_restore,$/;"	f	file:
restore_worker	btrfs-image.c	/^static void *restore_worker(void *data)$/;"	f	file:
result	ioctl.h	/^	__u64 result;	\/* out *\/$/;"	m	struct:btrfs_ioctl_dev_replace_args
result	snapshot-scan.h	/^gint result;$/;"	v
result	subvolume.h	/^gint result;$/;"	v
resumed	cmds-scrub.c	/^	struct scrub_file_record *resumed;$/;"	m	struct:scrub_progress	typeref:struct:scrub_progress::scrub_file_record	file:
ret	cmds-scrub.c	/^	int ret;$/;"	m	struct:scrub_progress	file:
rfer	qgroup.c	/^	u64 rfer;	\/*referenced*\/$/;"	m	struct:btrfs_qgroup	file:
rfer_cmpr	qgroup.c	/^	u64 rfer_cmpr;	\/*referenced compressed*\/$/;"	m	struct:btrfs_qgroup	file:
right_snapshot_box	snapshot-scan.h	/^GtkWidget *left_snapshot_box,*right_snapshot_box;$/;"	v
right_subvol_box	subvolume.h	/^GtkWidget *left_subvol_box,*right_subvol_box;$/;"	v
rmdir	send-stream.h	/^	int (*rmdir)(const char *path, void *user);$/;"	m	struct:btrfs_send_ops
rmw_eb	volumes.c	/^static int rmw_eb(struct btrfs_fs_info *info,$/;"	f	file:
rnode	radix-tree.h	/^	struct radix_tree_node	*rnode;$/;"	m	struct:radix_tree_root	typeref:struct:radix_tree_root::radix_tree_node
ro	ctree.h	/^	int ro;$/;"	m	struct:btrfs_block_group_cache
root	btrfs-convert.c	/^	struct btrfs_root *root;$/;"	m	struct:blk_iterate_data	typeref:struct:blk_iterate_data::btrfs_root	file:
root	btrfs-convert.c	/^	struct btrfs_root *root;$/;"	m	struct:dir_iterate_data	typeref:struct:dir_iterate_data::btrfs_root	file:
root	btrfs-image.c	/^	struct btrfs_root *root;$/;"	m	struct:metadump_struct	typeref:struct:metadump_struct::btrfs_root	file:
root	btrfs-list.c	/^	struct rb_root root;$/;"	m	struct:root_lookup	typeref:struct:root_lookup::rb_root	file:
root	cmds-check.c	/^		u64 root;$/;"	m	union:data_backref::__anon7	file:
root	cmds-check.c	/^		u64 root;$/;"	m	union:tree_backref::__anon8	file:
root	ctree.h	/^	__le64 root;$/;"	m	struct:btrfs_extent_data_ref
root	ctree.h	/^	__le64 root;$/;"	m	struct:btrfs_extent_ref_v0
root	ctree.h	/^	__le64 root;$/;"	m	struct:btrfs_super_block
root	extent-cache.h	/^	struct rb_root root;$/;"	m	struct:cache_tree	typeref:struct:cache_tree::rb_root
root	free-space-cache.c	/^	struct btrfs_root *root;$/;"	m	struct:io_ctl	typeref:struct:io_ctl::btrfs_root	file:
root	qgroup.c	/^	struct rb_root root;$/;"	m	struct:qgroup_lookup	typeref:struct:qgroup_lookup::rb_root	file:
root	show-blocks	/^    root = row[3]$/;"	v
root_backref	cmds-check.c	/^struct root_backref {$/;"	s	file:
root_cache	cmds-check.c	/^	struct cache_tree root_cache;$/;"	m	struct:shared_node	typeref:struct:shared_node::cache_tree	file:
root_colors	show-blocks	/^root_colors = {}$/;"	v
root_dir_objectid	ctree.h	/^	__le64 root_dir_objectid;$/;"	m	struct:btrfs_super_block
root_dirid	ctree.h	/^	__le64 root_dirid;$/;"	m	struct:btrfs_root_item
root_dirid	ctree.h	/^	__le64 root_dirid;$/;"	m	struct:btrfs_root_item_v0
root_gfp_mask	radix-tree.c	/^static inline gfp_t root_gfp_mask(struct radix_tree_root *root)$/;"	f	file:
root_id	btrfs-list.h	/^	u64 root_id;$/;"	m	struct:root_info
root_id	send-utils.h	/^	u64 root_id;$/;"	m	struct:subvol_info
root_info	btrfs-list.h	/^struct root_info {$/;"	s
root_item	ctree.h	/^	struct btrfs_root_item root_item;$/;"	m	struct:btrfs_root	typeref:struct:btrfs_root::btrfs_root_item
root_key	ctree.h	/^	struct btrfs_key root_key;$/;"	m	struct:btrfs_root	typeref:struct:btrfs_root::btrfs_key
root_level	cmds-check.c	/^	int root_level;$/;"	m	struct:walk_control	file:
root_level	ctree.h	/^	u8 root_level;$/;"	m	struct:btrfs_super_block
root_lookup	btrfs-list.c	/^struct root_lookup {$/;"	s	file:
root_lookup_init	btrfs-list.c	/^static void root_lookup_init(struct root_lookup *tree)$/;"	f	file:
root_offset	btrfs-list.h	/^	u64 root_offset;$/;"	m	struct:root_info
root_path	cmds-receive.c	/^	char *root_path;$/;"	m	struct:btrfs_receive	file:
root_path	cmds-send.c	/^	char *root_path;$/;"	m	struct:btrfs_send	file:
root_path	send-test.c	/^	char *root_path;$/;"	m	struct:recv_args	file:
root_path	send-test.c	/^static char *root_path;$/;"	v	file:
root_record	cmds-check.c	/^struct root_record {$/;"	s	file:
root_stats	btrfs-calc-size.c	/^struct root_stats {$/;"	s	file:
root_tag_clear	radix-tree.c	/^static inline void root_tag_clear(struct radix_tree_root *root, unsigned int tag)$/;"	f	file:
root_tag_clear_all	radix-tree.c	/^static inline void root_tag_clear_all(struct radix_tree_root *root)$/;"	f	file:
root_tag_get	radix-tree.c	/^static inline int root_tag_get(struct radix_tree_root *root, unsigned int tag)$/;"	f	file:
root_tag_set	radix-tree.c	/^static inline void root_tag_set(struct radix_tree_root *root, unsigned int tag)$/;"	f	file:
root_tree_insert	btrfs-list.c	/^static int root_tree_insert(struct root_lookup *root_tree,$/;"	f	file:
root_tree_search	btrfs-list.c	/^static struct root_info *root_tree_search(struct root_lookup *root_tree,$/;"	f	file:
round_down	kerncompat.h	219;"	d
round_up	kerncompat.h	218;"	d
row	show-blocks	/^    row = data[datai]$/;"	v
rsv_excl	qgroup.c	/^	u64 rsv_excl;$/;"	m	struct:btrfs_qgroup	file:
rsv_exclusive	ctree.h	/^	__le64 rsv_exclusive;$/;"	m	struct:btrfs_qgroup_limit_item
rsv_exclusive	ioctl.h	/^	__u64	rsv_exclusive;$/;"	m	struct:btrfs_qgroup_limit
rsv_referenced	ctree.h	/^	__le64 rsv_referenced;$/;"	m	struct:btrfs_qgroup_limit_item
rsv_referenced	ioctl.h	/^	__u64	rsv_referenced;$/;"	m	struct:btrfs_qgroup_limit
rsv_rfer	qgroup.c	/^	u64 rsv_rfer;$/;"	m	struct:btrfs_qgroup	file:
rtime	ctree.h	/^	struct btrfs_timespec rtime;$/;"	m	struct:btrfs_root_item	typeref:struct:btrfs_root_item::btrfs_timespec
rtime	ioctl.h	/^	struct btrfs_ioctl_timespec rtime; \/* out *\/$/;"	m	struct:btrfs_ioctl_received_subvol_args	typeref:struct:btrfs_ioctl_received_subvol_args::btrfs_ioctl_timespec
rtransid	ctree.h	/^	__le64 rtransid; \/* trans when received. non-zero for received subvol *\/$/;"	m	struct:btrfs_root_item
rtransid	ioctl.h	/^	__u64	rtransid;		\/* out *\/$/;"	m	struct:btrfs_ioctl_received_subvol_args
rtransid	send-utils.h	/^	u64 rtransid;$/;"	m	struct:subvol_info
run_debug_tree	show-blocks	/^def run_debug_tree(device):$/;"	f
run_next_block	cmds-check.c	/^static int run_next_block(struct btrfs_root *root,$/;"	f	file:
running_transaction	ctree.h	/^	struct btrfs_trans_handle *running_transaction;$/;"	m	struct:btrfs_fs_info	typeref:struct:btrfs_fs_info::btrfs_trans_handle
s	cmds-scrub.c	/^	struct scrub_stats s;$/;"	m	struct:scrub_fs_stat	typeref:struct:scrub_fs_stat::scrub_stats	file:
sanitize_dir_item	btrfs-image.c	/^static void sanitize_dir_item(struct metadump_struct *md, struct extent_buffer *eb,$/;"	f	file:
sanitize_inode_ref	btrfs-image.c	/^static void sanitize_inode_ref(struct metadump_struct *md,$/;"	f	file:
sanitize_name	btrfs-image.c	/^static void sanitize_name(struct metadump_struct *md, u8 *dst,$/;"	f	file:
sanitize_names	btrfs-image.c	/^	int sanitize_names;$/;"	m	struct:metadump_struct	file:
sanitize_xattr	btrfs-image.c	/^static void sanitize_xattr(struct metadump_struct *md,$/;"	f	file:
sb	super-recover.c	/^	struct btrfs_super_block sb;$/;"	m	struct:super_block_record	typeref:struct:super_block_record::btrfs_super_block	file:
scale	show-blocks	/^    scale = 1$/;"	v
scale	show-blocks	/^    scale = 1024 * 1024 * 1024 * 1024;$/;"	v
scale	show-blocks	/^    scale = 1024 * 1024 * 1024;$/;"	v
scale	show-blocks	/^    scale = 1024 * 1024;$/;"	v
scale	show-blocks	/^    scale = 1024;$/;"	v
scalestr	show-blocks	/^    scalestr = "Bytes"$/;"	v
scalestr	show-blocks	/^    scalestr = "GB"$/;"	v
scalestr	show-blocks	/^    scalestr = "KB"$/;"	v
scalestr	show-blocks	/^    scalestr = "MB"$/;"	v
scalestr	show-blocks	/^    scalestr = "TB"$/;"	v
scan	ctree.h	/^	__le64 scan;		\/* progress during scanning *\/$/;"	m	struct:btrfs_qgroup_status_item
scan_devices	chunk-recover.c	/^static int scan_devices(struct recover_control *rc)$/;"	f	file:
scan_devices	cmds-chunk.c	/^static int scan_devices(struct recover_control *rc)$/;"	f	file:
scan_filesystem	scan-filesystem.c	/^void scan_filesystem(GtkMenuItem *item,gpointer data){$/;"	f
scan_for_btrfs	utils.c	/^int scan_for_btrfs(int where, int update_kernel)$/;"	f
scan_one_device	chunk-recover.c	/^static int scan_one_device(struct recover_control *rc, int fd,$/;"	f	file:
scan_one_device	cmds-chunk.c	/^static int scan_one_device(struct recover_control *rc, int fd,$/;"	f	file:
screen_view	scan-filesystem.c	/^GtkWidget *screen_view,*scwin;\/\/一个文本显示窗口和一个滚动条窗口$/;"	v
scroll_file_change	subvolume.h	/^GtkWidget *scroll_file_change;\/\/滚动条$/;"	v
scroll_subvol_delete	subvolume.h	/^GtkWidget *scroll_subvol_delete;$/;"	v
scroll_subvol_list	subvolume.h	/^GtkWidget *scroll_subvol_list;\/\/列出子卷$/;"	v
scrub_args	cmds-scrub.c	/^	struct btrfs_ioctl_scrub_args scrub_args;$/;"	m	struct:scrub_progress	typeref:struct:scrub_progress::btrfs_ioctl_scrub_args	file:
scrub_cmd_group	cmds-scrub.c	/^const struct cmd_group scrub_cmd_group = {$/;"	v	typeref:struct:cmd_group
scrub_cmd_group_usage	cmds-scrub.c	/^static const char * const scrub_cmd_group_usage[] = {$/;"	v	file:
scrub_datafile	cmds-scrub.c	/^static int scrub_datafile(const char *fn_base, const char *fn_local,$/;"	f	file:
scrub_file_record	cmds-scrub.c	/^struct scrub_file_record {$/;"	s	file:
scrub_fs_stat	cmds-scrub.c	/^struct scrub_fs_stat {$/;"	s	file:
scrub_handle_sigint_child	cmds-scrub.c	/^static int scrub_handle_sigint_child(int fd)$/;"	f	file:
scrub_handle_sigint_parent	cmds-scrub.c	/^static int scrub_handle_sigint_parent(void)$/;"	f	file:
scrub_kvread	cmds-scrub.c	/^static int scrub_kvread(int *i, int len, int avail, const char *buf,$/;"	f	file:
scrub_kvwrite	cmds-scrub.c	/^static int scrub_kvwrite(int fd, char *buf, int max, const char *key, u64 val)$/;"	f	file:
scrub_one_dev	cmds-scrub.c	/^static void *scrub_one_dev(void *ctx)$/;"	f	file:
scrub_open_file	cmds-scrub.c	/^static int scrub_open_file(const char *datafile, int m)$/;"	f	file:
scrub_open_file_r	cmds-scrub.c	/^static int scrub_open_file_r(const char *fn_base, const char *fn_local)$/;"	f	file:
scrub_open_file_w	cmds-scrub.c	/^static int scrub_open_file_w(const char *fn_base, const char *fn_local,$/;"	f	file:
scrub_progress	cmds-scrub.c	/^struct scrub_progress {$/;"	s	file:
scrub_progress_cycle	cmds-scrub.c	/^static void *scrub_progress_cycle(void *ctx)$/;"	f	file:
scrub_progress_cycle	cmds-scrub.c	/^struct scrub_progress_cycle {$/;"	s	file:
scrub_read_file	cmds-scrub.c	/^static struct scrub_file_record **scrub_read_file(int fd, int report_errors)$/;"	f	file:
scrub_rename_file	cmds-scrub.c	/^static int scrub_rename_file(const char *fn_base, const char *fn_local,$/;"	f	file:
scrub_resumed_stats	cmds-scrub.c	/^static struct scrub_progress *scrub_resumed_stats(struct scrub_progress *data,$/;"	f	file:
scrub_sigint_record_progress	cmds-scrub.c	/^static void scrub_sigint_record_progress(int signal)$/;"	f	file:
scrub_start	cmds-scrub.c	/^static int scrub_start(int argc, char **argv, int resume)$/;"	f	file:
scrub_stats	cmds-scrub.c	/^struct scrub_stats {$/;"	s	file:
scrub_write_buf	cmds-scrub.c	/^static int scrub_write_buf(int fd, const void *data, int len)$/;"	f	file:
scrub_write_file	cmds-scrub.c	/^static int scrub_write_file(int fd, const char *fsid,$/;"	f	file:
scrub_write_progress	cmds-scrub.c	/^static int scrub_write_progress(pthread_mutex_t *m, const char *fsid,$/;"	f	file:
scrub_writev	cmds-scrub.c	/^static int scrub_writev(int fd, char *buf, int max, const char *fmt, ...)$/;"	f	file:
scsub	main.c	/^GtkWidget *scsub;\/\/左侧滚动条$/;"	v
scwin	scan-filesystem.c	/^GtkWidget *screen_view,*scwin;\/\/一个文本显示窗口和一个滚动条窗口$/;"	v
search_bitmap	free-space-cache.c	/^static int search_bitmap(struct btrfs_free_space_ctl *ctl,$/;"	f	file:
search_cache_extent	extent-cache.c	/^struct cache_extent *search_cache_extent(struct cache_tree *tree, u64 start)$/;"	f
search_cache_extent2	extent-cache.c	/^struct cache_extent *search_cache_extent2(struct cache_tree *tree,$/;"	f
search_dir	cmds-restore.c	/^static int search_dir(struct btrfs_root *root, struct btrfs_key *key,$/;"	f	file:
search_for_chunk_blocks	btrfs-image.c	/^static int search_for_chunk_blocks(struct mdrestore_struct *mdres,$/;"	f	file:
search_for_split	ctree.h	/^	unsigned int search_for_split:1;$/;"	m	struct:btrfs_path
search_generation	btrfs-find-root.c	/^static u64 search_generation = 0;$/;"	v	file:
search_iobuf	btrfs-find-root.c	/^static int search_iobuf(struct btrfs_root *root, void *iobuf,$/;"	f	file:
search_level	btrfs-find-root.c	/^static unsigned long search_level = 0;$/;"	v	file:
search_objectid	btrfs-find-root.c	/^static u64 search_objectid = BTRFS_ROOT_TREE_OBJECTID;$/;"	v	file:
sec	ctree.h	/^	__le64 sec;$/;"	m	struct:btrfs_timespec
sec	ioctl.h	/^	__u64 sec;$/;"	m	struct:btrfs_ioctl_timespec
sector_size	btrfsck.h	/^	u32 sector_size;$/;"	m	struct:chunk_record
sector_size	ctree.h	/^	__le32 sector_size;$/;"	m	struct:btrfs_chunk
sector_size	ctree.h	/^	__le32 sector_size;$/;"	m	struct:btrfs_dev_item
sector_size	volumes.h	/^	int sector_size;$/;"	m	struct:map_lookup
sector_size	volumes.h	/^	u32 sector_size;$/;"	m	struct:btrfs_device
sectormax	show-blocks	/^sectormax = numpy.max(sectors)$/;"	v
sectormin	show-blocks	/^sectormin = 0$/;"	v
sectors	show-blocks	/^sectors = data[:,0]$/;"	v
sectorsize	chunk-recover.c	/^	u32 sectorsize;$/;"	m	struct:recover_control	file:
sectorsize	cmds-chunk.c	/^	u32 sectorsize;$/;"	m	struct:recover_control	file:
sectorsize	ctree.h	/^	__le32 sectorsize;$/;"	m	struct:btrfs_super_block
sectorsize	ctree.h	/^	u32 sectorsize;$/;"	m	struct:btrfs_root
seed	volumes.h	/^	struct btrfs_fs_devices *seed;$/;"	m	struct:btrfs_fs_devices	typeref:struct:btrfs_fs_devices::btrfs_fs_devices
seeding	volumes.h	/^	int seeding;$/;"	m	struct:btrfs_fs_devices
seek	btrfs-calc-size.c	/^struct seek {$/;"	s	file:
seek_root	btrfs-calc-size.c	/^	struct rb_root seek_root;$/;"	m	struct:root_stats	typeref:struct:root_stats::rb_root	file:
seek_speed	ctree.h	/^	u8 seek_speed;$/;"	m	struct:btrfs_dev_item
seen_fsid	cmds-filesystem.c	/^struct seen_fsid {$/;"	s	file:
seen_fsid_hash	cmds-filesystem.c	/^static struct seen_fsid *seen_fsid_hash[SEEN_FSID_HASH_SIZE] = {NULL,};$/;"	v	typeref:struct:seen_fsid	file:
select_dest_folder	subvolume_bak.c	/^void select_dest_folder(GtkWidget *widget,gpointer data){$/;"	f
send_fd	cmds-send.c	/^	int send_fd;$/;"	m	struct:btrfs_send	file:
send_fd	ioctl.h	/^	__s64 send_fd;			\/* in *\/$/;"	m	struct:btrfs_ioctl_send_args
send_ops	cmds-receive.c	/^static struct btrfs_send_ops send_ops = {$/;"	v	typeref:struct:btrfs_send_ops	file:
send_ops_print	send-test.c	/^static struct btrfs_send_ops send_ops_print = {$/;"	v	typeref:struct:btrfs_send_ops	file:
separator	main.c	/^GtkWidget *separator;\/\/分割线$/;"	v
sequence	ctree.h	/^	__le64 sequence;$/;"	m	struct:btrfs_inode_item
sequence	ctree.h	/^	__le64 sequence;$/;"	m	struct:btrfs_root_ref
set_avail_alloc_bits	extent-tree.c	/^static void set_avail_alloc_bits(struct btrfs_fs_info *fs_info, u64 flags)$/;"	f	file:
set_bit	bitops.h	/^static inline void set_bit(int nr, unsigned long *addr)$/;"	f
set_extent_bits	extent_io.c	/^int set_extent_bits(struct extent_io_tree *tree, u64 start,$/;"	f
set_extent_buffer_dirty	extent_io.c	/^int set_extent_buffer_dirty(struct extent_buffer *eb)$/;"	f
set_extent_buffer_uptodate	extent_io.c	/^int set_extent_buffer_uptodate(struct extent_buffer *eb)$/;"	f
set_extent_dirty	extent_io.c	/^int set_extent_dirty(struct extent_io_tree *tree, u64 start, u64 end,$/;"	f
set_file_xattrs	cmds-restore.c	/^static int set_file_xattrs(struct btrfs_root *root, u64 inode,$/;"	f	file:
set_label	utils.c	/^int set_label(const char *btrfs_dev, const char *label)$/;"	f
set_label_mounted	utils.c	/^static int set_label_mounted(const char *mount_path, const char *label)$/;"	f	file:
set_label_unmounted	utils.c	/^static int set_label_unmounted(const char *dev, const char *label)$/;"	f	file:
set_state_private	extent_io.c	/^int set_state_private(struct extent_io_tree *tree, u64 start, u64 private)$/;"	f
set_xattr	send-stream.h	/^	int (*set_xattr)(const char *path, const char *name, const void *data,$/;"	m	struct:btrfs_send_ops
setup_inline_extent_backref	extent-tree.c	/^static int setup_inline_extent_backref(struct btrfs_trans_handle *trans,$/;"	f	file:
setup_key	random-test.c	/^static int setup_key(struct radix_tree_root *root, struct btrfs_key *key,$/;"	f	file:
shapeit	show-blocks	/^def shapeit(X):$/;"	f
shared	cmds-check.c	/^	struct cache_tree shared;$/;"	m	struct:walk_control	typeref:struct:walk_control::cache_tree	file:
shared	kerncompat.h	/^	struct vma_shared shared;$/;"	m	struct:vm_area_struct	typeref:struct:vm_area_struct::vma_shared
shared_node	cmds-check.c	/^struct shared_node {$/;"	s	file:
shared_progress	cmds-scrub.c	/^	struct scrub_progress *shared_progress;$/;"	m	struct:scrub_progress_cycle	typeref:struct:scrub_progress_cycle::scrub_progress	file:
should_cow_block	ctree.c	/^static inline int should_cow_block(struct btrfs_trans_handle *trans,$/;"	f	file:
sigstopper	dir-test.c	/^void sigstopper(int ignored)$/;"	f
sigstopper	random-test.c	/^void sigstopper(int ignored)$/;"	f
size	btrfs-image.c	/^	__le32 size;$/;"	m	struct:meta_cluster_item	file:
size	btrfs-image.c	/^	u64 size;$/;"	m	struct:async_work	file:
size	cmds-check.c	/^	u32 size;$/;"	m	struct:block_info	file:
size	ctree.h	/^	__le32 size;$/;"	m	struct:btrfs_item
size	ctree.h	/^	__le64 size;$/;"	m	struct:btrfs_inode_item
size	extent-cache.c	/^	u64 size;$/;"	m	struct:cache_extent_search_range	file:
size	extent-cache.h	/^	u64 size;$/;"	m	struct:cache_extent
size	free-space-cache.c	/^	unsigned long size;$/;"	m	struct:io_ctl	file:
size	ioctl.h	/^			__u64 size;$/;"	m	struct:btrfs_ioctl_vol_args_v2::__anon11::__anon12
size	ioctl.h	/^	__u64				size;		\/* in *\/$/;"	m	struct:btrfs_ioctl_ino_path_args
size	ioctl.h	/^	__u64				size;		\/* in *\/$/;"	m	struct:btrfs_ioctl_logical_ino_args
size	show-blocks	/^    size = row[1]$/;"	v
size_sourcedir	mkfs.c	/^static u64 size_sourcedir(char *dir_name, u64 sectorsize,$/;"	f	file:
size_strs	utils.c	/^static char *size_strs[] = { "", "KiB", "MiB", "GiB", "TiB", "PiB", "EiB"};$/;"	v	file:
sizes	show-blocks	/^sizes = data[:,1]$/;"	v
skip	cmds-scrub.c	/^	int skip;$/;"	m	struct:scrub_progress	file:
skip_locking	ctree.h	/^	unsigned int skip_locking:1;$/;"	m	struct:btrfs_path
skip_prefix	btrfs.c	/^static inline const char *skip_prefix(const char *str, const char *prefix)$/;"	f	file:
slots	ctree.h	/^	int slots[BTRFS_MAX_LEVEL];$/;"	m	struct:btrfs_path
slots	radix-tree.c	/^	void		*slots[RADIX_TREE_MAP_SIZE];$/;"	m	struct:radix_tree_node	file:
snaps	btrfs-calc-size.c	/^	struct btrfs_key *snaps;$/;"	m	struct:fs_root	typeref:struct:fs_root::btrfs_key	file:
snapshot	send-stream.h	/^	int (*snapshot)(const char *path, const u8 *uuid, u64 ctransid,$/;"	m	struct:btrfs_send_ops
snapshot_create	snapshot-scan.c	/^void snapshot_create(GtkMenuItem *item,gpointer data){$/;"	f
snapshot_create_dialog	snapshot-scan.c	/^void snapshot_create_dialog(GtkMenuItem *item,gpointer data){$/;"	f
snapshot_details_scroll	snapshot-scan.h	/^GtkWidget *snapshot_details_scroll;$/;"	v
snapshot_dialog	snapshot-scan.h	/^GtkWidget *snapshot_dialog;$/;"	v
snapshot_dialog_box	snapshot-scan.h	/^GtkWidget *snapshot_dialog_box;$/;"	v
snapshot_icon_change	snapshot-scan.h	/^GtkWidget *snapshot_icon_change;$/;"	v
snapshot_icon_create	snapshot-scan.h	/^GtkWidget *snapshot_icon_create;$/;"	v
snapshot_icon_delete	snapshot-scan.h	/^GtkWidget *snapshot_icon_delete;$/;"	v
snapshot_icon_open	snapshot-scan.h	/^GtkWidget *snapshot_icon_open;$/;"	v
snapshot_info_column	snapshot-scan.h	/^GtkTreeViewColumn * snapshot_info_column;$/;"	v
snapshot_info_list_store	snapshot-scan.h	/^GtkWidget *snapshot_info_list_store;$/;"	v
snapshot_info_render	snapshot-scan.h	/^GtkCellRenderer* snapshot_info_render;  $/;"	v
snapshot_info_scroll_window	snapshot-scan.h	/^GtkWidget *snapshot_info_scroll_window;$/;"	v
snapshot_info_treeview	snapshot-scan.h	/^GtkWidget *snapshot_info_treeview;$/;"	v
snapshot_iter	snapshot-scan.h	/^GtkTreeIter snapshot_iter;$/;"	v
snapshot_path	btrfs-list.c	/^char snapshot_path[127][200];$/;"	v
some_csum_missing	cmds-check.c	/^	unsigned int some_csum_missing:1;$/;"	m	struct:inode_record	file:
sort_comp	btrfs-list.c	/^static int sort_comp(struct root_info *entry1, struct root_info *entry2,$/;"	f	file:
sort_comp	qgroup.c	/^static int sort_comp(struct btrfs_qgroup *entry1, struct btrfs_qgroup *entry2,$/;"	f	file:
sort_node	btrfs-list.h	/^	struct rb_node sort_node;$/;"	m	struct:root_info	typeref:struct:root_info::rb_node
sort_node	qgroup.c	/^	struct rb_node sort_node;$/;"	m	struct:btrfs_qgroup	typeref:struct:btrfs_qgroup::rb_node	file:
sort_parity_stripes	volumes.c	/^static void sort_parity_stripes(struct btrfs_multi_bio *bbio, u64 *raid_map)$/;"	f	file:
sort_tree_insert	btrfs-list.c	/^static int sort_tree_insert(struct root_lookup *sort_tree,$/;"	f	file:
sort_tree_insert	qgroup.c	/^static int sort_tree_insert(struct qgroup_lookup *sort_tree,$/;"	f	file:
space_info	ctree.h	/^	struct btrfs_space_info *space_info;$/;"	m	struct:btrfs_block_group_cache	typeref:struct:btrfs_block_group_cache::btrfs_space_info
space_info	ctree.h	/^	struct list_head space_info;$/;"	m	struct:btrfs_fs_info	typeref:struct:btrfs_fs_info::list_head
space_slots	ioctl.h	/^	__u64 space_slots;$/;"	m	struct:btrfs_ioctl_space_args
spaces	ioctl.h	/^	struct btrfs_ioctl_space_info spaces[0];$/;"	m	struct:btrfs_ioctl_space_args	typeref:struct:btrfs_ioctl_space_args::btrfs_ioctl_space_info
spare	ioctl.h	/^	__u64 spare[64];$/;"	m	struct:btrfs_ioctl_dev_replace_args
splice_shared_node	cmds-check.c	/^static int splice_shared_node(struct shared_node *src_node,$/;"	f	file:
split_eb_for_raid56	volumes.c	/^static void split_eb_for_raid56(struct btrfs_fs_info *info,$/;"	f	file:
split_leaf	ctree.c	/^static noinline int split_leaf(struct btrfs_trans_handle *trans,$/;"	f	file:
split_node	ctree.c	/^static int split_node(struct btrfs_trans_handle *trans, struct btrfs_root$/;"	f	file:
split_state	extent_io.c	/^static int split_state(struct extent_io_tree *tree, struct extent_state *orig,$/;"	f	file:
src	bcp	/^    src = args[srci]$/;"	v
src	ioctl.h	/^	__u64 src;$/;"	m	struct:btrfs_ioctl_qgroup_assign_args
src_args	bcp	/^src_args = total_args - 1$/;"	v
src_fd	ioctl.h	/^	__s64 src_fd;$/;"	m	struct:btrfs_ioctl_clone_range_args
src_length	ioctl.h	/^	__u64 src_offset, src_length;$/;"	m	struct:btrfs_ioctl_clone_range_args
src_offset	ioctl.h	/^	__u64 src_offset, src_length;$/;"	m	struct:btrfs_ioctl_clone_range_args
srcdev_name	ioctl.h	/^	__u8 srcdev_name[BTRFS_DEVICE_PATH_NAME_MAX + 1];	\/* in *\/$/;"	m	struct:btrfs_ioctl_dev_replace_start_params
srcdevid	ioctl.h	/^	__u64 srcdevid;	\/* in, if 0, use srcdev_name instead *\/$/;"	m	struct:btrfs_ioctl_dev_replace_start_params
srcname	bcp	/^            srcname = os.path.join(dirpath, f)$/;"	v
srcname	bcp	/^            srcname = os.path.join(dirpath, x)$/;"	v
start	btrfs-image.c	/^	u64 start;$/;"	m	struct:async_work	file:
start	cmds-check.c	/^	u64 start;$/;"	m	struct:block_info	file:
start	cmds-check.c	/^	u64 start;$/;"	m	struct:extent_record	file:
start	extent-cache.c	/^	u64 start;$/;"	m	struct:cache_extent_search_range	file:
start	extent-cache.h	/^	u64 start;$/;"	m	struct:cache_extent
start	extent_io.h	/^	u64 start;$/;"	m	struct:extent_buffer
start	extent_io.h	/^	u64 start;$/;"	m	struct:extent_state
start	free-space-cache.h	/^	u64 start;$/;"	m	struct:btrfs_free_space_ctl
start	ioctl.h	/^		struct btrfs_ioctl_dev_replace_start_params start;$/;"	m	union:btrfs_ioctl_dev_replace_args::__anon13	typeref:struct:btrfs_ioctl_dev_replace_args::__anon13::btrfs_ioctl_dev_replace_start_params
start	ioctl.h	/^	__u64 start;				\/* in *\/$/;"	m	struct:btrfs_ioctl_scrub_args
start	ioctl.h	/^	__u64 start;$/;"	m	struct:btrfs_ioctl_defrag_range_args
start	scan-filesystem.c	/^GtkTextIter start,end; \/\/指向buffer的头部和尾部$/;"	v
start_offset	ctree.h	/^	__le64 start_offset;$/;"	m	struct:btrfs_dev_item
stat	ioctl.h	/^	struct btrfs_balance_progress stat;	\/* out *\/$/;"	m	struct:btrfs_ioctl_balance_args	typeref:struct:btrfs_ioctl_balance_args::btrfs_balance_progress
state	extent_io.h	/^	struct cache_tree state;$/;"	m	struct:extent_io_tree	typeref:struct:extent_io_tree::cache_tree
state	extent_io.h	/^	unsigned long state;$/;"	m	struct:extent_state
state	ioctl.h	/^	__u64 state;				\/* out *\/$/;"	m	struct:btrfs_ioctl_balance_args
static_cmds_objects	Makefile	/^static_cmds_objects = $(patsubst %.o, %.static.o, $(cmds_objects))$/;"	m
static_libbtrfs_objects	Makefile	/^static_libbtrfs_objects = $(patsubst %.o, %.static.o, $(libbtrfs_objects))$/;"	m
static_objects	Makefile	/^static_objects = $(patsubst %.o, %.static.o, $(objects))$/;"	m
statinfo	bcp	/^            statinfo = os.lstat(srcname)$/;"	v
statinfo	bcp	/^        statinfo = os.lstat(src)$/;"	v
statinfo	bcp	/^        statinfo = os.stat(src)$/;"	v
stats	cmds-scrub.c	/^	struct scrub_stats stats;$/;"	m	struct:scrub_file_record	typeref:struct:scrub_file_record::scrub_stats	file:
stats	cmds-scrub.c	/^	struct scrub_stats stats;$/;"	m	struct:scrub_progress	typeref:struct:scrub_progress::scrub_stats	file:
status	ioctl.h	/^		struct btrfs_ioctl_dev_replace_status_params status;$/;"	m	union:btrfs_ioctl_dev_replace_args::__anon13	typeref:struct:btrfs_ioctl_dev_replace_args::__anon13::btrfs_ioctl_dev_replace_status_params
status	ioctl.h	/^	__u64 status;$/;"	m	struct:btrfs_ioctl_quota_ctl_args
stime	ctree.h	/^	struct btrfs_timespec stime;$/;"	m	struct:btrfs_root_item	typeref:struct:btrfs_root_item::btrfs_timespec
stime	ioctl.h	/^	struct btrfs_ioctl_timespec stime; \/* in *\/$/;"	m	struct:btrfs_ioctl_received_subvol_args	typeref:struct:btrfs_ioctl_received_subvol_args::btrfs_ioctl_timespec
stransid	ctree.h	/^	__le64 stransid; \/* trans when sent. non-zero for received subvol *\/$/;"	m	struct:btrfs_root_item
stransid	ioctl.h	/^	__u64	stransid;		\/* in *\/$/;"	m	struct:btrfs_ioctl_received_subvol_args
stransid	send-utils.h	/^	u64 stransid;$/;"	m	struct:subvol_info
strdup_or_null	btrfs-list.c	/^static char *strdup_or_null(const char *s)$/;"	f	file:
stripe	btrfsck.h	/^struct stripe {$/;"	s
stripe	ctree.h	/^	struct btrfs_stripe stripe;$/;"	m	struct:btrfs_chunk	typeref:struct:btrfs_chunk::btrfs_stripe
stripe	volumes.c	/^struct stripe {$/;"	s	file:
stripe_align	extent-tree.c	/^static u64 stripe_align(struct btrfs_root *root, u64 val)$/;"	f	file:
stripe_len	btrfsck.h	/^	u64 stripe_len;$/;"	m	struct:chunk_record
stripe_len	ctree.h	/^	__le64 stripe_len;$/;"	m	struct:btrfs_chunk
stripe_len	volumes.h	/^	int stripe_len;$/;"	m	struct:map_lookup
stripes	btrfsck.h	/^	struct stripe stripes[0];$/;"	m	struct:chunk_record	typeref:struct:chunk_record::stripe
stripes	volumes.h	/^	struct btrfs_bio_stripe stripes[];$/;"	m	struct:btrfs_multi_bio	typeref:struct:btrfs_multi_bio::btrfs_bio_stripe
stripes	volumes.h	/^	struct btrfs_bio_stripe stripes[];$/;"	m	struct:map_lookup	typeref:struct:map_lookup::btrfs_bio_stripe
stripesize	ctree.h	/^	__le32 stripesize;$/;"	m	struct:btrfs_super_block
stripesize	ctree.h	/^	u32 stripesize;$/;"	m	struct:btrfs_root
strncpy_null	utils.h	84;"	d
sub	btrfs-image.c	/^	char *sub;$/;"	m	struct:name	file:
sub_stripes	btrfsck.h	/^	u16 sub_stripes;$/;"	m	struct:chunk_record
sub_stripes	ctree.h	/^	__le16 sub_stripes;$/;"	m	struct:btrfs_chunk
sub_stripes	volumes.h	/^	int sub_stripes;$/;"	m	struct:map_lookup
subvol	send-stream.h	/^	int (*subvol)(const char *path, const u8 *uuid, u64 ctransid,$/;"	m	struct:btrfs_send_ops
subvol_create_box	subvolume.h	/^GtkWidget *subvol_create_box;\/\/子卷创建的面版$/;"	v
subvol_create_dialog	subvolume.c	/^void subvol_create_dialog(GtkMenuItem *item,gpointer data){$/;"	f
subvol_create_pack_box	subvolume.h	/^GtkWidget *subvol_create_pack_box;  \/\/包裹创建盒子$/;"	v
subvol_default_scan	subvolume_bak.c	/^void subvol_default_scan(GtkMenuItem *window,gpointer data){$/;"	f
subvol_delete_back_box	subvolume.h	/^GtkWidget *subvol_delete_back_box;$/;"	v
subvol_delete_box	subvolume.h	/^GtkWidget *subvol_delete_box;$/;"	v
subvol_details_box	subvolume.h	/^GtkWidget *subvol_details_box;\/\/右侧子卷容器$/;"	v
subvol_details_list	subvolume_bak.c	/^void subvol_details_list(GtkMenuItem *item,gpointer data){$/;"	f
subvol_details_scroll	subvolume.h	/^GtkWidget *subvol_details_scroll;$/;"	v
subvol_dialog	subvolume.h	/^GtkWidget *subvol_dialog;$/;"	v
subvol_dialog_box	subvolume.h	/^GtkWidget *subvol_dialog_box;$/;"	v
subvol_file_change	subvolume_bak.c	/^void subvol_file_change(GtkMenuItem *item,gpointer data){$/;"	f
subvol_file_scan	subvolume_bak.c	/^void subvol_file_scan(GtkMenuItem *window,gpointer data){$/;"	f
subvol_full_path	subvolume.h	/^char subvol_full_path[ACTIVE_SIZE];$/;"	v
subvol_icon_change	subvolume.h	/^GtkWidget *subvol_icon_change;$/;"	v
subvol_icon_create	subvolume.h	/^GtkWidget *subvol_icon_create;$/;"	v
subvol_icon_delete	subvolume.h	/^GtkWidget *subvol_icon_delete;$/;"	v
subvol_icon_open	subvolume.h	/^GtkWidget *subvol_icon_open;$/;"	v
subvol_info	send-utils.h	/^struct subvol_info {$/;"	s
subvol_info_column	subvolume.h	/^GtkTreeViewColumn * subvol_info_column;$/;"	v
subvol_info_list_store	subvolume.h	/^GtkWidget *subvol_info_list_store;$/;"	v
subvol_info_render	subvolume.h	/^GtkCellRenderer* subvol_info_render;  $/;"	v
subvol_info_scroll_window	subvolume.h	/^GtkWidget *subvol_info_scroll_window;$/;"	v
subvol_info_treeview	subvolume.h	/^GtkWidget *subvol_info_treeview;$/;"	v
subvol_item_box	subvolume.h	/^GtkWidget *subvol_item_box;\/\/左侧子卷列表容器$/;"	v
subvol_iter	subvolume.h	/^GtkTreeIter subvol_iter;$/;"	v
subvol_list_num	btrfs-list.c	/^int subvol_list_num = 1;$/;"	v
subvol_name_box	subvolume.h	/^GtkWidget *subvol_name_box;\/\/用于子卷名的布局$/;"	v
subvol_path	send-test.c	/^static char *subvol_path;$/;"	v	file:
subvol_readonly_scan	subvolume_bak.c	/^void subvol_readonly_scan(GtkMenuItem *window,gpointer data){$/;"	f
subvol_search_by_path	send-utils.h	/^	subvol_search_by_path,$/;"	e	enum:subvol_search_type
subvol_search_by_received_uuid	send-utils.h	/^	subvol_search_by_received_uuid,$/;"	e	enum:subvol_search_type
subvol_search_by_root_id	send-utils.h	/^	subvol_search_by_root_id,$/;"	e	enum:subvol_search_type
subvol_search_by_uuid	send-utils.h	/^	subvol_search_by_uuid,$/;"	e	enum:subvol_search_type
subvol_search_type	send-utils.h	/^enum subvol_search_type {$/;"	g
subvol_uuid_search	send-utils.c	/^struct subvol_info *subvol_uuid_search(struct subvol_uuid_search *s,$/;"	f
subvol_uuid_search	send-utils.h	/^struct subvol_uuid_search {$/;"	s
subvol_uuid_search_add	send-utils.c	/^void subvol_uuid_search_add(struct subvol_uuid_search *s,$/;"	f
subvol_uuid_search_finit	send-utils.c	/^void subvol_uuid_search_finit(struct subvol_uuid_search *s)$/;"	f
subvol_uuid_search_init	send-utils.c	/^int subvol_uuid_search_init(int mnt_fd, struct subvol_uuid_search *s)$/;"	f
subvolume_cmd_group	cmds-subvolume.c	/^const struct cmd_group subvolume_cmd_group = {$/;"	v	typeref:struct:cmd_group
subvolume_cmd_group_usage	cmds-subvolume.c	/^static const char * const subvolume_cmd_group_usage[] = {$/;"	v	file:
subvolume_create	subvolume.c	/^void subvolume_create(GtkMenuItem *item,gpointer data){$/;"	f
subvolume_create	subvolume_bak.c	/^void subvolume_create(GtkMenuItem *item,gpointer data){$/;"	f
subvolume_delete	subvolume_bak.c	/^void subvolume_delete(GtkMenuItem *window,gpointer data){$/;"	f
subvolume_list	subvolume_bak.c	/^void subvolume_list(int judge_mode_code){$/;"	f
super	dir-test.c	/^struct btrfs_super_block super;$/;"	v	typeref:struct:btrfs_super_block
super	random-test.c	/^struct btrfs_super_block super;$/;"	v	typeref:struct:btrfs_super_block
super_block_record	super-recover.c	/^struct super_block_record {$/;"	s	file:
super_bytenr	ctree.h	/^	u64 super_bytenr;$/;"	m	struct:btrfs_fs_info
super_bytes_used	volumes.h	/^	u64 super_bytes_used;$/;"	m	struct:btrfs_device
super_copy	ctree.h	/^	struct btrfs_super_block *super_copy;$/;"	m	struct:btrfs_fs_info	typeref:struct:btrfs_fs_info::btrfs_super_block
super_errors	ioctl.h	/^	__u64 super_errors;$/;"	m	struct:btrfs_scrub_progress
super_roots	ctree.h	/^	struct btrfs_root_backup super_roots[BTRFS_NUM_BACKUP_ROOTS];$/;"	m	struct:btrfs_super_block	typeref:struct:btrfs_super_block::btrfs_root_backup
sus	cmds-receive.c	/^	struct subvol_uuid_search sus;$/;"	m	struct:btrfs_receive	typeref:struct:btrfs_receive::subvol_uuid_search	file:
sus	cmds-send.c	/^	struct subvol_uuid_search sus;$/;"	m	struct:btrfs_send	typeref:struct:btrfs_send::subvol_uuid_search	file:
symlink	send-stream.h	/^	int (*symlink)(const char *path, const char *lnk, void *user);$/;"	m	struct:btrfs_send_ops
sys	ioctl.h	/^	struct btrfs_balance_args sys;		\/* in\/out *\/$/;"	m	struct:btrfs_ioctl_balance_args	typeref:struct:btrfs_ioctl_balance_args::btrfs_balance_args
sys_chunk_array	ctree.h	/^	u8 sys_chunk_array[BTRFS_SYSTEM_CHUNK_ARRAY_SIZE];$/;"	m	struct:btrfs_super_block
sys_chunk_array_size	ctree.h	/^	__le32 sys_chunk_array_size;$/;"	m	struct:btrfs_super_block
system_alloc_profile	ctree.h	/^	u64 system_alloc_profile;$/;"	m	struct:btrfs_fs_info
system_allocs	ctree.h	/^	int system_allocs;$/;"	m	struct:btrfs_fs_info
t_resumed	cmds-scrub.c	/^	time_t t_resumed;$/;"	m	struct:scrub_stats	file:
t_start	cmds-scrub.c	/^	time_t t_start;$/;"	m	struct:scrub_stats	file:
table_file_change	subvolume.h	/^GtkWidget *table_file_change;$/;"	v
table_subvol_delete	subvolume.h	/^GtkWidget *table_subvol_delete;$/;"	v
table_subvol_info_show	subvolume.h	/^GtkWidget *table_subvol_info_show;$/;"	v
table_subvol_items_scan	subvolume.h	/^GtkWidget *table_subvol_items_scan;$/;"	v
tag_clear	radix-tree.c	/^static inline void tag_clear(struct radix_tree_node *node, unsigned int tag,$/;"	f	file:
tag_get	radix-tree.c	/^static inline int tag_get(struct radix_tree_node *node, unsigned int tag,$/;"	f	file:
tag_set	radix-tree.c	/^static inline void tag_set(struct radix_tree_node *node, unsigned int tag,$/;"	f	file:
tags	radix-tree.c	/^	unsigned long	tags[RADIX_TREE_MAX_TAGS][RADIX_TREE_TAG_LONGS];$/;"	m	struct:radix_tree_node	file:
target	ioctl.h	/^	__u64 target;$/;"	m	struct:btrfs_balance_args
test_bit	kerncompat.h	/^static inline int test_bit(int nr, const volatile unsigned long *addr)$/;"	f
test_dev_for_mkfs	utils.c	/^int test_dev_for_mkfs(char *file, int force_overwrite, char *estr)$/;"	f
test_isdir	cmds-subvolume.c	/^static int test_isdir(char *path)$/;"	f	file:
test_issubvolume	cmds-subvolume.c	/^int test_issubvolume(char *path)$/;"	f
test_num_disk_vs_raid	utils.c	/^int test_num_disk_vs_raid(u64 metadata_profile, u64 data_profile,$/;"	f
test_range_bit	extent_io.c	/^int test_range_bit(struct extent_io_tree *tree, u64 start, u64 end,$/;"	f
test_skip_this_disk	utils.c	/^int test_skip_this_disk(char *path)$/;"	f
text_desp_snap	snapshot-scan.h	/^GtkWidget *text_desp_snap;$/;"	v
text_dest_folder	subvolume.h	/^GtkWidget *text_dest_folder;\/\/目标子卷的输入框$/;"	v
text_dest_subvol	subvolume.h	/^GtkWidget *text_dest_subvol;$/;"	v
text_name_snap	snapshot-scan.h	/^GtkWidget *text_name_snap;$/;"	v
text_name_subvol	subvolume.h	/^GtkWidget *text_name_subvol;$/;"	v
text_snapshot_details	snapshot-scan.h	/^GtkWidget *text_snapshot_details;$/;"	v
text_subvol_details	subvolume.h	/^GtkWidget *text_subvol_details;$/;"	v
text_subvol_name	subvolume.h	/^GtkWidget *text_subvol_name;\/\/目标子卷的$/;"	v
tgtdev_name	ioctl.h	/^	__u8 tgtdev_name[BTRFS_DEVICE_PATH_NAME_MAX + 1];	\/* in *\/$/;"	m	struct:btrfs_ioctl_dev_replace_start_params
threads	btrfs-image.c	/^	pthread_t *threads;$/;"	m	struct:mdrestore_struct	file:
threads	btrfs-image.c	/^	pthread_t *threads;$/;"	m	struct:metadump_struct	file:
ticks	show-blocks	/^ticks = []$/;"	v
ticks	show-blocks	/^ticks = a.get_yticks()$/;"	v
time2string	cmds-replace.c	/^time2string(char *buf, size_t s, __u64 t)$/;"	f	file:
time_started	ioctl.h	/^	__u64 time_started;	\/* out, seconds since 1-Jan-1970 *\/$/;"	m	struct:btrfs_ioctl_dev_replace_status_params
time_stopped	ioctl.h	/^	__u64 time_stopped;	\/* out, seconds since 1-Jan-1970 *\/$/;"	m	struct:btrfs_ioctl_dev_replace_status_params
timeval_subtract	btrfs-calc-size.c	/^static void timeval_subtract(struct timeval *result,struct timeval *x,$/;"	f	file:
title	subvolume_bak.c	/^char *title[11] = {$/;"	v
tlv_get	send-stream.c	/^static int tlv_get(struct btrfs_send_stream *s, int attr, void **data, int *len)$/;"	f	file:
tlv_get_string	send-stream.c	/^static int tlv_get_string(struct btrfs_send_stream *s, int attr, char **str)$/;"	f	file:
tlv_get_timespec	send-stream.c	/^static int tlv_get_timespec(struct btrfs_send_stream *s,$/;"	f	file:
tlv_get_uuid	send-stream.c	/^static int tlv_get_uuid(struct btrfs_send_stream *s, int attr, u8 *uuid)$/;"	f	file:
tlv_len	send.h	/^	__le16 tlv_len;$/;"	m	struct:btrfs_tlv_header
tlv_type	send.h	/^	__le16 tlv_type;$/;"	m	struct:btrfs_tlv_header
token	commands.h	/^	const char *token;$/;"	m	struct:cmd_struct
top_id	btrfs-list.h	/^	u64 top_id;$/;"	m	struct:root_info
total	btrfs-list.h	/^	int total;$/;"	m	struct:btrfs_list_comparer_set
total	btrfs-list.h	/^	int total;$/;"	m	struct:btrfs_list_filter_set
total	qgroup.h	/^	int total;$/;"	m	struct:btrfs_qgroup_comparer_set
total	qgroup.h	/^	int total;$/;"	m	struct:btrfs_qgroup_filter_set
total_args	bcp	/^total_args = len(args)$/;"	v
total_bitmaps	free-space-cache.h	/^	int total_bitmaps;$/;"	m	struct:btrfs_free_space_ctl
total_btree_bytes	cmds-check.c	/^static u64 total_btree_bytes = 0;$/;"	v	file:
total_byte	btrfsck.h	/^	u64 total_byte;$/;"	m	struct:device_record
total_bytes	btrfs-calc-size.c	/^	u64 total_bytes;$/;"	m	struct:root_stats	file:
total_bytes	ctree.h	/^	__le64 total_bytes;$/;"	m	struct:btrfs_dev_item
total_bytes	ctree.h	/^	__le64 total_bytes;$/;"	m	struct:btrfs_root_backup
total_bytes	ctree.h	/^	__le64 total_bytes;$/;"	m	struct:btrfs_super_block
total_bytes	ctree.h	/^	u64 total_bytes;$/;"	m	struct:btrfs_space_info
total_bytes	ioctl.h	/^	__u64 total_bytes;			\/* out *\/$/;"	m	struct:btrfs_ioctl_dev_info_args
total_bytes	ioctl.h	/^	__u64 total_bytes;$/;"	m	struct:btrfs_ioctl_space_info
total_bytes	volumes.h	/^	u64 total_bytes;$/;"	m	struct:btrfs_device
total_cells	show-blocks	/^total_cells = num_cells * num_cells$/;"	v
total_cluster_size	btrfs-calc-size.c	/^	u64 total_cluster_size;$/;"	m	struct:root_stats	file:
total_clusters	btrfs-calc-size.c	/^	u64 total_clusters;$/;"	m	struct:root_stats	file:
total_csum_bytes	cmds-check.c	/^static u64 total_csum_bytes = 0;$/;"	v	file:
total_data	show-blocks	/^total_data = 0$/;"	v
total_devs	volumes.h	/^	u64 total_devs;$/;"	m	struct:btrfs_device
total_extent_tree_bytes	cmds-check.c	/^static u64 total_extent_tree_bytes = 0;$/;"	v	file:
total_fs_tree_bytes	cmds-check.c	/^static u64 total_fs_tree_bytes = 0;$/;"	v	file:
total_inline	btrfs-calc-size.c	/^	u64 total_inline;$/;"	m	struct:root_stats	file:
total_ios	volumes.h	/^	u64 total_ios;$/;"	m	struct:btrfs_device
total_leaves	btrfs-calc-size.c	/^	u64 total_leaves;$/;"	m	struct:root_stats	file:
total_levels	btrfs-calc-size.c	/^	int total_levels;$/;"	m	struct:root_stats	file:
total_metadata	show-blocks	/^total_metadata = 0$/;"	v
total_nodes	btrfs-calc-size.c	/^	u64 total_nodes;$/;"	m	struct:root_stats	file:
total_pinned	ctree.h	/^	u64 total_pinned;$/;"	m	struct:btrfs_fs_info
total_seek_len	btrfs-calc-size.c	/^	u64 total_seek_len;$/;"	m	struct:root_stats	file:
total_seeks	btrfs-calc-size.c	/^	u64 total_seeks;$/;"	m	struct:root_stats	file:
total_size	free-space-cache.c	/^	u64 total_size;$/;"	m	struct:io_ctl	file:
total_spaces	ioctl.h	/^	__u64 total_spaces;$/;"	m	struct:btrfs_ioctl_space_args
track_dirty	ctree.h	/^	int track_dirty;$/;"	m	struct:btrfs_root
trans	btrfs-convert.c	/^	struct btrfs_trans_handle *trans;$/;"	m	struct:blk_iterate_data	typeref:struct:blk_iterate_data::btrfs_trans_handle	file:
trans	btrfs-convert.c	/^	struct btrfs_trans_handle *trans;$/;"	m	struct:dir_iterate_data	typeref:struct:dir_iterate_data::btrfs_trans_handle	file:
transid	ctree.h	/^	__le64 transid;$/;"	m	struct:btrfs_dir_item
transid	ctree.h	/^	__le64 transid;$/;"	m	struct:btrfs_inode_item
transid	ioctl.h	/^	__u64 transid;$/;"	m	struct:btrfs_ioctl_search_header
transid	ioctl.h	/^	__u64 transid;$/;"	m	struct:btrfs_ioctl_vol_args_v2
transid	transaction.h	/^	u64 transid;$/;"	m	struct:btrfs_trans_handle
translate	utils.c	/^static inline void translate(char *f, char *t)$/;"	f	file:
traverse_directory	mkfs.c	/^static int traverse_directory(struct btrfs_trans_handle *trans,$/;"	f	file:
tree	btrfsck.h	/^	struct cache_tree tree;$/;"	m	struct:block_group_tree	typeref:struct:block_group_tree::cache_tree
tree	btrfsck.h	/^	struct cache_tree tree;$/;"	m	struct:device_extent_tree	typeref:struct:device_extent_tree::cache_tree
tree	extent_io.h	/^	struct extent_io_tree *tree;$/;"	m	struct:extent_buffer	typeref:struct:extent_buffer::extent_io_tree
tree_backref	cmds-check.c	/^struct tree_backref {$/;"	s	file:
tree_bytes_scrubbed	ioctl.h	/^	__u64 tree_bytes_scrubbed;$/;"	m	struct:btrfs_scrub_progress
tree_colors	btrfs-fragments.c	/^enum tree_colors {$/;"	g	file:
tree_extents_scrubbed	ioctl.h	/^	__u64 tree_extents_scrubbed;$/;"	m	struct:btrfs_scrub_progress
tree_id	ioctl.h	/^	__u64 tree_id;$/;"	m	struct:btrfs_ioctl_search_key
tree_insert	btrfs-image.c	/^static void tree_insert(struct rb_root *root, struct rb_node *ins,$/;"	f	file:
tree_insert_offset	free-space-cache.c	/^static int tree_insert_offset(struct rb_root *root, u64 offset,$/;"	f	file:
tree_root	ctree.h	/^	__le64 tree_root;$/;"	m	struct:btrfs_root_backup
tree_root	ctree.h	/^	struct btrfs_root *tree_root;$/;"	m	struct:btrfs_fs_info	typeref:struct:btrfs_fs_info::btrfs_root
tree_root_gen	ctree.h	/^	__le64 tree_root_gen;$/;"	m	struct:btrfs_root_backup
tree_root_level	ctree.h	/^	u8 tree_root_level;$/;"	m	struct:btrfs_root_backup
tree_search	btrfs-image.c	/^static struct rb_node *tree_search(struct rb_root *root,$/;"	f	file:
tree_search_offset	free-space-cache.c	/^tree_search_offset(struct btrfs_free_space_ctl *ctl,$/;"	f	file:
treeid	ioctl.h	/^	__u64 treeid;$/;"	m	struct:btrfs_ioctl_ino_lookup_args
truncate	send-stream.h	/^	int (*truncate)(const char *path, u64 size, void *user);$/;"	m	struct:btrfs_send_ops
truncate_item	btrfs-image.c	/^static void truncate_item(struct extent_buffer *eb, int slot, u32 new_size)$/;"	f	file:
truncate_one_csum	file-item.c	/^static noinline int truncate_one_csum(struct btrfs_trans_handle *trans,$/;"	f	file:
try_merge_free_space	free-space-cache.c	/^static void try_merge_free_space(struct btrfs_free_space_ctl *ctl,$/;"	f	file:
try_repair_inode	cmds-check.c	/^static int try_repair_inode(struct btrfs_root *root, struct inode_record *rec)$/;"	f	file:
type	btrfsck.h	/^	u8  type;$/;"	m	struct:block_group_record
type	btrfsck.h	/^	u8  type;$/;"	m	struct:chunk_record
type	btrfsck.h	/^	u8  type;$/;"	m	struct:device_extent_record
type	btrfsck.h	/^	u8  type;$/;"	m	struct:device_record
type	ctree.h	/^	__le64 type;$/;"	m	struct:btrfs_chunk
type	ctree.h	/^	__le64 type;$/;"	m	struct:btrfs_dev_item
type	ctree.h	/^	u32 type;$/;"	m	struct:btrfs_root
type	ctree.h	/^	u8 type;$/;"	m	struct:btrfs_dir_item
type	ctree.h	/^	u8 type;$/;"	m	struct:btrfs_disk_key
type	ctree.h	/^	u8 type;$/;"	m	struct:btrfs_extent_inline_ref
type	ctree.h	/^	u8 type;$/;"	m	struct:btrfs_file_extent_item
type	ctree.h	/^	u8 type;$/;"	m	struct:btrfs_free_space_entry
type	ctree.h	/^	u8 type;$/;"	m	struct:btrfs_key
type	extent-tree.c	/^	int type;$/;"	m	struct:pending_extent_op	file:
type	ioctl.h	/^	__u32 type;$/;"	m	struct:btrfs_ioctl_search_header
type	volumes.h	/^	u64 type;$/;"	m	struct:btrfs_device
type	volumes.h	/^	u64 type;$/;"	m	struct:map_lookup
type_flags	btrfsck.h	/^	u64 type_flags;$/;"	m	struct:chunk_record
u16	kerncompat.h	/^typedef __u16 u16;$/;"	t
u16	kerncompat.h	/^typedef unsigned short u16;$/;"	t
u32	kerncompat.h	/^typedef __u32 u32;$/;"	t
u32	kerncompat.h	/^typedef unsigned int u32;$/;"	t
u64	kerncompat.h	/^typedef __u64 u64;$/;"	t
u64	kerncompat.h	/^typedef unsigned long long u64;$/;"	t
u8	kerncompat.h	/^typedef __u8 u8;$/;"	t
u8	kerncompat.h	/^typedef unsigned char u8;$/;"	t
uid	ctree.h	/^	__le32 uid;$/;"	m	struct:btrfs_inode_item
unative_t	raid6.c	/^typedef uint32_t unative_t;$/;"	t	file:
unative_t	raid6.c	/^typedef uint64_t unative_t;$/;"	t	file:
uncorrectable_errors	ioctl.h	/^	__u64 uncorrectable_errors;$/;"	m	struct:btrfs_scrub_progress
unit	free-space-cache.h	/^	int unit;$/;"	m	struct:btrfs_free_space_ctl
unlink	send-stream.h	/^	int (*unlink)(const char *path, void *user);$/;"	m	struct:btrfs_send_ops
unlink_free_space	free-space-cache.c	/^void unlink_free_space(struct btrfs_free_space_ctl *ctl,$/;"	f
unrepaired_chunks	chunk-recover.c	/^	struct list_head unrepaired_chunks;$/;"	m	struct:recover_control	typeref:struct:recover_control::list_head	file:
unrepaired_chunks	cmds-chunk.c	/^	struct list_head unrepaired_chunks;$/;"	m	struct:recover_control	typeref:struct:recover_control::list_head	file:
unsed_64	ctree.h	/^	__le64 unsed_64[4];$/;"	m	struct:btrfs_root_backup
unused	ioctl.h	/^		__u64 unused[4];$/;"	m	union:btrfs_ioctl_vol_args_v2::__anon11
unused	ioctl.h	/^	__u32 unused;$/;"	m	struct:btrfs_ioctl_search_key
unused	ioctl.h	/^	__u32 unused[4];$/;"	m	struct:btrfs_ioctl_defrag_range_args
unused	ioctl.h	/^	__u64 unused[(1024-32-sizeof(struct btrfs_scrub_progress))\/8];$/;"	m	struct:btrfs_ioctl_scrub_args
unused	ioctl.h	/^	__u64 unused[128 - 2 - BTRFS_DEV_STAT_VALUES_MAX]; \/* pad to 1k *\/$/;"	m	struct:btrfs_ioctl_get_dev_stats
unused	ioctl.h	/^	__u64 unused[379];			\/* pad to 4k *\/$/;"	m	struct:btrfs_ioctl_dev_info_args
unused	ioctl.h	/^	__u64 unused[72];			\/* pad to 1k *\/$/;"	m	struct:btrfs_ioctl_balance_args
unused	ioctl.h	/^	__u64 unused[8];$/;"	m	struct:btrfs_balance_args
unused1	ioctl.h	/^	__u64 unused1;$/;"	m	struct:btrfs_ioctl_search_key
unused2	ioctl.h	/^	__u64 unused2;$/;"	m	struct:btrfs_ioctl_search_key
unused3	ioctl.h	/^	__u64 unused3;$/;"	m	struct:btrfs_ioctl_search_key
unused4	ioctl.h	/^	__u64 unused4;$/;"	m	struct:btrfs_ioctl_search_key
unused_8	ctree.h	/^	u8 unused_8[10];$/;"	m	struct:btrfs_root_backup
unverified_errors	ioctl.h	/^	__u64 unverified_errors;$/;"	m	struct:btrfs_scrub_progress
update_block_group	extent-tree.c	/^static int update_block_group(struct btrfs_trans_handle *trans,$/;"	f	file:
update_columns_max_len	qgroup.c	/^static void update_columns_max_len(struct btrfs_qgroup *bq)$/;"	f	file:
update_cowonly_root	disk-io.c	/^static int update_cowonly_root(struct btrfs_trans_handle *trans,$/;"	f	file:
update_disk_super_on_device	btrfs-image.c	/^static int update_disk_super_on_device(struct btrfs_fs_info *info,$/;"	f	file:
update_extent	send-stream.h	/^	int (*update_extent)(const char *path, u64 offset, u64 len, void *user);$/;"	m	struct:btrfs_send_ops
update_extent_state	extent_io.c	/^static inline void update_extent_state(struct extent_state *state)$/;"	f	file:
update_inline_extent_backref	extent-tree.c	/^static int update_inline_extent_backref(struct btrfs_trans_handle *trans,$/;"	f	file:
update_pinned_extents	extent-tree.c	/^static int update_pinned_extents(struct btrfs_root *root,$/;"	f	file:
update_qgroup	qgroup.c	/^static int update_qgroup(struct qgroup_lookup *qgroup_lookup, u64 qgroupid,$/;"	f	file:
update_ref_for_cow	ctree.c	/^static noinline int update_ref_for_cow(struct btrfs_trans_handle *trans,$/;"	f	file:
update_root	btrfs-list.c	/^static int update_root(struct root_lookup *root_lookup,$/;"	f	file:
update_seeding_flag	btrfstune.c	/^static int update_seeding_flag(struct btrfs_root *root, int set_flag)$/;"	f	file:
update_space_info	extent-tree.c	/^static int update_space_info(struct btrfs_fs_info *info, u64 flags,$/;"	f	file:
update_super	btrfs-image.c	/^static int update_super(u8 *buffer)$/;"	f	file:
update_super_old	btrfs-image.c	/^static void update_super_old(u8 *buffer)$/;"	f	file:
usage	bcp	/^usage = "usage: %prog [options]"$/;"	v
usage	btrfs-calc-size.c	/^static void usage()$/;"	f	file:
usage	btrfs-crc.c	/^void usage(void)$/;"	f
usage	btrfs-find-root.c	/^static void usage(void)$/;"	f	file:
usage	btrfs-fragments.c	/^usage(void)$/;"	f
usage	help.c	/^void usage(const char * const *usagestr)$/;"	f
usage	ioctl.h	/^	__u64 usage;$/;"	m	struct:btrfs_balance_args
usage	send-test.c	/^void usage(int error)$/;"	f
usage	show-blocks	/^usage = "usage: %prog [options]"$/;"	v
usage_command	help.c	/^void usage_command(const struct cmd_struct *cmd, int full, int err)$/;"	f
usage_command_group	help.c	/^void usage_command_group(const struct cmd_group *grp, int full, int err)$/;"	f
usage_command_group_internal	help.c	/^static void usage_command_group_internal(const struct cmd_group *grp, int full,$/;"	f	file:
usage_command_internal	help.c	/^static int usage_command_internal(const char * const *usagestr,$/;"	f	file:
usage_command_usagestr	help.c	/^static void usage_command_usagestr(const char * const *usagestr,$/;"	f	file:
usagestr	commands.h	/^	const char * const *usagestr;$/;"	m	struct:cmd_group
usagestr	commands.h	/^	const char * const *usagestr;$/;"	m	struct:cmd_struct
use_color	btrfs-fragments.c	/^static int use_color;$/;"	v	file:
used	ctree.h	/^	__le64 used;$/;"	m	struct:btrfs_block_group_item
used_bytes	ioctl.h	/^	__u64 used_bytes;$/;"	m	struct:btrfs_ioctl_space_info
user	send-stream.c	/^	void *user;$/;"	m	struct:btrfs_send_stream	file:
utimes	send-stream.h	/^	int (*utimes)(const char *path, struct timespec *at,$/;"	m	struct:btrfs_send_ops
uuid	btrfs-image.c	/^	u8 uuid[BTRFS_UUID_SIZE];$/;"	m	struct:mdrestore_struct	file:
uuid	btrfs-list.h	/^	u8 uuid[BTRFS_UUID_SIZE];$/;"	m	struct:root_info
uuid	ctree.h	/^	u8 uuid[BTRFS_UUID_SIZE];$/;"	m	struct:btrfs_dev_item
uuid	ctree.h	/^	u8 uuid[BTRFS_UUID_SIZE];$/;"	m	struct:btrfs_root_item
uuid	ioctl.h	/^	__u8 uuid[BTRFS_UUID_SIZE];		\/* in\/out *\/$/;"	m	struct:btrfs_ioctl_dev_info_args
uuid	ioctl.h	/^	char	uuid[BTRFS_UUID_SIZE];	\/* in *\/$/;"	m	struct:btrfs_ioctl_received_subvol_args
uuid	send-utils.h	/^	u8 uuid[BTRFS_UUID_SIZE];$/;"	m	struct:subvol_info
uuid	volumes.h	/^	u8 uuid[BTRFS_UUID_SIZE];$/;"	m	struct:btrfs_device
uuid_search	cmds-filesystem.c	/^static int uuid_search(struct btrfs_fs_devices *fs_devices, char *search)$/;"	f	file:
uuid_tree_generation	ctree.h	/^	__le64 uuid_tree_generation;$/;"	m	struct:btrfs_super_block
val	btrfs-image.c	/^	char *val;$/;"	m	struct:name	file:
val	ioctl.h	/^	__u64	val[0];		\/* out *\/$/;"	m	struct:btrfs_data_container
values	ioctl.h	/^	__u64 values[BTRFS_DEV_STAT_VALUES_MAX];$/;"	m	struct:btrfs_ioctl_get_dev_stats
vend	ioctl.h	/^	__u64 vend;$/;"	m	struct:btrfs_balance_args
verbose	btrfs-calc-size.c	/^static int verbose = 0;$/;"	v	file:
verbose	chunk-recover.c	/^	int verbose;$/;"	m	struct:recover_control	file:
verbose	cmds-chunk.c	/^	int verbose;$/;"	m	struct:recover_control	file:
verbose	cmds-restore.c	/^static int verbose = 0;$/;"	v	file:
verify_backrefs	cmds-check.c	/^static int verify_backrefs(struct btrfs_trans_handle *trans,$/;"	f	file:
verify_errors	ioctl.h	/^	__u64 verify_errors;$/;"	m	struct:btrfs_scrub_progress
verify_parent_transid	disk-io.c	/^static int verify_parent_transid(struct extent_io_tree *io_tree,$/;"	f	file:
verify_space_cache	cmds-check.c	/^static int verify_space_cache(struct btrfs_root *root,$/;"	f	file:
verify_tree_block_csum_silent	disk-io.c	/^int verify_tree_block_csum_silent(struct extent_buffer *buf, u16 csum_size)$/;"	f
version	ctree.h	/^	__le64 version;$/;"	m	struct:btrfs_qgroup_status_item
version	send-stream.c	/^	u32 version;$/;"	m	struct:btrfs_send_stream	file:
version	send.h	/^	__le32 version;$/;"	m	struct:btrfs_stream_header
view	main.c	/^GtkWidget *view,*view1;\/\/容纳列表的视图容器$/;"	v
view1	main.c	/^GtkWidget *view,*view1;\/\/容纳列表的视图容器$/;"	v
viewport_subvol_box	subvolume.h	/^GtkWidget *viewport_subvol_box;$/;"	v
vm_area_struct	kerncompat.h	/^struct vm_area_struct {$/;"	s
vm_end	kerncompat.h	/^	unsigned long vm_end;$/;"	m	struct:vm_area_struct
vm_pgoff	kerncompat.h	/^	unsigned long vm_pgoff;$/;"	m	struct:vm_area_struct
vm_start	kerncompat.h	/^	unsigned long vm_start;$/;"	m	struct:vm_area_struct
vma_shared	kerncompat.h	/^struct vma_shared { int prio_tree_node; };$/;"	s
vstart	ioctl.h	/^	__u64 vstart;$/;"	m	struct:btrfs_balance_args
wait_for_worker	btrfs-image.c	/^static int wait_for_worker(struct mdrestore_struct *mdres)$/;"	f	file:
wait_on_tree_block_writeback	disk-io.c	/^int wait_on_tree_block_writeback(struct btrfs_root *root,$/;"	f
walk_control	cmds-check.c	/^struct walk_control {$/;"	s	file:
walk_down_tree	cmds-check.c	/^static int walk_down_tree(struct btrfs_root *root, struct btrfs_path *path,$/;"	f	file:
walk_leaf	btrfs-calc-size.c	/^static int walk_leaf(struct btrfs_root *root, struct btrfs_path *path,$/;"	f	file:
walk_nodes	btrfs-calc-size.c	/^static int walk_nodes(struct btrfs_root *root, struct btrfs_path *path,$/;"	f	file:
walk_up_tree	cmds-check.c	/^static int walk_up_tree(struct btrfs_root *root, struct btrfs_path *path,$/;"	f	file:
window_main	main.c	/^GtkWidget *window_main;\/\/主窗口$/;"	v
write	send-stream.h	/^	int (*write)(const char *path, const void *data, u64 offset, u64 len,$/;"	m	struct:btrfs_send_ops
write_all_supers	disk-io.c	/^int write_all_supers(struct btrfs_root *root)$/;"	f
write_and_map_eb	disk-io.c	/^int write_and_map_eb(struct btrfs_trans_handle *trans,$/;"	f
write_backup_supers	btrfs-image.c	/^static void write_backup_supers(int fd, u8 *buf)$/;"	f	file:
write_buf	cmds-send.c	/^static int write_buf(int fd, const void *buf, int size)$/;"	f	file:
write_buffers	btrfs-image.c	/^static int write_buffers(struct metadump_struct *md, u64 *next)$/;"	f	file:
write_ctree_super	disk-io.c	/^int write_ctree_super(struct btrfs_trans_handle *trans,$/;"	f
write_data_to_disk	extent_io.c	/^int write_data_to_disk(struct btrfs_fs_info *info, void *buf, u64 offset,$/;"	f
write_dev_supers	disk-io.c	/^static int write_dev_supers(struct btrfs_root *root,$/;"	f	file:
write_eb_member	ctree.h	1164;"	d
write_extent_buffer	extent_io.c	/^void write_extent_buffer(struct extent_buffer *eb, const void *src,$/;"	f
write_extent_to_disk	extent_io.c	/^int write_extent_to_disk(struct extent_buffer *eb)$/;"	f
write_fd	cmds-receive.c	/^	int write_fd;$/;"	m	struct:btrfs_receive	file:
write_mutex	cmds-scrub.c	/^	pthread_mutex_t *write_mutex;$/;"	m	struct:scrub_progress_cycle	file:
write_one_cache_group	extent-tree.c	/^static int write_one_cache_group(struct btrfs_trans_handle *trans,$/;"	f	file:
write_path	cmds-receive.c	/^	char *write_path;$/;"	m	struct:btrfs_receive	file:
write_raid56_with_parity	volumes.c	/^int write_raid56_with_parity(struct btrfs_fs_info *info,$/;"	f
write_tree_block	disk-io.c	/^int write_tree_block(struct btrfs_trans_handle *trans,$/;"	f
write_zero	btrfs-image.c	/^static int write_zero(FILE *out, size_t size)$/;"	f	file:
writeable	volumes.h	/^	int writeable;$/;"	m	struct:btrfs_device
x	kerncompat.h	/^struct __una_u16 { __le16 x; } __attribute__((__packed__));$/;"	m	struct:__una_u16
x	kerncompat.h	/^struct __una_u32 { __le32 x; } __attribute__((__packed__));$/;"	m	struct:__una_u32
x	kerncompat.h	/^struct __una_u64 { __le64 x; } __attribute__((__packed__));$/;"	m	struct:__una_u64
xattr_prefix_table	btrfs-convert.c	/^static char *xattr_prefix_table[] = {$/;"	v	file:
xprivate	extent_io.h	/^	u64 xprivate;$/;"	m	struct:extent_state
xvals	show-blocks	/^xvals = []$/;"	v
xycalc	show-blocks	/^def xycalc(byte):$/;"	f
yes	chunk-recover.c	/^	int yes;$/;"	m	struct:recover_control	file:
yes	cmds-chunk.c	/^	int yes;$/;"	m	struct:recover_control	file:
ylabels	show-blocks	/^ylabels = [ str(int((x * bytes_per_cell * num_cells) \/ scale)) for x in ticks ]$/;"	v
yvals	show-blocks	/^yvals = []$/;"	v
zero_blocks	utils.c	/^static int zero_blocks(int fd, off_t start, size_t len)$/;"	f	file:
zero_dev_end	utils.c	/^static int zero_dev_end(int fd, u64 dev_size)$/;"	f	file:
zero_dev_start	utils.c	/^static int zero_dev_start(int fd)$/;"	f	file:
zero_items	btrfs-image.c	/^static void zero_items(struct metadump_struct *md, u8 *dst,$/;"	f	file:
zero_output_file	mkfs.c	/^static int zero_output_file(int out_fd, u64 size, u32 sectorsize)$/;"	f	file:
